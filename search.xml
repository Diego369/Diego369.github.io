<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Stable Diffusion杂谈</title>
      <link href="/2023/08/29/diffusion/"/>
      <url>/2023/08/29/diffusion/</url>
      
        <content type="html"><![CDATA[<h2 id="前言-2">前言</h2><p>记录一下扩散模型相关知识和应用，应用主要指文生图模型Stable Diffusion及其生态。</p><p>在线体验<a href="https://stablediffusionweb.com/#demo">Stable Diffusion Online</a></p><h2 id="扩散模型相关理论">扩散模型相关理论</h2><p>详细介绍以及数学公式推导见！！！<a href="https://spaces.ac.cn/tag/%E6%89%A9%E6%95%A3/">苏剑林的科学空间</a>！！！<a href="https://www.zhangzhenhu.com/index.html"> 张振虎的博客</a>！！！</p><p>扩散模型发展至今，有许多可以研究/改进的方向，无论是应用还是算法改进。</p><p>如果是偏应用（适配下游任务等）的研究可以仅了解各个关键模型的主要贡献与不足，了解贡献中各个关键词对应公式中的哪部分变量即可。</p><p>如果做更底层（优化采样器等）的研究，再去仔细了解各个公式的推导优化过程。</p><h3 id="扩散概率模型（diffusion-probabilistic-model，-DPM）">扩散概率模型（diffusion probabilistic model， DPM）</h3><p><img src="https://cdn.jsdelivr.net/gh/Diego369/img/blog/202310091558055.png" alt=""></p><blockquote><p>模型信息：DPM，2015。</p><p>参考资料：<a href="https://www.zhangzhenhu.com/aigc/%E6%89%A9%E6%95%A3%E6%A6%82%E7%8E%87%E6%A8%A1%E5%9E%8B.html#diffusion-probabilistic-model">扩散概率模型</a></p><p>关键词：扩散。</p><p>提出扩散模型的概念，将热力学中扩散的概念引入深度学习中。</p><p>不足：每一步预测的是当前时刻t的图像，预测任务难度大，最终生成图像质量低。</p></blockquote><details class="toggle" ><summary class="toggle-button" style="">相关资料</summary><div class="toggle-content"><p>早在2015年，就由 Jascha Sohl-Dickstein 和 Eric 等人提出了概率扩散模型（diffusion probabilistic model,DPM），可以简称为扩散模型（diffusion model,DM）。 在原论文中作者表示是受到了非平衡统计物理学（non-equilibrium statistical physics） 的启发进而提出了这个模型。</p><p>从某个角度上看，扩散模型可以看做是VAE（变分自编码器）的一个扩展，相当于把 VAE 的解码器循环执行了 T 次。 我们把编码过程称为前向过程（Forward Trajectory），解码过程称逆向过程（Reverse Trajectory）， 无论前向还是逆向，每一个步骤（时刻） t 仅与它的上一个步骤（时刻）相关， 这是一个典型的马尔科夫过程（Markov chain）。</p></div></details><h3 id="降噪扩散概率模型（Denoising-diffusion-probabilistic-model-DDPM）">降噪扩散概率模型（Denoising diffusion probabilistic model, DDPM）</h3><blockquote><p>模型信息：DDPM，2020。</p><p>参考资料：<a href="https://www.zhangzhenhu.com/aigc/%E6%89%A9%E6%95%A3%E6%A6%82%E7%8E%87%E6%A8%A1%E5%9E%8B.html#denoising-diffusion-probabilistic-model-ddpm">降噪扩散概率模型</a>;  <a href="https://spaces.ac.cn/archives/9119">DDPM = 拆楼 + 建楼</a>;  <a href="https://spaces.ac.cn/archives/9152">DDPM = 自回归式VAE</a>;  <a href="https://spaces.ac.cn/archives/9164">DDPM = 贝叶斯 + 去噪</a></p><p>关键词：去噪。</p><p>与DPM预测t时刻的图像不同，DDPM预测的是t时刻添加的噪声，间接预测图像。预测噪声的难度远低于图像，生成图像质量显著提高。</p><p>不足：推理（生成图像）速度慢，通常总步数T为1000，即去噪过程要重复1000次。</p></blockquote><details class="toggle" ><summary class="toggle-button" style="">相关资料</summary><div class="toggle-content"><p>在 2020年 Ho et al 等人发表了论文 “Denoising Diffusion Probabilistic Models (DDPMs)” ，DDPM 对 DPM 做了关键的改进和优化，解决了 DPM 的一些不足，使得扩散模型生成的图像质量得到了大幅提升， 这才使得扩散模型在图像生成领域大放异彩。 DDPM 做的关键改进就是参数化模型预测的内容做了调整：</p><ul><li>不再是预测原始的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">x_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，而是预测每一个时刻添加的噪声，降低了模型的学习难度。</li></ul></div></details><h3 id="去噪扩散隐式模型（Denoising-Diffusion-Implicit-Models-DDIM）">去噪扩散隐式模型（Denoising Diffusion Implicit Models,DDIM）</h3><p><img src="https://cdn.jsdelivr.net/gh/Diego369/img/blog/202310091616288.png" alt=""></p><blockquote><p>模型信息：DDIM，2022。</p><p>参考资料：<a href="https://www.zhangzhenhu.com/aigc/ddim.html">去噪扩散隐式模型</a>;  <a href="https://spaces.ac.cn/archives/9181">DDIM = 高观点DDPM</a></p><p>关键词：加速采样。</p><p>DDPM基于马尔科夫进行公式推导，得到损失函数；DDIM则从非马尔科夫链形式进行解读与推理，证明采样过程可以直接选择1:T的子序列进行去噪采样。</p><p>例如T为1000，选择子序列长度为20，则采样速度加快了50倍。</p><p>不足：本渣看不出明显不足。因为是较早的加速采样研究，后续有一些相关的改进工作，但是个人感觉算不上大革新。</p></blockquote><details class="toggle" ><summary class="toggle-button" style="">相关资料</summary><div class="toggle-content"><p>在 DDPM 中，生成过程被定义为马尔可夫扩散过程的反向过程，在逆向采样过程的每一步，模型预测噪声</p><p>DDIM 的作者发现，扩散过程并不是必须遵循马尔科夫链， 在之后的基于分数的扩散模型以及基于随机微分等式的理论都有相同的结论。 基于此，DDIM 的作者重新定义了扩散过程和逆过程，并提出了一种新的采样技巧， 可以大幅减少采样的步骤，极大的提高了图像生成的效率，代价是牺牲了一定的多样性， 图像质量略微下降，但在可接受的范围内。</p></div></details><h3 id="条件控制生成结果">条件控制生成结果</h3><blockquote><p>模型信息：classifier guidance，2021;    Classifier-free guidance,  2022。</p><p>参考资料：<a href="https://www.zhangzhenhu.com/aigc/Guidance.html">条件控制扩散模型</a>;  <a href="https://spaces.ac.cn/archives/9257">条件控制生成结果</a></p><p>关键词：可控生成。</p><p>通常来说，“文生图模型”中的“文”为图像生成模型的控制条件。CFG在Stable Diffusion中体现为可以设置的反面提示词。</p></blockquote><details class="toggle" ><summary class="toggle-button" style="">相关资料</summary><div class="toggle-content"><p>从方法上来看，条件控制生成的方式分两种：事后修改（Classifier-Guidance）和事前训练（Classifier-Free）。</p><p>对于大多数人来说，一个SOTA级别的扩散模型训练成本太大了，而分类器（Classifier）的训练还能接受，所以就想着直接复用别人训练好的无条件扩散模型，用一个分类器来调整生成过程以实现控制生成，这就是事后修改的Classifier-Guidance方案；而对于“财大气粗”的Google、OpenAI等公司来说，它们不缺数据和算力，所以更倾向于往扩散模型的训练过程中就加入条件信号，达到更好的生成效果，这就是事前训练的Classifier-Free方案。</p><p>Classifier-Guidance方案最早出自<a href="https://arxiv.org/abs/2105.05233">《Diffusion Models Beat GANs on Image Synthesis》</a>，最初就是用来实现按类生成的；后来<a href="https://arxiv.org/abs/2112.05744">《More Control for Free! Image Synthesis with Semantic Diffusion Guidance》</a>推广了“Classifier”的概念，使得它也可以按图、按文来生成。Classifier-Guidance方案的训练成本比较低（熟悉NLP的读者可能还会想起与之很相似的<a href="https://arxiv.org/abs/1912.02164">PPLM模型</a>），但是推断成本会高些，而且控制细节上通常没那么到位。</p><p>至于Classifier-Free方案，最早出自<a href="https://arxiv.org/abs/2207.12598">《Classifier-Free Diffusion Guidance》</a>，后来的<a href="https://arxiv.org/abs/2204.06125">DALL·E 2</a>、<a href="https://arxiv.org/abs/2205.11487">Imagen</a>等吸引人眼球的模型基本上都是以它为基础做的，值得一提的是，该论文上个月才放到Arxiv上，但事实上去年已经中了NeurIPS 2021。应该说，Classifier-Free方案本身没什么理论上的技巧，它是条件扩散模型最朴素的方案，出现得晚只是因为重新训练扩散模型的成本较大吧，在数据和算力都比较充裕的前提下，Classifier-Free方案变现出了令人惊叹的细节控制能力。</p></div></details><h3 id="潜在扩散模型（Latent-diffusion-model-LDM）">潜在扩散模型（Latent diffusion model,LDM）</h3><blockquote><p>模型信息：LDM, 2021</p><p>参考资料：<a href="https://www.zhangzhenhu.com/aigc/%E7%A8%B3%E5%AE%9A%E6%89%A9%E6%95%A3%E6%A8%A1%E5%9E%8B.html#latent-diffusion-model-ldm">潜在扩散模型</a></p><p>关键词：潜在空间，条件处理。</p><p><strong>潜在空间</strong>。使用VAE的编码器与解码器，对编码后的压缩图像进行各类操作，减小了资源的消耗。</p><p><strong>条件处理</strong>。使用CLIP 模型中的 text-encoder将文本加工成特征信息，在 UNET 网络中增加 Attention 机制来利用文本特征。</p></blockquote><details class="toggle" ><summary class="toggle-button" style="">相关资料</summary><div class="toggle-content"><p>DDPM 模型在生成图像质量上效果已经非常好，但它也有个缺点， 那就是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">x_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的尺寸是和图片一致的， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">x_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>  的元素和图片的像素是一一对应的， 所以称 DDPM 是像素(pixel)空间的生成模型。 我们知道一张图片的尺寸是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mo>×</mo><mi>H</mi><mo>×</mo><mi>W</mi></mrow><annotation encoding="application/x-tex">3×H×W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span> ，如果想生成一张高尺寸的图像，  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">x_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>  的张量大小是非常大的，这就需要极大的显卡（硬件）资源，包括计算资源和显存资源。 同样的，它的训练成本也是高昂的。高昂的成本极大的限制了它在民用领用的发展。</p><p>2021年德国慕尼黑路德维希-马克西米利安大学计算机视觉和学习研究小组（原海德堡大学计算机视觉小组）， 简称 CompVis 小组，发布了论文 High-Resolution Image Synthesis with Latent Diffusion Models，针对这个问题做了一些改进， 主要的改进点有：</p><ul><li>引入一个自编码器，先对原始对象进行压缩编码，编码后的向量再应用到扩散模型。</li><li>通过在 UNET 中加入 Attention 机制，处理条件变量 y。</li></ul><p><strong>潜在空间</strong></p><p>针对 DDPM 消耗资源的问题，解决方法也简单。 引入一个自编码器，比如上一章介绍的变分编码器（VAE），先对原始图像进行压缩编码，得到图像的低维表示 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">z_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，然后 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">z_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 作为 DDPM 的输入，执行 DDPM 的算法过程，DDPM 生成的结果再经过解码器还原成图像。 由于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">z_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是压缩过的，其尺寸远远小于原始的图像，这样就能极大的减少 DDPM 资源的消耗。 压缩后 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">z_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 所在的数据空间称为潜在空间（latent space）, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">z_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 可以称为潜在数据。</p><p>这个自编码器（VAE）可以是提前预训练好的模型，在训练扩散模型时，自编码器的参数是冻住的</p><ul><li>通过使用预训练的编码器 E，我们可以将全尺寸图像编码为低维潜在空间数据（压缩数据）。</li><li>通过使用预训练的解码器 D，我们可以将潜在空间数据解码回图像。</li></ul><p>这样在 DDPM 外层增加一个 VAE 后，DDPM 的扩散过程和降噪过程都是在潜空间（Latent Space）进行， 潜空间的尺寸远远小于像素空间，极大了降低了硬件资源的需求，同时也能加速整个过程。</p><p>正向扩散过程→给潜在数据增加噪声，逆向扩散过程→从潜在数据中消除噪声。 整个 DDPM 的过程都是在潜在空间执行的， 所以这个算法被称为潜在扩散模型（Latent diffusion model,LDM）。 增加一个自编码器并没有改变 DDPM 的算法过程，所以并不需要对 DDPM 算法代码做任何改动。</p><p><strong>条件处理</strong></p><p>在 DDPM 的过程中，可以增加额外的指导信息，使其生成我们的想要的图像， 比如文本生成图像、图像生成图像等等。</p><p>用符号 y 表示额外的条件数据，用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>τ</mi><mi>θ</mi></msub></mrow><annotation encoding="application/x-tex">\tau_{\theta}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.1132em;">τ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1132em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示 y 的加工处理过程，它负责把 y 加工成特征向量。 比如，如果 y 是一段文本的 prompt， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>τ</mi><mi>θ</mi></msub></mrow><annotation encoding="application/x-tex">\tau_{\theta}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.1132em;">τ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1132em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 就是可以是一个 text-encoder， 论文中使用的预训练好的 CLIP 模型中的 text-encoder。 之所以用 CLIP 模型的 text-encoder， 是因为 CLIP 模型本身就是一个文本图像的多模态模型， 它的 text-encoder 能更贴近图像的特征空间， 这里选用一个预训练好的 CLIP 模型即可。</p><p>通过在 UNET 网络中增加 Attention 机制把文本的嵌入向量( <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>τ</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\tau_{\theta}(y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.1132em;">τ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1132em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> ） 加入到 UNET 网络中。加入不同的内容可以通过一个开关（switch）来控制。</p><ul><li>对于文本输入，它们首先使用语言模型 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>τ</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\tau_{\theta}(y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.1132em;">τ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1132em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>（例如BERT，CLIP）转换为嵌入（向量），然后通过（多头）注意（Q，K，V）层映射到U-Net。</li><li>对于其他空间对齐的输入（例如语义图、图像、修复），可以使用串联来完成调节。</li></ul><p>关于注意力机制的实现细节，可以直接参考论文代码， LDM模型论文的代码和预训练的模型已经在 Github 开源，地址为： <a href="https://github.com/CompVis/latent-diffusion">https://github.com/CompVis/latent-diffusion</a> 。</p></div></details><h2 id="Stable-Diffusion">Stable Diffusion</h2><p>LDM 本身是由 CompVis 提出并联合 Runway ML进行开发实现，后来 Stability AI 也参与进来并提供了一些资源， 联合搞了一个预训练的 LDM 模型，称为 Stable diffusion。 所以，Stable diffusion 是 LDM 的一个开源预训练模型，由于它的开源迅速火爆起来。 目前 Stable diffusion 已经占据了图像生成开源领域的主导地位。</p><blockquote><p>Stable Diffusion 是LDM的<strong>开源预训练</strong>模型。</p><p>开源：社区开发者可以参与，所以目前社区生态丰富，各种实际应用项目不断出现。</p><p>预训练：有条件可以继续微调。例如各种风格的lora模型，直接使用同种画风或者相同角色的图片继续微调（至过拟合），最终生成类似风格的图片；或者各种ControlNet模型，在UNet模块上增强，引入额外的控制条件，模型更可控。</p></blockquote><p>研究的话通常使用huggingface 开源库 <a href="https://huggingface.co/docs/diffusers/index">diffusers</a> 中的实现，如果缺少需要的实现则fork代码自行修改，仅应用的话则使用<a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui#stable-diffusion-web-ui">Stable Diffusion web UI</a>。</p><p>diffusers 把模型的核心逻辑都封装在各种 DiffusionPipeline 中， StableDiffusionPipeline 核心代码在 <code>diffusers.StableDiffusionPipeline</code> ，看初始化代码，可明显看到整个 StableDiffusionPipeline 包含几个关键组件：vae,text_encoder/tokenizer,unet,scheduler等。 这几个组件和 LDM 中是对应的。</p><ul><li>vae: VAE 自编码器，负责前后的编解码（压缩、解压缩）工作。</li><li>text_encoder/tokenizer: 文本编码器，负责对文本Prompt进行编码处理。</li><li>unet: 噪声预测模型，也是DDPM的核心。</li><li>scheduler: 负责降噪过程（逆过程）的计算，也就是实现 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">x_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>−&gt;<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">x_{t-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span> ，对应着 DDPM、DDIM、ODE等不同的降采样实现。</li></ul><blockquote><p>SD关键部分即：三个模型组件+1个采样器组件。</p><p>研究上，可以针对某一个组件进行强化，相关研究已经有很多：</p><ol><li>微调强化vae的解码器，生成图片分辨率更高；</li><li>对unet继续微调，普通形式微调、lora训练画风、ControlNet训练可控生成；</li><li>一般重新训练模型模型才会改变文本编码器，例如Stable Diffusion v2；</li><li>继续优化scheduler采样器，提高生成质量或者效率，需要数学基础。</li></ol><p>还可以对下游任务进行适配，例如图生图、图像修复等。</p></blockquote><details class="toggle" ><summary class="toggle-button" style="">图像修复代码示例</summary><div class="toggle-content"><p>进行图生图或图像修复时，可以不去finetune SD模型，只是扩展了它的能力，但是这两样功能就需要精确调整参数才能得到满意的生成效果。 这里给出<code>StableDiffusionInpaintPipelineLegacy</code>这个pipeline内部的核心代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> PIL</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> diffusers <span class="keyword">import</span> AutoencoderKL, UNet2DConditionModel, DDIMScheduler</span><br><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> CLIPTextModel, CLIPTokenizer</span><br><span class="line"><span class="keyword">from</span> tqdm.auto <span class="keyword">import</span> tqdm</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">preprocess_mask</span>(<span class="params">mask</span>):</span><br><span class="line">    mask = mask.convert(<span class="string">&quot;L&quot;</span>)</span><br><span class="line">    w, h = mask.size</span><br><span class="line">    w, h = <span class="built_in">map</span>(<span class="keyword">lambda</span> x: x - x % <span class="number">32</span>, (w, h))  <span class="comment"># resize to integer multiple of 32</span></span><br><span class="line">    mask = mask.resize((w // <span class="number">8</span>, h // <span class="number">8</span>), resample=PIL.Image.NEAREST)</span><br><span class="line">    mask = np.array(mask).astype(np.float32) / <span class="number">255.0</span></span><br><span class="line">    mask = np.tile(mask, (<span class="number">4</span>, <span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line">    mask = mask[<span class="literal">None</span>].transpose(<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)  <span class="comment"># what does this step do?</span></span><br><span class="line">    mask = <span class="number">1</span> - mask  <span class="comment"># repaint white, keep black</span></span><br><span class="line">    mask = torch.from_numpy(mask)</span><br><span class="line">    <span class="keyword">return</span> mask</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">preprocess</span>(<span class="params">image</span>):</span><br><span class="line">    w, h = image.size</span><br><span class="line">    w, h = <span class="built_in">map</span>(<span class="keyword">lambda</span> x: x - x % <span class="number">32</span>, (w, h))  <span class="comment"># resize to integer multiple of 32</span></span><br><span class="line">    image = image.resize((w, h), resample=PIL.Image.LANCZOS)</span><br><span class="line">    image = np.array(image).astype(np.float32) / <span class="number">255.0</span></span><br><span class="line">    image = image[<span class="literal">None</span>].transpose(<span class="number">0</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">    image = torch.from_numpy(image)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">2.0</span> * image - <span class="number">1.0</span></span><br><span class="line"></span><br><span class="line">model_id = <span class="string">&quot;runwayml/stable-diffusion-v1-5&quot;</span></span><br><span class="line"><span class="comment"># 1. 加载autoencoder</span></span><br><span class="line">vae = AutoencoderKL.from_pretrained(model_id, subfolder=<span class="string">&quot;vae&quot;</span>)</span><br><span class="line"><span class="comment"># 2. 加载tokenizer和text encoder </span></span><br><span class="line">tokenizer = CLIPTokenizer.from_pretrained(model_id, subfolder=<span class="string">&quot;tokenizer&quot;</span>)</span><br><span class="line">text_encoder = CLIPTextModel.from_pretrained(model_id, subfolder=<span class="string">&quot;text_encoder&quot;</span>)</span><br><span class="line"><span class="comment"># 3. 加载扩散模型UNet</span></span><br><span class="line">unet = UNet2DConditionModel.from_pretrained(model_id, subfolder=<span class="string">&quot;unet&quot;</span>)</span><br><span class="line"><span class="comment"># 4. 定义noise scheduler</span></span><br><span class="line">noise_scheduler = DDIMScheduler(</span><br><span class="line">    num_train_timesteps=<span class="number">1000</span>,</span><br><span class="line">    beta_start=<span class="number">0.00085</span>,</span><br><span class="line">    beta_end=<span class="number">0.012</span>,</span><br><span class="line">    beta_schedule=<span class="string">&quot;scaled_linear&quot;</span>,</span><br><span class="line">    clip_sample=<span class="literal">False</span>, <span class="comment"># don&#x27;t clip sample, the x0 in stable diffusion not in range [-1, 1]</span></span><br><span class="line">    set_alpha_to_one=<span class="literal">False</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将模型复制到GPU上</span></span><br><span class="line">device = <span class="string">&quot;cuda&quot;</span></span><br><span class="line">vae.to(device, dtype=torch.float16)</span><br><span class="line">text_encoder.to(device, dtype=torch.float16)</span><br><span class="line">unet = unet.to(device, dtype=torch.float16)</span><br><span class="line"></span><br><span class="line">prompt = <span class="string">&quot;a mecha robot sitting on a bench&quot;</span></span><br><span class="line">strength = <span class="number">0.75</span></span><br><span class="line">guidance_scale = <span class="number">7.5</span></span><br><span class="line">batch_size = <span class="number">1</span></span><br><span class="line">num_inference_steps = <span class="number">50</span></span><br><span class="line">negative_prompt = <span class="string">&quot;&quot;</span></span><br><span class="line">generator = torch.Generator(device).manual_seed(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> torch.no_grad():</span><br><span class="line">    <span class="comment"># 获取prompt的text_embeddings</span></span><br><span class="line">    text_input = tokenizer(prompt, padding=<span class="string">&quot;max_length&quot;</span>, max_length=tokenizer.model_max_length, truncation=<span class="literal">True</span>, return_tensors=<span class="string">&quot;pt&quot;</span>)</span><br><span class="line">    text_embeddings = text_encoder(text_input.input_ids.to(device))[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># 获取unconditional text embeddings</span></span><br><span class="line">    max_length = text_input.input_ids.shape[-<span class="number">1</span>]</span><br><span class="line">    uncond_input = tokenizer(</span><br><span class="line">        [negative_prompt] * batch_size, padding=<span class="string">&quot;max_length&quot;</span>, max_length=max_length, return_tensors=<span class="string">&quot;pt&quot;</span></span><br><span class="line">    )</span><br><span class="line">    uncond_embeddings = text_encoder(uncond_input.input_ids.to(device))[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># 拼接batch</span></span><br><span class="line">    text_embeddings = torch.cat([uncond_embeddings, text_embeddings])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 设置采样步数</span></span><br><span class="line">    noise_scheduler.set_timesteps(num_inference_steps, device=device)</span><br><span class="line">    <span class="comment"># 根据strength计算timesteps</span></span><br><span class="line">    init_timestep = <span class="built_in">min</span>(<span class="built_in">int</span>(num_inference_steps * strength), num_inference_steps)</span><br><span class="line">    t_start = <span class="built_in">max</span>(num_inference_steps - init_timestep, <span class="number">0</span>)</span><br><span class="line">    timesteps = noise_scheduler.timesteps[t_start:]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 预处理init_image</span></span><br><span class="line">    init_input = preprocess(input_image)</span><br><span class="line">    init_latents = vae.encode(init_input.to(device, dtype=torch.float16)).latent_dist.sample(generator)</span><br><span class="line">    init_latents = <span class="number">0.18215</span> * init_latents</span><br><span class="line">    init_latents = torch.cat([init_latents] * batch_size, dim=<span class="number">0</span>)</span><br><span class="line">    init_latents_orig = init_latents</span><br><span class="line">    <span class="comment"># 处理mask</span></span><br><span class="line">    mask_image = preprocess_mask(input_mask)</span><br><span class="line">    mask_image = mask_image.to(device=device, dtype=init_latents.dtype)</span><br><span class="line">    mask = torch.cat([mask_image] * batch_size)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 给init_latents加噪音</span></span><br><span class="line">    noise = torch.randn(init_latents.shape, generator=generator, device=device, dtype=init_latents.dtype)</span><br><span class="line">    init_latents = noise_scheduler.add_noise(init_latents, noise, timesteps[:<span class="number">1</span>])</span><br><span class="line">    latents = init_latents <span class="comment"># 作为初始latents</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Do denoise steps</span></span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> tqdm(timesteps):</span><br><span class="line">        <span class="comment"># 这里latens扩展2份，是为了同时计算unconditional prediction</span></span><br><span class="line">        latent_model_input = torch.cat([latents] * <span class="number">2</span>)</span><br><span class="line">        latent_model_input = noise_scheduler.scale_model_input(latent_model_input, t) <span class="comment"># for DDIM, do nothing</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 预测噪音</span></span><br><span class="line">        noise_pred = unet(latent_model_input, t, encoder_hidden_states=text_embeddings).sample</span><br><span class="line"></span><br><span class="line">        <span class="comment"># CFG</span></span><br><span class="line">        noise_pred_uncond, noise_pred_text = noise_pred.chunk(<span class="number">2</span>)</span><br><span class="line">        noise_pred = noise_pred_uncond + guidance_scale * (noise_pred_text - noise_pred_uncond)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 计算上一步的noisy latents：x_t -&gt; x_t-1</span></span><br><span class="line">        latents = noise_scheduler.step(noise_pred, t, latents).prev_sample</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 将unmask区域替换原始图像的nosiy latents</span></span><br><span class="line">        init_latents_proper = noise_scheduler.add_noise(init_latents_orig, noise, torch.tensor([t]))</span><br><span class="line">        latents = (init_latents_proper * mask) + (latents * (<span class="number">1</span> - mask))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 注意要对latents进行scale</span></span><br><span class="line">    latents = <span class="number">1</span> / <span class="number">0.18215</span> * latents</span><br><span class="line">    image = vae.decode(latents).sample</span><br></pre></td></tr></table></figure></div></details><h3 id="风格化finetune模型"><strong>风格化finetune模型</strong></h3><p>SD的另外一大应用是采用特定风格的数据集进行finetune，这使得<strong>模型“过拟合”在特定的风格上</strong>。之前比较火的novelai就是基于二次元数据在SD上finetune的模型，虽然它失去了生成其它风格图像的能力，但是它在二次元图像的生成效果上比原来的SD要好很多。</p><p>目前已经有很多风格化的模型在huggingface上开源，这里也列出一些：</p><ul><li><a href="https://huggingface.co/andite/anything-v4.0">andite/anything-v4.0</a>：二次元或者动漫风格图像</li><li><a href="https://huggingface.co/dreamlike-art/dreamlike-diffusion-1.0">dreamlike-art/dreamlike-diffusion-1.0</a>：艺术风格图像</li><li><a href="https://huggingface.co/prompthero/openjourney">prompthero/openjourney</a>：mdjrny-v4风格图像</li></ul><p>更多的模型可以直接在<a href="https://huggingface.co/models%3Fpipeline_tag%3Dtext-to-image%26sort%3Ddownloads">huggingface text-to-image模型库</a>上找到。此外，很多基于SD进行finetune的模型开源在<a href="https://civitai.com/">civitai</a>上，你也可以在这个网站上找到更多风格的模型。 值得说明的一点是，目前finetune SD模型的方法主要有两种：一种是直接finetune了UNet，但是容易过拟合，而且存储成本；另外一种低成本的方法是基于微软的<a href="https://arxiv.org/abs/2106.09685">LoRA</a>，LoRA本来是用于finetune语言模型的，但是现在已经可以用来finetune SD模型了，具体可以见博客<a href="https://huggingface.co/blog/lora">Using LoRA for Efficient Stable Diffusion Fine-Tuning</a>。</p><h3 id="可控生成"><strong>可控生成</strong></h3><p>可控生成是SD最近比较火的应用，这主要归功于<a href="https://github.com/lllyasviel/ControlNet">ControlNet</a>，基于ControlNet可以实现对很多种类的可控生成，比如边缘，人体关键点，草图和深度图等等。</p><p>其实在ControlNet之前，也有一些可控生成的工作，比如<a href="https://huggingface.co/stabilityai/stable-diffusion-2-depth">stable-diffusion-2-depth</a>也属于可控生成，但是都没有太火。ControlNet之所以火，是因为这个工作直接实现了各种各种的可控生成，而且训练的ControlNet可以迁移到其它基于SD finetune的模型上（见<a href="https://github.com/lllyasviel/ControlNet/discussions/12">Transfer Control to Other SD1.X Models</a>）。与ControlNet同期的工作还有腾讯的<a href="https://github.com/TencentARC/T2I-Adapter">T2I-Adapter</a>以及阿里的<a href="https://damo-vilab.github.io/composer-page/">composer-page</a>。</p><h3 id="stable-diffusion-webui"><strong>stable-diffusion-webui</strong></h3><p>最后要介绍的一个比较火的应用<a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui">stable-diffusion-webui</a>其实是用来支持SD出图的一个web工具，它算是基于<a href="https://gradio.app/">gradio</a>框架实现了SD的快速部署，不仅支持SD的最基础的文生图、图生图以及图像inpainting功能，还支持SD的其它拓展功能，很多基于SD的拓展应用可以用插件的方式安装在webui上。</p><h2 id="相关资源">相关资源</h2><p>huggingface 开源文档: <a href="https://huggingface.co/docs/diffusers/index">diffusers</a></p><p><a href="https://github.com/CompVis/stable-diffusion#stable-diffusion">Stable Diffusion</a></p><p><a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui">stable-diffusion-webui</a></p><p><a href="https://github.com/lllyasviel/ControlNet">ControlNet</a></p><p><a href="https://huggingface.co/blog/zh/lora">LoRA</a></p><p><a href="https://spaces.ac.cn/tag/%E6%89%A9%E6%95%A3/">苏剑林的科学空间</a></p><p><a href="https://www.zhangzhenhu.com/index.html"> 张振虎的博客</a></p>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
          <category> 扩散模型 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Stable Diffusion </tag>
            
            <tag> LoRA </tag>
            
            <tag> ControlNet </tag>
            
            <tag> AIGC </tag>
            
            <tag> Diffusion </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>blog笔记</title>
      <link href="/2023/07/08/note-blog/"/>
      <url>/2023/07/08/note-blog/</url>
      
        <content type="html"><![CDATA[<h2 id="前言-3">前言</h2><p>不记得在哪里看到的一句话：“个人博客的尽头是GitHub Page”。</p><p>之前在服务器上折腾前后端分离式的博客，风格仿照<a href="https://github.com/jerryc127/hexo-theme-butterfly">hexo-theme-butterfly</a>主题，因为有服务器，很方便添加评论、聊天室等功能。动态博客可以在网页端编辑文章，搭建博客学到了很多东西，但是本人的核心需求仅有：</p><ul><li>markdown笔记</li></ul><p>这一项，近期服务器到期，于是回归了静态博客，一直没有总结静态博客的整体配置，今天记录一下。</p><p>GitHub为每个账户提供了一个GitHub Page，通过上传静态页面到<code>username.github.io</code>仓库，来展示个人经历等信息。</p><p>这个静态页面仓库允许上传多个页面文件，于是便有了基于GitHub Page的个人博客。</p><h2 id="配置环境">配置环境</h2><p>参考<a href="https://hexo.io/zh-cn/docs/">hexo文档</a>操作。</p><p>安装 Hexo 相当简单，只需要先安装下列应用程序即可：</p><ul><li><a href="http://nodejs.org/">Node.js</a> (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)</li><li><a href="http://git-scm.com/">Git</a></li></ul><p>如果您的电脑中已经安装上述必备程序，那么恭喜您！你可以直接前往 <a href="https://hexo.io/zh-cn/docs/#%E5%AE%89%E8%A3%85-Hexo">安装 Hexo</a> 步骤。</p><p>如果您的电脑中尚未安装所需要的程序，请根据以下安装指示完成安装。</p><h3 id="安装-Git">安装 Git</h3><ul><li>Windows：下载并安装 <a href="https://git-scm.com/download/win">git</a>。</li><li>Mac：使用 <a href="http://mxcl.github.com/homebrew/">Homebrew</a>, <a href="http://www.macports.org/">MacPorts</a> 或者下载 <a href="http://sourceforge.net/projects/git-osx-installer/">安装程序</a>。</li><li>Linux (Ubuntu, Debian)：<code>sudo apt-get install git-core</code></li><li>Linux (Fedora, Red Hat, CentOS)：<code>sudo yum install git-core</code></li></ul><blockquote><p>Mac 用户</p><p>如果在编译时可能会遇到问题，请先到 App Store 安装 Xcode，Xcode 完成后，启动并进入 <strong>Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install</strong> 安装命令行工具。</p></blockquote><blockquote><p>Windows 用户</p><p>对于中国大陆地区用户，可以前往 <a href="https://npmmirror.com/mirrors/git-for-windows/">淘宝 Git for Windows 镜像</a> 下载 git 安装包。</p></blockquote><h3 id="安装-Node-js">安装 Node.js</h3><p>Node.js 为大多数平台提供了官方的 <a href="https://nodejs.org/zh-cn/download/">安装程序</a>。对于中国大陆地区用户，可以前往 <a href="https://npmmirror.com/mirrors/node/">淘宝 Node.js 镜像</a> 下载。</p><p>其它的安装方法：</p><ul><li>Windows：通过 <a href="https://github.com/jasongin/nvs/">nvs</a>（推荐）或者 <a href="https://github.com/nvm-sh/nvm">nvm</a> 安装。</li><li>Mac：使用 <a href="https://brew.sh/">Homebrew</a> 或 <a href="http://www.macports.org/">MacPorts</a> 安装。</li><li>Linux（DEB/RPM-based）：从 <a href="https://github.com/nodesource/distributions">NodeSource</a> 安装。</li><li>其它：使用相应的软件包管理器进行安装，可以参考由 Node.js 提供的 <a href="https://nodejs.org/zh-cn/download/package-manager/">指导</a>。</li></ul><p>对于 Mac 和 Linux 同样建议使用 nvs 或者 nvm，以避免可能会出现的权限问题。</p><blockquote><p>Windows 用户</p><p>使用 Node.js 官方安装程序时，请确保勾选 <strong>Add to PATH</strong> 选项（默认已勾选）</p></blockquote><blockquote><p>For Mac / Linux 用户</p><p>如果在尝试安装 Hexo 的过程中出现 <code>EACCES</code> 权限错误，请遵循 <a href="https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally">由 npmjs 发布的指导</a> 修复该问题。强烈建议 <strong>不要</strong> 使用 root、sudo 等方法覆盖权限</p></blockquote><blockquote><p>Linux</p><p>如果您使用 Snap 来安装 Node.js，在 <a href="https://hexo.io/zh-cn/docs/commands#init">初始化</a> 博客时您可能需要手动在目标文件夹中执行 <code>npm install</code>。</p></blockquote><h2 id="hexo框架">hexo框架</h2><p>本博客基于<a href="https://hexo.io/zh-cn/">hexo</a>框架，使用如下命令快速启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>使用<code>hexo server</code>或者简写的<code>hexo s</code>启动服务进行测试，使用如下代码部署服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean <span class="comment">#清除缓存，若是网页正常情况下可以忽略这条命令</span></span><br><span class="line">hexo generate <span class="comment">#生成</span></span><br><span class="line">hexo deploy <span class="comment">#部署</span></span><br></pre></td></tr></table></figure><p>首次部署前，需要修改config文件，配置github仓库地址</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:username/username.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><h2 id="butterfly主题">butterfly主题</h2><p>本博客使用的主题是<a href="https://github.com/jerryc127/hexo-theme-butterfly">hexo-theme-butterfly</a>，在<code>themes/</code>文件夹中clone仓库，npm环境参考github。</p><p>参考<a href="https://butterfly.js.org/">butterfly中文文档</a>对具体配置进行修改，例如导航栏设置、社交信息、右下角按钮等等。</p><h2 id="魔改主题">魔改主题</h2><p>网页样式有多种方式来改变，如果config文件提供了可配置的变量，直接修改即可，例如本博客渐变背景对应config文件的代码为：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">background:</span> <span class="string">&#x27;linear-gradient(90deg,</span></span><br><span class="line"><span class="string">    rgba(247, 149, 51, 0.1) 0,</span></span><br><span class="line"><span class="string">    rgba(243, 112, 85, 0.1) 15%,</span></span><br><span class="line"><span class="string">    rgba(239, 78, 123, 0.1) 30%,</span></span><br><span class="line"><span class="string">    rgba(161, 102, 171, 0.1) 44%,</span></span><br><span class="line"><span class="string">    rgba(80, 115, 184, 0.1) 58%,</span></span><br><span class="line"><span class="string">    rgba(16, 152, 173, 0.1) 72%,</span></span><br><span class="line"><span class="string">    rgba(7, 179, 155, 0.1) 86%,</span></span><br><span class="line"><span class="string">    rgba(109, 186, 130, 0.1) 100%)&#x27;</span></span><br></pre></td></tr></table></figure><p>或者引入外部css与js文件，相关config代码如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Inject</span></span><br><span class="line"><span class="comment"># Insert the code to head (before &#x27;&lt;/head&gt;&#x27; tag) and the bottom (before &#x27;&lt;/body&gt;&#x27; tag)</span></span><br><span class="line"><span class="comment"># 插入代码到头部 &lt;/head&gt; 之前 和 底部 &lt;/body&gt; 之前</span></span><br><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="comment"># - &lt;link rel=&quot;stylesheet&quot; href=&quot;/background.css&quot;&gt;</span></span><br><span class="line">    <span class="comment"># - &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css&quot;&gt;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/custom.css&quot;&gt;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;/live2d-widget/autoload.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="comment"># - &lt;script src=&quot;xxxx&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p>本博客标题样式（转动小风车）即通过上述方法修改，相关css代码如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 文章页H1-H6图标样式效果 */</span></span><br><span class="line"><span class="selector-tag">h1</span><span class="selector-pseudo">::before</span>, <span class="selector-tag">h2</span><span class="selector-pseudo">::before</span>, <span class="selector-tag">h3</span><span class="selector-pseudo">::before</span>, <span class="selector-tag">h4</span><span class="selector-pseudo">::before</span>, <span class="selector-tag">h5</span><span class="selector-pseudo">::before</span>, <span class="selector-tag">h6</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    -webkit-<span class="attribute">animation</span>: ccc <span class="number">1.6s</span> linear infinite ;</span><br><span class="line">    <span class="attribute">animation</span>: ccc <span class="number">1.6s</span> linear infinite ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> ccc &#123;</span><br><span class="line">    <span class="number">0%</span> &#123;</span><br><span class="line">        -webkit-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>);</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">to</span> &#123;</span><br><span class="line">        -webkit-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">1turn</span>);</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">1turn</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> ccc &#123;</span><br><span class="line">    <span class="number">0%</span> &#123;</span><br><span class="line">        -webkit-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>);</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">to</span> &#123;</span><br><span class="line">        -webkit-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">1turn</span>);</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">1turn</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h1</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#5ec1e0</span> ;</span><br><span class="line">    <span class="attribute">margin-left</span>: -<span class="number">1.55rem</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1.3rem</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">0.23rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h2</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#57c850</span> ;</span><br><span class="line">    <span class="attribute">margin-left</span>: -<span class="number">1.35rem</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1.1rem</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">0.12rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h3</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#a9e000</span> ;</span><br><span class="line">    <span class="attribute">margin-left</span>: -<span class="number">1.22rem</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">0.95rem</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">0.09rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h4</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ffbf00</span> ;</span><br><span class="line">    <span class="attribute">margin-left</span>: -<span class="number">1.05rem</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">0.8rem</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">0.09rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h5</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fb7061</span> ;</span><br><span class="line">    <span class="attribute">margin-left</span>: -<span class="number">0.9rem</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">0.7rem</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">0.0rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h6</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ef50a8</span> ;</span><br><span class="line">    <span class="attribute">margin-left</span>: -<span class="number">0.9rem</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">0.66rem</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">0.0rem</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>定位元素</strong></p><p>可以查看<a href="https://github.com/jerryc127/hexo-theme-butterfly">hexo-theme-butterfly</a>仓库找示例。</p><p>更简单的方法是利用谷歌浏览器<kbd>F12</kbd>，使用检查功能查看元素标签类别等信息，定位元素后编写相应的css或js代码即可。</p><h2 id="自动部署">自动部署</h2><p>每次使用Hexo框架写博客时，每次都要经历清除、生成、部署流程，GitHub Page仓库中为生成的html、css、js等文件，本地markdown文件则上传到github作为备份，可以使用Github Actions可以实现自动化工作流。</p><p>参考<a href="https://blog.diegoxy.com/2022/04/09/github-action-hexo/">利用 Github Actions 自动部署 Hexo博客</a></p><h2 id="评论">评论</h2><div class="tabs" id="comment"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="comment-1">通用配置</button><button type="button" class="tab " data-href="comment-2">gitalk</button><button type="button" class="tab " data-href="comment-3">Valine</button></ul><div class="tab-contents"><div class="tab-item-content active" id="comment-1"><p>修改<code>_config.butterfly.yml</code>如下部分来配置评论</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">comments:</span></span><br><span class="line">  <span class="comment"># Up to two comments system, the first will be shown as default</span></span><br><span class="line">  <span class="comment"># Choose: Disqus/Disqusjs/Livere/Gitalk/Valine/Waline/Utterances/Facebook Comments/Twikoo/Giscus</span></span><br><span class="line">  <span class="attr">use:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">gitalk</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Valine</span></span><br><span class="line">  <span class="attr">text:</span> <span class="literal">true</span> <span class="comment"># Display the comment name next to the button</span></span><br><span class="line">  <span class="comment"># lazyload: The comment system will be load when comment element enters the browser&#x27;s viewport.</span></span><br><span class="line">  <span class="comment"># If you set it to true, the comment count will be invalid</span></span><br><span class="line">  <span class="attr">lazyload:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">count:</span> <span class="literal">false</span> <span class="comment"># Display comment count in post&#x27;s top_img</span></span><br><span class="line">  <span class="attr">card_post_count:</span> <span class="literal">false</span> <span class="comment"># Display comment count in Home Page</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>解释</th></tr></thead><tbody><tr><td>use</td><td>使用的评论（请注意，最多支持两个，如果不需要请留空）<br/>注意：双评论不能是 Disqus 和 Disqusjs 一起，由于其共用同一个 ID，会出错</td></tr><tr><td>text</td><td>是否显示评论服务商的名字</td></tr><tr><td>lazyload</td><td>是否为评论开启lazyload，开启后，只有滚动到评论位置时才会加载评论所需要的资源（开启 lazyload 后，评论数将不显示）</td></tr><tr><td>count</td><td>是否在文章顶部显示评论数<br/>livere、Giscus 和 utterances 不支持评论数显示</td></tr><tr><td>card_post_count</td><td>是否在首页文章卡片显示评论数<br/>gitalk、livere 、Giscus 和 utterances 不支持评论数显示</td></tr></tbody></table></div><div class="tab-item-content" id="comment-2"><p>遵循 <a href="https://github.com/gitalk/gitalk">gitalk</a>的指示去获取你的 github Oauth 应用的 client id 和 secret 值。以及查看它的相关配置説明。</p><p>然后修改 主题配置文件:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">gitalk:</span></span><br><span class="line">  <span class="attr">client_id:</span></span><br><span class="line">  <span class="attr">client_secret:</span></span><br><span class="line">  <span class="attr">repo:</span></span><br><span class="line">  <span class="attr">owner:</span></span><br><span class="line">  <span class="attr">admin:</span></span><br><span class="line">  <span class="attr">option:</span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="comment-3"><p>遵循 <a href="https://github.com/xCss/Valine">Valine</a>的指示去配置你的 LeanCloud 应用。以及查看相应的配置説明。</p><p>然后修改 主题配置文件:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">appId:</span> <span class="comment"># leancloud application app id</span></span><br><span class="line">  <span class="attr">appKey:</span> <span class="comment"># leancloud application app key</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">monsterid</span> <span class="comment"># gravatar style https://valine.js.org/#/avatar</span></span><br><span class="line">  <span class="attr">serverURLs:</span> <span class="comment"># This configuration is suitable for domestic custom domain name users, overseas version will be automatically detected (no need to manually fill in)</span></span><br><span class="line">  <span class="attr">bg:</span> <span class="comment"># valine background</span></span><br><span class="line">  <span class="attr">visitor:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">option:</span></span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="参考资料-7">参考资料</h2><ul><li><a href="https://hexo.io/zh-cn/">hexo</a></li><li><a href="https://butterfly.js.org/">butterfly中文文档</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>规范化 Commit</title>
      <link href="/2023/06/08/commit-style/"/>
      <url>/2023/06/08/commit-style/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>记录一下git日志的规范化写法，采用<a href="https://link.segmentfault.com/?enc=mCaAEgBvL2Jm4DqszXIgKg%3D%3D.Uial8HB2dsBeu0emyNlYTenFR59Yu%2BPK7uq1BtwFfePJxwdDEnm8zYSvNvyVlXN6JWuKo9vpISf7D%2FoEOeBPcr5X6Yh%2ByEsgNq%2FyA5tRiPrpKbFPCI7PPOpHt4XLMxirO3GTDpa5XaCSv222mBU8kw%3D%3D">Angular 规范</a>。</p><h2 id="提交格式">提交格式</h2><p>每次提交，Commit message 都包括三个部分：header，body 和 footer。</p><p>其中，header 是必需的，body 和 footer 可以省略。</p><p>不管是哪一个部分，任何一行都不得超过72个字符（或100个字符）。这是为了避免自动换行影响美观。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;</span><br><span class="line">&lt;BLANK LINE&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;BLANK LINE&gt;</span><br><span class="line">&lt;footer&gt;</span><br></pre></td></tr></table></figure><p>Header部分只有一行，包括三个字段：type（必需）、scope（可选）和subject（必需）。</p><p><strong>参数说明如下：</strong></p><div class="tabs" id="param"><ul class="nav-tabs no-default"><button type="button" class="tab " data-href="param-1">type（必需）</button><button type="button" class="tab " data-href="param-2">scope</button><button type="button" class="tab " data-href="param-3">subject（必需）</button><button type="button" class="tab " data-href="param-4">Body</button><button type="button" class="tab " data-href="param-5">Footer</button><button type="button" class="tab " data-href="param-6">Revert参数补充</button></ul><div class="tab-contents"><div class="tab-item-content" id="param-1"><blockquote><p>用于说明 git commit 的类别，只允许使用下面的标识。</p><p>以下表格来自<a href="https://zhuanlan.zhihu.com/p/182553920?utm_source=org.mozilla.firefox">阿里技术</a></p></blockquote><table><thead><tr><th style="text-align:center">标识</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center"><code>feat</code></td><td style="text-align:center">新功能（feature）</td></tr><tr><td style="text-align:center"><code>fix/to</code></td><td style="text-align:center">修复 bug，可以是 QA 发现的 BUG，也可以是研发自己发现的 BUG。 <code>fix</code>：产生 diff 并自动修复此问题。适合于一次提交直接修复问题 <code>to</code>：只产生 diff 不自动修复此问题。适合于多次提交。最终修复问题提交时使用 fix</td></tr><tr><td style="text-align:center"><code>docs</code></td><td style="text-align:center">文档（documentation）</td></tr><tr><td style="text-align:center"><code>style</code></td><td style="text-align:center">格式（不影响代码运行的变动）</td></tr><tr><td style="text-align:center"><code>refactor</code></td><td style="text-align:center">重构（即不是新增功能，也不是修改 bug 的代码变动）。</td></tr><tr><td style="text-align:center"><code>perf</code></td><td style="text-align:center">优化相关，比如提升性能、体验。</td></tr><tr><td style="text-align:center"><code>test</code></td><td style="text-align:center">增加测试。</td></tr><tr><td style="text-align:center"><code>chore</code></td><td style="text-align:center">构建过程或辅助工具的变动。</td></tr><tr><td style="text-align:center"><code>revert</code></td><td style="text-align:center">回滚到上一个版本。</td></tr><tr><td style="text-align:center"><code>merge</code></td><td style="text-align:center">代码合并。</td></tr><tr><td style="text-align:center"><code>sync</code></td><td style="text-align:center">同步主线或分支的 Bug。</td></tr></tbody></table></div><div class="tab-item-content" id="param-2"><p><code>scope</code>用于说明 commit 影响的范围，比如数据层、控制层、视图层等等，视项目不同而不同。</p><p>例如在<code>Angular</code>，可以是<code>$location</code>, <code>$browser</code>, <code>$compile</code>, <code>$rootScope</code>, <code>ngHref</code>, <code>ngClick</code>, <code>ngView</code>等。</p><p>如果你的修改影响了不止一个<code>scope</code>，你可以使用<code>*</code>代替。</p></div><div class="tab-item-content" id="param-3"><p><code>subject</code>是 commit 目的的简短描述，不超过50个字符。</p><p>其他注意事项：</p><ul><li>以动词开头，使用第一人称现在时，比如change，而不是changed或changes</li><li>第一个字母小写</li><li>结尾不加句号（.）</li></ul></div><div class="tab-item-content" id="param-4"><p>Body 部分是对本次 commit 的详细描述，可以分成多行。下面是一个范例。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">More detailed explanatory text, if necessary.  Wrap it to </span><br><span class="line">about 72 characters or so. </span><br><span class="line"></span><br><span class="line">Further paragraphs come after blank lines.</span><br><span class="line"></span><br><span class="line">- Bullet points are okay, too</span><br><span class="line">- Use a hanging indent</span><br></pre></td></tr></table></figure><p>有两个注意点:</p><ul><li>使用第一人称现在时，比如使用change而不是changed或changes。</li><li>永远别忘了第2行是空行</li><li>应该说明代码变动的动机，以及与以前行为的对比。</li></ul></div><div class="tab-item-content" id="param-5"><p>Footer 部分只用于以下两种情况：</p><p><strong>不兼容变动</strong></p><p>如果当前代码与上一个版本不兼容，则 Footer 部分以BREAKING CHANGE开头，后面是对变动的描述、以及变动理由和迁移方法。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">BREAKING CHANGE: isolate scope bindings definition has changed.</span><br><span class="line"></span><br><span class="line">    To migrate the code follow the example below:</span><br><span class="line"></span><br><span class="line">    Before:</span><br><span class="line"></span><br><span class="line">    scope: &#123;</span><br><span class="line">      myAttr: &#x27;attribute&#x27;,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    After:</span><br><span class="line"></span><br><span class="line">    scope: &#123;</span><br><span class="line">      myAttr: &#x27;@&#x27;,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    The removed `inject` wasn&#x27;t generaly useful for directives so there should be no code using it.</span><br></pre></td></tr></table></figure><p><strong>关闭 Issue</strong></p><p>如果当前 commit 针对某个issue，那么可以在 Footer 部分关闭这个 issue 。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Closes #234</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="param-6"><p>还有一种特殊情况，如果当前 commit 用于撤销以前的 commit，则必须以revert:开头，后面跟着被撤销 Commit 的 Header。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">revert: feat(pencil): add &#x27;graphiteWidth&#x27; option</span><br><span class="line"></span><br><span class="line">This reverts commit 667ecc1654a317a13331b17617d973392f415f02.</span><br></pre></td></tr></table></figure><p>Body部分的格式是固定的，必须写成<code>This reverts commit &lt;hash&gt;</code>.，其中的hash是被撤销 commit 的 SHA 标识符。</p><p>如果当前 commit 与被撤销的 commit，在同一个发布（release）里面，那么它们都不会出现在 Change log 里面。如果两者在不同的发布，那么当前 commit，会出现在 Change log 的Reverts小标题下面。</p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="作用">作用</h2><h3 id="提供更多的历史信息，方便快速浏览。">提供更多的历史信息，方便快速浏览。</h3><p>比如，下面的命令显示上次发布后的变动，每个commit占据一行。你只看行首，就知道某次 commit 的目的。</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="keyword">log</span> &lt;<span class="keyword">last</span> tag&gt; HEAD --pretty=<span class="keyword">format</span>:%s</span><br></pre></td></tr></table></figure><h3 id="可以过滤某些commit（比如文档改动），便于快速查找信息">可以过滤某些commit（比如文档改动），便于快速查找信息</h3><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> &lt;<span class="keyword">last</span> release&gt; HEAD <span class="comment">--grep feature</span></span><br></pre></td></tr></table></figure><h2 id="使用-2">使用</h2><h3 id="Commitizen">Commitizen</h3><p>可以使用典型的git工作流程或通过使用CLI向导<a href="https://link.segmentfault.com/?enc=T8I2tuP6Hg3IrbF3wkMuiw%3D%3D.K50MwNYfBXyoE89aGlcnN7INdmsM23i3z89%2BYSSJqCmPbsIt0aEwWtHywIBu6wto">Commitizen</a>来添加提交消息格式。</p><h4 id="安装">安装</h4><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> -g commitizen</span><br></pre></td></tr></table></figure><p>然后，在项目目录里，运行下面的命令，使其支持 Angular 的 Commit message 格式。</p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">commitizen init cz</span><span class="literal">-</span><span class="comment">conventional</span><span class="literal">-</span><span class="comment">changelog</span> <span class="literal">--</span><span class="comment">save</span> <span class="literal">--</span><span class="comment">save</span><span class="literal">-</span><span class="comment">exact</span></span><br></pre></td></tr></table></figure><p>以后，凡是用到<code>git commit</code>命令，一律改为使用<code>git cz</code>。这时，就会出现选项，用来生成符合格式的 Commit message。</p><h3 id="validate-commit-msg">validate-commit-msg</h3><p><a href="https://link.segmentfault.com/?enc=8KGJKrlzK1n9KTslwJX3Ig%3D%3D.sIxMWY8BSbGpe66jAiZGZkq347K%2FMBPx%2BbgOXlWiHxosdGsECtMTIV2b7O42M2%2BKic%2FtCf5bZG%2B7UEAbqlh1KQ%3D%3D">validate-commit-msg</a> 用于检查项目的 Commit message 是否符合Angular规范。</p><p>该包提供了使用githooks来校验<code>commit message</code>的一些二进制文件。在这里，我推荐使用<a href="https://link.segmentfault.com/?enc=c3lZLhGRX9nP7HFna5XhVw%3D%3D.tT16ltGOr7scWfVH8pfLnVBM%2BFOBdDldVoQ1l93nKME%3D">husky</a>，只需要添加<code>&quot;commitmsg&quot;: &quot;validate-commit-msg&quot;</code>到你的<code>package.json</code>中的<code>nam scripts</code>即可.</p><p>当然，你还可以通过定义配置文件<code>.vcmrc</code>来自定义校验格式。详细使用请见文档 <a href="https://link.segmentfault.com/?enc=Hzlqa5Cn%2B%2FwSQFxZ3153SQ%3D%3D.MRDJshHSDtCsaFjTVS8VnXxROwLoikpvNzMSzU8%2F1njUuic0SKfYo3HWVEuzqNhhDdhu6CIjmgnpBjn7lFlkMQ%3D%3D">validate-commit-msg</a></p><h3 id="生成-Change-log">生成 Change log</h3><p>如果你的所有 Commit 都符合 Angular 格式，那么发布新版本时， Change log 就可以用脚本自动生成。生成的文档包括以下三个部分：</p><ul><li>New features</li><li>Bug fixes</li><li>Breaking changes.</li></ul><p>每个部分都会罗列相关的 commit ，并且有指向这些 commit 的链接。当然，生成的文档允许手动修改，所以发布前，你还可以添加其他内容。</p><p><a href="https://link.segmentfault.com/?enc=rXF5i1ZPrnqm3KFqmzBnIQ%3D%3D.pTskION6nFalDqlJRBBkz%2BGksrSieDVKE4u3DRttKyCHSYhwphq6PIoQsSexBPevyxYyfQSa1RXoRuYbotgG7g%3D%3D">conventional-changelog</a> 就是生成 Change log 的工具，运行下面的命令即可。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> npm install <span class="literal">-g</span> conventional<span class="literal">-changelog</span></span><br><span class="line"><span class="variable">$</span> <span class="built_in">cd</span> my<span class="literal">-project</span></span><br><span class="line"><span class="variable">$</span> conventional<span class="literal">-changelog</span> <span class="literal">-p</span> angular <span class="literal">-i</span> CHANGELOG.md <span class="literal">-w</span></span><br></pre></td></tr></table></figure><h3 id="VScode">VScode</h3><p>vscode 中 <code>Git-commit-plugin</code> 插件可以快速生成提交模板。</p><p>设置项</p><ul><li><p>展示 Emoji</p><p>默认为 <code>true</code>。可在设置中修改</p></li><li><p>提交类型</p><p>增加其他的提交类型，需要在 json 中添加。</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">JSON&quot;GitCommitPlugin.CustomCommitType&quot;: [</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;label&quot;: &quot;customTypeName&quot;,</span><br><span class="line">    &quot;detail&quot;: &quot;customTypeDetail&quot;</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li><li><p>subject 最大长度</p><p>subject 的最大长度限制，默认为 20。可在设置中修改。</p></li></ul><h2 id="表情">表情</h2><p>commit中可以使用表情符号</p><table><thead><tr><th style="text-align:center">emoji</th><th style="text-align:center">emoji 代码</th><th style="text-align:center">commit 说明</th></tr></thead><tbody><tr><td style="text-align:center">🎨 (调色板)</td><td style="text-align:center"><code>:art:</code></td><td style="text-align:center">改进代码结构 / 代码格式</td></tr><tr><td style="text-align:center">⚡️ (闪电) 🐎 (赛马)</td><td style="text-align:center"><code>:zap:</code> <code>:racehorse:</code></td><td style="text-align:center">提升性能</td></tr><tr><td style="text-align:center">🔥 (火焰)</td><td style="text-align:center"><code>:fire:</code></td><td style="text-align:center">移除代码或文件</td></tr><tr><td style="text-align:center">🐛 (bug)</td><td style="text-align:center"><code>:bug:</code></td><td style="text-align:center">修复 bug</td></tr><tr><td style="text-align:center">🚑 (急救车)</td><td style="text-align:center"><code>:ambulance:</code></td><td style="text-align:center">重要补丁</td></tr><tr><td style="text-align:center">✨ (火花)</td><td style="text-align:center"><code>:sparkles:</code></td><td style="text-align:center">引入新功能</td></tr><tr><td style="text-align:center">📝 (备忘录)</td><td style="text-align:center"><code>:memo:</code></td><td style="text-align:center">撰写文档</td></tr><tr><td style="text-align:center">🚀 (火箭)</td><td style="text-align:center"><code>:rocket:</code></td><td style="text-align:center">部署功能</td></tr><tr><td style="text-align:center">💄 (口红)</td><td style="text-align:center"><code>:lipstick:</code></td><td style="text-align:center">更新 UI 和样式文件</td></tr><tr><td style="text-align:center">🎉 (庆祝)</td><td style="text-align:center"><code>:tada:</code></td><td style="text-align:center">初次提交</td></tr><tr><td style="text-align:center">✅ (白色复选框)</td><td style="text-align:center"><code>:white_check_mark:</code></td><td style="text-align:center">更新测试</td></tr><tr><td style="text-align:center">🔒 (锁)</td><td style="text-align:center"><code>:lock:</code></td><td style="text-align:center">修复安全问题</td></tr><tr><td style="text-align:center">🍎 (苹果)</td><td style="text-align:center"><code>:apple:</code></td><td style="text-align:center">修复 macOS 下的问题</td></tr><tr><td style="text-align:center">🐧 (企鹅)</td><td style="text-align:center"><code>:penguin:</code></td><td style="text-align:center">修复 Linux 下的问题</td></tr><tr><td style="text-align:center">🏁 (旗帜)</td><td style="text-align:center"><code>:checkered_flag:</code></td><td style="text-align:center">修复 Windows 下的问题</td></tr><tr><td style="text-align:center">🤖（机器人）</td><td style="text-align:center"><code>:robot:</code></td><td style="text-align:center">修复 Android 下的问题</td></tr><tr><td style="text-align:center">🍏 (绿苹果)</td><td style="text-align:center"><code>:green_apple:</code></td><td style="text-align:center">修复 iOS 下的问题</td></tr><tr><td style="text-align:center">🔖 (书签)</td><td style="text-align:center"><code>:bookmark:</code></td><td style="text-align:center">发行 / 版本标签</td></tr><tr><td style="text-align:center">🚨 (警车灯)</td><td style="text-align:center"><code>:rotating_light:</code></td><td style="text-align:center">移除 linter 警告</td></tr><tr><td style="text-align:center">🚧 (施工)</td><td style="text-align:center"><code>:construction:</code></td><td style="text-align:center">工作进行中</td></tr><tr><td style="text-align:center">👷 (工人)</td><td style="text-align:center"><code>:construction_worker:</code></td><td style="text-align:center">添加 CI 构建系统</td></tr><tr><td style="text-align:center">💚 (绿心)</td><td style="text-align:center"><code>:green_heart:</code></td><td style="text-align:center">修复 CI 构建问题</td></tr><tr><td style="text-align:center">⬆️ (上升箭头)</td><td style="text-align:center"><code>:arrow_up:</code></td><td style="text-align:center">升级依赖</td></tr><tr><td style="text-align:center">⬇️ (下降箭头)</td><td style="text-align:center"><code>:arrow_down:</code></td><td style="text-align:center">降级依赖</td></tr><tr><td style="text-align:center">📌 (图钉)</td><td style="text-align:center"><code>:pushpin:</code></td><td style="text-align:center">将依赖项固定到特定版本</td></tr><tr><td style="text-align:center">📈 (上升趋势图)</td><td style="text-align:center"><code>:chart_with_upwards_trend:</code></td><td style="text-align:center">添加分析或跟踪代码</td></tr><tr><td style="text-align:center">♻️ （回收）</td><td style="text-align:center"><code>:recycle:</code></td><td style="text-align:center">重构代码</td></tr><tr><td style="text-align:center">🐳 (鲸鱼)</td><td style="text-align:center"><code>:whale:</code></td><td style="text-align:center">Docker 相关工作</td></tr><tr><td style="text-align:center">🌐 (带子午线的地球仪)</td><td style="text-align:center"><code>:globe_with_meridians:</code></td><td style="text-align:center">国际化与本地化</td></tr><tr><td style="text-align:center">➕ (加号)</td><td style="text-align:center"><code>:heavy_plus_sign:</code></td><td style="text-align:center">增加一个依赖</td></tr><tr><td style="text-align:center">➖ (减号)</td><td style="text-align:center"><code>:heavy_minus_sign:</code></td><td style="text-align:center">减少一个依赖</td></tr><tr><td style="text-align:center">🔧 (扳手)</td><td style="text-align:center"><code>:wrench:</code></td><td style="text-align:center">修改配置文件</td></tr><tr><td style="text-align:center">🔨 (锤子)</td><td style="text-align:center"><code>:hammer:</code></td><td style="text-align:center">重大重构</td></tr><tr><td style="text-align:center">✏️ (铅笔)</td><td style="text-align:center"><code>:pencil2:</code></td><td style="text-align:center">修复 typo</td></tr><tr><td style="text-align:center">💩 (粑粑…)</td><td style="text-align:center"><code>:hankey:</code></td><td style="text-align:center">写了辣鸡代码需要优化</td></tr><tr><td style="text-align:center">⏪ (倒带)</td><td style="text-align:center"><code>:rewind:</code></td><td style="text-align:center">恢复更改</td></tr><tr><td style="text-align:center">🔀 (交叉向右的箭头)</td><td style="text-align:center"><code>:twisted_rightwards_arrows:</code></td><td style="text-align:center">合并分支</td></tr><tr><td style="text-align:center">📦 (包裹)</td><td style="text-align:center"><code>:package:</code></td><td style="text-align:center">更新编译的文件或包</td></tr><tr><td style="text-align:center">👽 (外星人)</td><td style="text-align:center"><code>:alien:</code></td><td style="text-align:center">由于外部 API 更改而更新代码</td></tr><tr><td style="text-align:center">🚚 (货车)</td><td style="text-align:center"><code>:truck:</code></td><td style="text-align:center">移动或者重命名文件</td></tr><tr><td style="text-align:center">📄 (正面朝上的页面)</td><td style="text-align:center"><code>:page_facing_up:</code></td><td style="text-align:center">增加或更新许可证书</td></tr><tr><td style="text-align:center">💥 (爆炸)</td><td style="text-align:center"><code>:boom:</code></td><td style="text-align:center">引入突破性的变化</td></tr><tr><td style="text-align:center">🍱 (铅笔)</td><td style="text-align:center"><code>:bento:</code></td><td style="text-align:center">增加或更新资源</td></tr><tr><td style="text-align:center">👌 (OK 手势)</td><td style="text-align:center"><code>:ok_hand:</code></td><td style="text-align:center">由于代码审查更改而更新代码</td></tr><tr><td style="text-align:center">♿️ (轮椅)</td><td style="text-align:center"><code>:wheelchair:</code></td><td style="text-align:center">改善无障碍交互</td></tr><tr><td style="text-align:center">💡 (灯泡)</td><td style="text-align:center"><code>:bulb:</code></td><td style="text-align:center">给代码添加注释</td></tr><tr><td style="text-align:center">🍻 (啤酒)</td><td style="text-align:center"><code>:beers:</code></td><td style="text-align:center">醉醺醺地写代码…</td></tr><tr><td style="text-align:center">💬 (消息气泡)</td><td style="text-align:center"><code>:speech_balloon:</code></td><td style="text-align:center">更新文本文档</td></tr><tr><td style="text-align:center">🗃 (卡片文件盒)</td><td style="text-align:center"><code>:card_file_box:</code></td><td style="text-align:center">执行与数据库相关的更改</td></tr><tr><td style="text-align:center">🔊 (音量大)</td><td style="text-align:center"><code>:loud_sound:</code></td><td style="text-align:center">增加日志</td></tr><tr><td style="text-align:center">🔇 (静音)</td><td style="text-align:center"><code>:mute:</code></td><td style="text-align:center">移除日志</td></tr><tr><td style="text-align:center">👥 (轮廓中的半身像)</td><td style="text-align:center"><code>:busts_in_silhouette:</code></td><td style="text-align:center">增加贡献者</td></tr><tr><td style="text-align:center">🚸 (孩童通行)</td><td style="text-align:center"><code>:children_crossing:</code></td><td style="text-align:center">优化用户体验、可用性</td></tr><tr><td style="text-align:center">🏗 (建筑建造)</td><td style="text-align:center"><code>:building_construction:</code></td><td style="text-align:center">结构变动</td></tr><tr><td style="text-align:center">📱 (iPhone)</td><td style="text-align:center"><code>:iphone:</code></td><td style="text-align:center">做响应式设计</td></tr><tr><td style="text-align:center">🤡 (小丑脸)</td><td style="text-align:center"><code>:clown_face:</code></td><td style="text-align:center">嘲弄事物（直译，这个没明白）</td></tr><tr><td style="text-align:center">🥚 (鸡蛋)</td><td style="text-align:center"><code>:egg:</code></td><td style="text-align:center">增加彩蛋</td></tr><tr><td style="text-align:center">🙈 (看不见邪恶)</td><td style="text-align:center"><code>:see_no_evil:</code></td><td style="text-align:center">增加或更改 gitignore</td></tr><tr><td style="text-align:center">📸 (照相机闪光灯)</td><td style="text-align:center"><code>:camera_flash:</code></td><td style="text-align:center">增加或更新截图</td></tr><tr><td style="text-align:center">⚗️ (蒸馏器)</td><td style="text-align:center"><code>:alembic:</code></td><td style="text-align:center">尝试新东西</td></tr><tr><td style="text-align:center">🔍 (放大镜)</td><td style="text-align:center"><code>:mag:</code></td><td style="text-align:center">SEO 优化</td></tr><tr><td style="text-align:center">☸️ (船的方向盘)</td><td style="text-align:center"><code>:wheel_of_dharma:</code></td><td style="text-align:center">关于 Kubernetes 的工作</td></tr><tr><td style="text-align:center">🏷 (标签)</td><td style="text-align:center"><code>:label:</code></td><td style="text-align:center">增加类型（FLow、Typescript）</td></tr></tbody></table><h2 id="参考资料-3">参考资料</h2><ul><li><a href="https://segmentfault.com/a/1190000009048911">git commit 规范指南</a></li><li><a href="https://blog.antmoe.com/posts/40e311db">规范化 Commit 提交信息</a></li><li><a href="https://gitmoji.dev/">gitmoji</a></li><li><a href="https://blog.antmoe.com/posts/34ede0da/">Commit 表情符号使用指南</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA笔记</title>
      <link href="/2023/05/03/note-idea/"/>
      <url>/2023/05/03/note-idea/</url>
      
        <content type="html"><![CDATA[<h2 id="通用">通用</h2><blockquote><p>Alt + Enter 帮助指令</p><p>Alt + x 关闭所有非活动选项卡</p><p>Ctrl + ` 更改视图模式</p></blockquote><h2 id="移动">移动</h2><blockquote><p>Alt + up/down 以函数为单位移动</p><p>Ctrl + G 定位到行</p><p>Ctrl + W 可以选择单词，继而语句，继而行，继而函数</p><p>Ctrl + Shift + W 取消选择光标所在行</p><p>Ctrl + { or Ctrl +} 跑到大括号的开头或者结尾</p><p>Ctrl + Shift + Enter 定位到最近可编写代码的位置</p><p>Ctrl + G 转到行:列</p><p>Ctrl + -/+ 收起和展开代码块</p></blockquote><h2 id="定位查找">定位查找</h2><blockquote><p>Shift + Shift 查找任意文件</p><p>Ctrl + Shift + A 查找动作/设置</p><p>Ctrl + Shift + F 文件中检索</p><p>Ctrl + N 查找Java类</p><p>Ctrl + F 查找</p><p>Ctrl + R 替换</p><p>F4 进入某一方法或者到变量定义处</p><p>Ctrl + B 查看声明或使用处</p><p>Ctrl + F12 查看方法和成员变量</p><p>Ctrl + Alt + left/right 回退/前进 到上一次编辑处</p><p>Ctrl + E Recent Files</p><p>Alt + J 选择多次出现的内容</p></blockquote><h2 id="编辑">编辑</h2><blockquote><p>Ctrl + D 复制一行</p><p>Ctrl + Y 删除一行</p><p>Alt + Shift + up/down 移动行</p><p>Ctrl + / 选中一行进行注释与反注释</p><p>Alt + / 使用 Hippie 补全</p><p>Ctrl + Shift + V：选择要粘贴的内容</p><p>Ctrl + Alt + L：重新格式化代码</p><p>Ctrl + F11 添加助记书签</p></blockquote><h2 id="简单重构">简单重构</h2><p>使用IDEA进行重构时，IDEA会自动修改关联的地方，从而安全地完成重构</p><blockquote><p>Ctrl + Alt + Shift + N 重构帮助指令</p><p>Alt + Insert 新建</p><p>Alt + Delete 安全删除</p><p>Shift + F6 重命名</p><p>Ctrl +  F6 更改签名</p><p>Ctrl + Alt + M 抽取函数</p><p>Ctrl + Alt + V 抽取变量</p><p>Ctrl + Alt + F 抽取变量</p><p>Ctrl + Alt + C 抽取常量</p><p>Ctrl + Alt + P 抽取方法变量到入参</p><p>​选择 Delegate via method overloading 复选框，则会保留原始方法并允许引入第二个方法</p></blockquote><h2 id="简单调试">简单调试</h2><blockquote><p>Ctrl + Shift + F9/F10 调试/运行测试用例</p><p>Ctrl + F8 打断点</p><p>Shift + F9/F10 调试/运行</p><p>F7 进入函数</p><p>F8 单步</p><p>F9 到下一个断点或结束</p><p>Alt + F8 查看表达式结果</p></blockquote><h2 id="参考资料-8">参考资料</h2><p><a href="https://blog.jetbrains.com/zh-hans/idea/2020/09/intellij-idea/">IntelliJ IDEA 中的日常重构技巧</a></p><p><a href="https://blog.jetbrains.com/zh-hans/idea/2022/11/intellij-idea-3/">IntelliJ IDEA 中最被低估的快捷键</a></p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> else </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git笔记</title>
      <link href="/2023/05/03/note-git/"/>
      <url>/2023/05/03/note-git/</url>
      
        <content type="html"><![CDATA[<h2 id="配置-3">配置</h2><h3 id="查看配置">查看配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global --list</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">git config --global -l</span><br></pre></td></tr></table></figure><h3 id="修改配置方法">修改配置方法</h3><h4 id="命令行修改">命令行修改</h4><p>使用命令行添加或修改配置：</p><blockquote><p>PS: 有3种级别的配置</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># system %Git/etc/gitconfig</span></span><br><span class="line">git config --system core.autocrlf xxx</span><br><span class="line"><span class="comment"># user ~/.gitconfig</span></span><br><span class="line">git config --global user.name xxx</span><br><span class="line"><span class="comment"># local workspace/.git/config</span></span><br><span class="line">git config --<span class="built_in">local</span> remote.origin.url xxx</span><br></pre></td></tr></table></figure><p>使用命令行删除配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global --<span class="built_in">unset</span> <span class="built_in">alias</span>.别名</span><br></pre></td></tr></table></figure><h4 id="配置文件修改">配置文件修改</h4><p>使用如下命令可以快速打开config文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global --edit</span><br></pre></td></tr></table></figure><p>也可以手动打开文件，config文件内容类似下文，修改后保存即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[core]</span><br><span class="line">editor = \&quot;C:\\coding\\Sublime Text 3\\sublime_text.exe\&quot; -w</span><br><span class="line">autocrlf = true</span><br><span class="line">[user]</span><br><span class="line">name = username</span><br><span class="line">email = example@example</span><br><span class="line">[http]</span><br><span class="line">version = HTTP/1.1</span><br><span class="line">[alias]</span><br><span class="line">st = status</span><br><span class="line">br = branch</span><br><span class="line">co = checkout</span><br><span class="line">ci = commit -m</span><br><span class="line">l = log --color --graph --pretty=format:&#x27;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset&#x27; --abbrev-commit</span><br><span class="line"># pr = pull --rebase origin master</span><br><span class="line"># pru = pull --rebase upstream master</span><br><span class="line"># r = remote -v</span><br><span class="line"># rau = remote add upstream</span><br><span class="line"># pf = push origin master --force</span><br><span class="line">[i18n]</span><br><span class="line">commitencoding = utf-8</span><br><span class="line">logoutputencoding = utf-8</span><br></pre></td></tr></table></figure><h2 id="个人身份">个人身份</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;username&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;example@example&quot;</span></span><br></pre></td></tr></table></figure><h2 id="换行符">换行符</h2><p>Windows</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global core.autocrlf <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>Linux or Max</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global core.autocrlf input</span><br></pre></td></tr></table></figure><p>only Windows</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global core.autocrlf <span class="literal">false</span></span><br></pre></td></tr></table></figure><h2 id="中文编码">中文编码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># zn encoding</span></span><br><span class="line">git config --global gui.encoding utf-8</span><br><span class="line">git config --global i18n.commitencoding utf-8</span><br><span class="line">git config --global i18n.logoutputencoding utf-8</span><br><span class="line"><span class="comment"># show path in Chinese</span></span><br><span class="line">git config --global core.quotepath <span class="literal">false</span></span><br></pre></td></tr></table></figure><h2 id="与服务器认证">与服务器认证</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># key</span></span><br><span class="line">git config --global credential.helper store</span><br><span class="line"><span class="comment"># https</span></span><br><span class="line">git config http.sslverify <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">ssh-keygen -t rsa -C example@example</span><br><span class="line"><span class="comment"># copy ssh key to plat</span></span><br></pre></td></tr></table></figure><h2 id="常用基本指令">常用基本指令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 工程准备</span></span><br><span class="line">git init</span><br><span class="line">git <span class="built_in">clone</span></span><br><span class="line"><span class="comment"># 新增/删除/移动 文件到暂存区</span></span><br><span class="line">git add</span><br><span class="line">git <span class="built_in">rm</span></span><br><span class="line">git <span class="built_in">mv</span></span><br><span class="line"><span class="comment"># 查看工作区</span></span><br><span class="line">git diff</span><br><span class="line">git status</span><br><span class="line"><span class="comment"># 提交更改的文件</span></span><br><span class="line">git commit</span><br><span class="line"><span class="comment"># 查看日志</span></span><br><span class="line">git <span class="built_in">log</span></span><br><span class="line"><span class="comment"># 推送远端仓库</span></span><br><span class="line">git push</span><br><span class="line"><span class="comment"># 分支管理</span></span><br><span class="line">git branch</span><br><span class="line">git checkout</span><br><span class="line">git branch -d</span><br><span class="line">git pull</span><br><span class="line"><span class="comment"># 分支合并</span></span><br><span class="line">git merge</span><br><span class="line">git rebase</span><br><span class="line"><span class="comment"># 强制回退到历史节点</span></span><br><span class="line">git reset</span><br><span class="line">git checkout</span><br></pre></td></tr></table></figure><h2 id="别名设置">别名设置</h2><p>添加git的alias</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global <span class="built_in">alias</span>.别名 <span class="string">&quot;命令全称&quot;</span></span><br></pre></td></tr></table></figure><p>个人配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git config --global alias.st <span class="string">&quot;status&quot;</span></span><br><span class="line">git config --global alias.br <span class="string">&quot;branch&quot;</span></span><br><span class="line">git config --global alias.co <span class="string">&quot;checkout&quot;</span></span><br><span class="line">git config --global alias.ci <span class="string">&quot;commit&quot;</span></span><br><span class="line">git config --global alias.l <span class="string">&quot;log --color --graph --pretty=format:&#x27;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset&#x27; --abbrev-commit&quot;</span></span><br></pre></td></tr></table></figure><p>config文件相关内容如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[alias]</span><br><span class="line">st = status</span><br><span class="line">br = branch</span><br><span class="line">co = checkout</span><br><span class="line">ci = commit -m</span><br><span class="line">l = log --color --graph --pretty=format:&#x27;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset&#x27; --abbrev-commit</span><br></pre></td></tr></table></figure><h2 id="修改commit">修改commit</h2><h3 id="修改最后一次提交-commit-的信息">修改最后一次提交 commit 的信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改最近提交的 commit 信息</span></span><br><span class="line">git commit --amend --message=<span class="string">&quot;modify message&quot;</span> --author=<span class="string">&quot;username &lt;example@example&gt;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 仅修改 message 信息</span></span><br><span class="line">git commit --amend --message=<span class="string">&quot;modify message&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 仅修改 author 信息</span></span><br><span class="line">git commit --amend --author=<span class="string">&quot;username &lt;example@example&gt;&quot;</span></span><br></pre></td></tr></table></figure><h3 id="修改历史提交-commit-的信息">修改历史提交 commit 的信息</h3><p>操作步骤：</p><ul><li><code>git rebase -i</code> 列出 commit 列表</li><li>找到需要修改的 commit 记录，把 <code>pick</code> 修改为 <code>edit</code> 或 <code>e</code>，<code>:wq</code> 保存退出</li><li>修改 commit 的具体信息<code>git commit --amend</code>，保存并继续下一条<code>git rebase --continue</code>，直到全部完成</li><li>中间也可跳过或退出<code>git rebase (--skip | --abort)</code></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出 rebase 的 commit 列表，不包含 &lt;commit id&gt;</span></span><br><span class="line">git rebase -i &lt;commit <span class="built_in">id</span>&gt;</span><br><span class="line"><span class="comment"># 最近 3 条</span></span><br><span class="line">git rebase -i HEAD~3</span><br><span class="line"><span class="comment"># 本地仓库没 push 到远程仓库的 commit 信息</span></span><br><span class="line">git rebase -i</span><br><span class="line"></span><br><span class="line"><span class="comment"># vi 下，找到需要修改的 commit 记录，```pick``` 修改为 ```edit``` 或 ```e```，```:wq``` 保存退出</span></span><br><span class="line"><span class="comment"># 重复执行如下命令直到完成</span></span><br><span class="line">git commit --amend --message=<span class="string">&quot;modify message&quot;</span> --author=<span class="string">&quot;username &lt;example@example&gt;&quot;</span></span><br><span class="line">git rebase --<span class="built_in">continue</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 中间也可跳过或退出 rebase 模式</span></span><br><span class="line">git rebase --skip</span><br><span class="line">git rebase --abort</span><br></pre></td></tr></table></figure><p>修改完成后，强制推送到远程服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push --force</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过symbol方式使用icon</title>
      <link href="/2022/08/21/svg-icon/"/>
      <url>/2022/08/21/svg-icon/</url>
      
        <content type="html"><![CDATA[<h2 id="通过symbol方式使用图标">通过symbol方式使用图标</h2><p>前端构件中常常会用到各种小图标，使用图标的方式有很多，这里选择了symbol方式导入svg-icon。</p><p>原因是：这种方式设置好模板和相关配置后，想使用新的图标只需将icon的svg文件放入指定文件夹，通过文件名便可使用图标，更新方便。</p><h3 id="参考网站">参考网站</h3><p><a href="https://juejin.cn/post/7067165103547744263">一个好用的svg加载器svg-sprite-loader</a></p><p><a href="https://juejin.cn/post/6844903517564436493">手摸手，带你优雅的使用 icon</a></p><p><a href="https://www.iconfont.cn/help/detail?spm=a313x.7781069.1998910419.15&amp;helptype=code">iconfont官网</a></p><h3 id="安装svg-sprite-loader">安装svg-sprite-loader</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i svg-sprite-loader -D</span><br></pre></td></tr></table></figure><h3 id="配置vue-config-js">配置vue.config.js</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>);</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">resolve</span>(<span class="params">dir</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> path.<span class="title function_">join</span>(__dirname, dir);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">chainWebpack</span>: <span class="function">(<span class="params">config</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 添加新的svg-sprite-loader处理svgIcon</span></span><br><span class="line">  config.<span class="property">module</span></span><br><span class="line">    .<span class="title function_">rule</span>(<span class="string">&quot;svgIcon&quot;</span>)</span><br><span class="line">    .<span class="title function_">test</span>(<span class="regexp">/\.svg$/</span>)</span><br><span class="line">    .<span class="property">include</span>.<span class="title function_">add</span>(<span class="title function_">resolve</span>(<span class="string">&quot;src/icons&quot;</span>))</span><br><span class="line">    .<span class="title function_">end</span>()</span><br><span class="line">    .<span class="title function_">use</span>(<span class="string">&quot;svg-sprite-loader&quot;</span>) <span class="comment">// 一定要添加use</span></span><br><span class="line">    .<span class="title function_">loader</span>(<span class="string">&quot;svg-sprite-loader&quot;</span>)</span><br><span class="line">    .<span class="title function_">tap</span>(<span class="function">(<span class="params">options</span>) =&gt;</span> &#123;</span><br><span class="line">      options = &#123;</span><br><span class="line">        <span class="attr">symbolId</span>: <span class="string">&quot;icon-[name]&quot;</span>,</span><br><span class="line">      &#125;;</span><br><span class="line">      <span class="keyword">return</span> options;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 原有的svg图像处理loader添加exclude</span></span><br><span class="line">  config.<span class="property">module</span>.<span class="title function_">rule</span>(<span class="string">&quot;svg&quot;</span>).<span class="property">exclude</span>.<span class="title function_">add</span>(<span class="title function_">resolve</span>(<span class="string">&quot;src/icons&quot;</span>)).<span class="title function_">end</span>();</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h3 id="在components目录下创建svgIcon-index-vue组件">在components目录下创建svgIcon/index.vue组件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;svg :class=&quot;svgClass&quot; aria-hidden=&quot;true&quot;&gt;</span><br><span class="line">    &lt;use :xlink:href=&quot;iconName&quot; /&gt;</span><br><span class="line">  &lt;/svg&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;SvgIcon&quot;,</span><br><span class="line">  props: &#123;</span><br><span class="line">    iconClass: &#123;</span><br><span class="line">      type: String,</span><br><span class="line">      required: true,</span><br><span class="line">    &#125;,</span><br><span class="line">    className: &#123;</span><br><span class="line">      type: String,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;</span><br><span class="line">    iconName() &#123;</span><br><span class="line">      return `#icon-$&#123;this.iconClass&#125;`;</span><br><span class="line">    &#125;,</span><br><span class="line">    svgClass() &#123;</span><br><span class="line">      if (this.className) &#123;</span><br><span class="line">        return &quot;svg-icon &quot; + this.className;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        return &quot;svg-icon&quot;;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.svg-icon &#123;</span><br><span class="line">  width: 1em;</span><br><span class="line">  height: 1em;</span><br><span class="line">  vertical-align: -0.15em;</span><br><span class="line">  fill: currentColor;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="全局注册svg-组件">全局注册svg 组件</h3><p>在src/icons目录下，分别创建svg目录和index.js文件。svg目录存放.svg格式的文件。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">SvgIcon</span> <span class="keyword">from</span> <span class="string">&quot;../components/svgIcon/index&quot;</span>; <span class="comment">//svg组件</span></span><br><span class="line"><span class="comment">//全局注册组件</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&quot;svg-icon&quot;</span>, <span class="title class_">SvgIcon</span>);</span><br><span class="line"><span class="comment">// 定义一个加载目录的函数</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">requireAll</span> = (<span class="params">r</span>) =&gt; r.<span class="title function_">keys</span>().<span class="title function_">map</span>(r);</span><br><span class="line"><span class="comment">// 加载目录下的所有的 svg 文件</span></span><br><span class="line">requireAll(<span class="built_in">require</span>.<span class="title function_">context</span>(<span class="string">&quot;./svg&quot;</span>, <span class="literal">false</span>, <span class="regexp">/\.svg$/</span>));</span><br></pre></td></tr></table></figure><h3 id="在-main-js-项目入口文件中导入-icons-文件">在 main.js 项目入口文件中导入 icons 文件</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&quot;./icons&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="使用-3">使用</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//icon-class：svg图片的文件名，例如下方代码使用了 QQ.svg 文件</span><br><span class="line">//class-name：svg图片的样式类名，可用来自定义样式</span><br><span class="line">&lt;svg-icon icon-class=&quot;QQ&quot; class-name=&quot;icon&quot; /&gt;</span><br></pre></td></tr></table></figure><h3 id="其他问题">其他问题</h3><p>使用vscode运行vue项目，正在运行的项目改动并保存时，项目会快速更新。使用上述svg icon时，热更新失效，重新<code>npm run serve</code>即可。</p><p>也有其他解决方案，参见<a href="https://blog.csdn.net/onionlsh/article/details/115241892">【疑难杂症】vue-cli热更新失效</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> icon </tag>
            
            <tag> iconfont </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DDD</title>
      <link href="/2022/06/11/DDD/"/>
      <url>/2022/06/11/DDD/</url>
      
        <content type="html"><![CDATA[<p>随着编程工业化水平的不断加深，各种编程模型层出不穷（比如MVC，MVP等等），伴随着这些编程模型，又有一大批新的概念蜂拥而至，什么VO，BO，PO，DO，DTO之类的，这些新的概念一直以来都是云里雾里，网上虽然也有不少文章来区分这些概念，但看下来基本都是几篇相同的文章转载来转载去，这些文章本身也说的不明，有些还互相矛盾，再加上有些文章在简化系统里面来使用这些概念，让人越看越迷糊</p><p>什么原因造成了这种混乱的状态，就不深究了，感觉也很难究出所以然来<br>因此让我们立足这些概念本身，达成对概念理解的一致性，就足够了，这也是这边文章的主要目的<br>鉴于专业术语的解释互联网上太多，一搜一大把，我就不重复一遍术语了，而且说实话，术语太抽象，不利于理解，看完其实没解决啥疑惑，我会尽量用大白话(人话)来做解释，争取让大家都能看明白</p><p>废话不多说，先来看张图<br>看完图估计大部分人就已经有了一个直观的感受了</p><img src="/2022/06/11/DDD/v2-24e3ed681c02b6434681719753c53b40_1440w.jpg" class="" title="img"><p>面对这个图，让我们先从承上启下的DTO开始入手</p><p><strong>DTO（Data Transfer Object）数据传输对象</strong></p><p>这个传输通常指的前后端之间的传输</p><p>DTO是一个比较特殊的对象，他有两种存在形式：</p><p>在后端，他的存在形式是java对象，也就是在controller里面定义的那个东东，通常在后端不需要关心怎么从json转成java对象的，这个都是由一些成熟的框架帮你完成啦，比如spring框架</p><p>在前端，他的存在形式通常是js里面的对象（也可以简单理解成json），也就是通过ajax请求的那个数据体</p><p>这也是为什么把他画成横跨两层的原因</p><p>这里可能会遇到个问题，现在微服务盛行，服务和服务之间调用的传输对象能叫DTO吗？<br>我的理解是看情况<br>DTO本身的一个隐含的意义是要能够完整的表达一个业务模块的输出<br>如果服务和服务之间相对独立，那就可以叫DTO<br>如果服务和服务之间不独立，每个都不是一个完整的业务模块，拆开可能仅仅是因为计算复杂度或者性能的问题，那这就不能够叫做DTO，只能是BO</p><p><strong>VO（View Object/Value Object）视图对象/值对象</strong><br>VO就是展示用的数据，不管展示方式是网页，还是客户端，还是APP，只要是这个东西是让人看到的，这就叫VO<br>VO主要的存在形式就是js里面的对象（也可以简单理解成json）</p><p><strong>VO和DTO的区别</strong><br>主要有两个区别<br>一个是字段不一样，VO根据需要会删减一些字段<br>另一个是值不一样，VO会根据需要对DTO中的值进行展示业务的解释<br>举个简单的例子<br>DTO可能是这样的</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;gender&quot;</span>:<span class="string">&quot;男&quot;</span>, </span><br><span class="line">    <span class="string">&quot;age&quot;</span>:<span class="number">35</span> </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>对于业务一来说只需要性别，而且因为是一个古风聊天室，也不能直接展示男，因此经过业务解释业务一的VO是</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123; </span><br><span class="line">    <span class="string">&quot;gender&quot;</span>:<span class="string">&quot;公子&quot;</span> </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>对于业务二来说只需要年龄，而且不需要精确的年龄，因此经过业务解释业务二的VO是</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123; </span><br><span class="line">    <span class="string">&quot;age&quot;</span>:<span class="string">&quot;30~39&quot;</span> </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p><strong>PO（Persistant Object）持久对象</strong><br>PO比较好理解<br>简单说PO就是数据库中的记录，一个PO的数据结构对应着库中表的结构，表中的一条记录就是一个PO对象<br>通常PO里面除了get，set之外没有别的方法<br>对于PO来说，数量是相对固定的，一定不会超过数据库表的数量<br>等同于Entity，这俩概念是一致的</p><p><strong>BO（Business Object）业务对象</strong><br>BO就是PO的组合<br>简单的例子比如说PO是一条交易记录，BO是一个人全部的交易记录集合对象<br>复杂点儿的例子PO1是交易记录，PO2是登录记录，PO3是商品浏览记录，PO4是添加购物车记录，PO5是搜索记录，BO是个人网站行为对象<br>BO是一个业务对象，一类业务就会对应一个BO，数量上没有限制，而且BO会有很多业务操作，也就是说除了get，set方法以外，BO会有很多针对自身数据进行计算的方法<br>为什么BO也画成横跨两层呢？原因是现在很多持久层框架自身就提供了数据组合的功能，因此BO有可能是在业务层由业务来拼装PO而成，也有可能是在数据库访问层由框架直接生成<br>很多情况下为了追求查询的效率，框架跳过PO直接生成BO的情况非常普遍，PO只是用来增删改使用</p><p><strong>BO和DTO的区别</strong><br>这两个的区别主要是就是字段的删减<br>BO对内，为了进行业务计算需要辅助数据，或者是一个业务有多个对外的接口，BO可能会含有很多接口对外所不需要的数据，因此DTO需要在BO的基础上，只要自己需要的数据，然后对外提供<br>在这个关系上，通常不会有数据内容的变化，内容变化要么在BO内部业务计算的时候完成，要么在解释VO的时候完成</p><p>OK，到这里这些关系基本就理清楚了</p><p><strong>等等，DO是什么</strong><br>DO呢，标题不是还有个DO么？<br>上面这些概念基本上已经涵盖了全部的流程，DO只是跟其中一个概念相同<br>但是跟哪个概念相同呢？<br>现在主要有两个版本<br>一个是阿里巴巴的开发手册中的定义<br>DO（ Data Object）这个等同于上面的PO<br>另一个是在DDD（Domain-Driven Design）领域驱动设计中<br>DO（Domain Object）这个等同于上面的BO</p><p><strong>最后，让我们再说说实际应用</strong><br>这几个概念很完整，我们在用的时候是必须按这个来做吗？<br>当然不是的，系统和系统的复杂度不同，协作水平不同，完全没有必要教条主义，这些概念全上<br>上哪些概念，省哪些，我给一些实际建议<br>1，PO这个没法省，不管叫PO还是Entity，怎么着都得有<br>2，一些工具类的系统和一些业务不是很复杂的系统DTO是可以和BO合并成一个，当业务扩展的时候注意拆分就行<br>3，VO是可以第一个优化掉的，展示业务不复杂的可以压根儿不要，直接用DTO<br>4，这也是最重要的一条，概念是给人用的，多人协作的时候一定要保证大家的概念一致，赶紧把这篇文章转发给跟你协作的人吧</p>]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 框架设计 </tag>
            
            <tag> DDD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>循环依赖</title>
      <link href="/2022/05/10/cycle/"/>
      <url>/2022/05/10/cycle/</url>
      
        <content type="html"><![CDATA[<blockquote><p>转载自文章<a href="https://cloud.tencent.com/developer/article/1769948">spring：我是如何解决循环依赖的？</a> ，学习项目过程中发生了循环依赖的问题，该文章对循环依赖的多种场景都有讲解，故转载下来。</p></blockquote><h2 id="1-由同事抛的一个问题开始">1.由同事抛的一个问题开始</h2><p>最近项目组的一个同事遇到了一个问题，问我的意见，一下子引起的我的兴趣，因为这个问题我也是第一次遇到。平时自认为对spring循环依赖问题还是比较了解的，直到遇到这个和后面的几个问题后，重新刷新了我的认识。</p><p>我们先看看当时出问题的代码片段：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@<span class="title class_">Service</span></span><br><span class="line">public <span class="keyword">class</span> <span class="title class_">TestService1</span> &#123;</span><br><span class="line"></span><br><span class="line">    @<span class="title class_">Autowired</span></span><br><span class="line">    private <span class="title class_">TestService2</span> testService2;</span><br><span class="line"></span><br><span class="line">    @<span class="title class_">Async</span></span><br><span class="line">    public <span class="keyword">void</span> <span class="title function_">test1</span>(<span class="params"></span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@<span class="title class_">Service</span></span><br><span class="line">public <span class="keyword">class</span> <span class="title class_">TestService2</span> &#123;</span><br><span class="line"></span><br><span class="line">    @<span class="title class_">Autowired</span></span><br><span class="line">    private <span class="title class_">TestService1</span> testService1;</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">void</span> <span class="title function_">test2</span>(<span class="params"></span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这两段代码中定义了两个Service类：<code>TestService1</code>和<code>TestService2</code>，在TestService1中注入了TestService2的实例，同时在TestService2中注入了TestService1的实例，这里构成了<code>循环依赖</code>。</p><p>只不过，这不是普通的循环依赖，因为TestService1的test1方法上加了一个<code>@Async</code>注解。</p><p>大家猜猜程序启动后运行结果会怎样？</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">org.<span class="property">springframework</span>.<span class="property">beans</span>.<span class="property">factory</span>.<span class="property">BeanCurrentlyInCreationException</span>: <span class="title class_">Error</span> creating bean <span class="keyword">with</span> name <span class="string">&#x27;testService1&#x27;</span>: <span class="title class_">Bean</span> <span class="keyword">with</span> name <span class="string">&#x27;testService1&#x27;</span> has been injected into other beans [testService2] <span class="keyword">in</span> its raw version <span class="keyword">as</span> part <span class="keyword">of</span> a circular reference, but has eventually been wrapped. <span class="title class_">This</span> means that said other beans <span class="keyword">do</span> not use the final version <span class="keyword">of</span> the bean. <span class="title class_">This</span> is often the result <span class="keyword">of</span> over-eager type matching - consider using <span class="string">&#x27;getBeanNamesOfType&#x27;</span> <span class="keyword">with</span> the <span class="string">&#x27;allowEagerInit&#x27;</span> flag turned off, <span class="keyword">for</span> example.</span><br></pre></td></tr></table></figure><p>报错了。。。原因是出现了循环依赖。</p><p><strong>「不科学呀，spring不是号称能解决循环依赖问题吗，怎么还会出现？」</strong></p><p>如果把上面的代码稍微调整一下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@<span class="title class_">Service</span></span><br><span class="line">public <span class="keyword">class</span> <span class="title class_">TestService1</span> &#123;</span><br><span class="line"></span><br><span class="line">    @<span class="title class_">Autowired</span></span><br><span class="line">    private <span class="title class_">TestService2</span> testService2;</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">void</span> <span class="title function_">test1</span>(<span class="params"></span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>把TestService1的test1方法上的<code>@Async</code>注解去掉，<code>TestService1</code>和<code>TestService2</code>都需要注入对方的实例，同样构成了循环依赖。</p><p>但是重新启动项目，发现它能够正常运行。这又是为什么？</p><p>带着这两个问题，让我们一起开始spring循环依赖的探秘之旅。</p><h2 id="2-什么是循环依赖？"><strong>2.什么是循环依赖？</strong></h2><p>循环依赖：说白是一个或多个对象实例之间存在直接或间接的依赖关系，这种依赖关系构成了构成一个环形调用。</p><p>第一种情况：自己依赖自己的直接依赖</p><img src="/2022/05/10/cycle/m1bmm8td3p.png" class="" title="img"><p>第二种情况：两个对象之间的直接依赖</p><img src="/2022/05/10/cycle/p82iwzsppe.png" class="" title="img"><p>第三种情况：多个对象之间的间接依赖</p><img src="/2022/05/10/cycle/fe1d0u8crm.png" class="" title="img"><p>前面两种情况的直接循环依赖比较直观，非常好识别，但是第三种间接循环依赖的情况有时候因为业务代码调用层级很深，不容易识别出来。</p><h2 id="3-循环依赖的N种场景"><strong>3.循环依赖的N种场景</strong></h2><p>spring中出现循环依赖主要有以下场景：</p><img src="/2022/05/10/cycle/z9cdgtm7dm.png" class="" title="img"><h3 id="单例的setter注入"><strong>单例的setter注入</strong></h3><p>这种注入方式应该是spring用的最多的，代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@<span class="title class_">Service</span></span><br><span class="line">public <span class="keyword">class</span> <span class="title class_">TestService1</span> &#123;</span><br><span class="line"></span><br><span class="line">    @<span class="title class_">Autowired</span></span><br><span class="line">    private <span class="title class_">TestService2</span> testService2;</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">void</span> <span class="title function_">test1</span>(<span class="params"></span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@<span class="title class_">Service</span></span><br><span class="line">public <span class="keyword">class</span> <span class="title class_">TestService2</span> &#123;</span><br><span class="line"></span><br><span class="line">    @<span class="title class_">Autowired</span></span><br><span class="line">    private <span class="title class_">TestService1</span> testService1;</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">void</span> <span class="title function_">test2</span>(<span class="params"></span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是一个经典的循环依赖，但是它能正常运行，得益于spring的内部机制，让我们根本无法感知它有问题，因为spring默默帮我们解决了。</p><p>spring内部有三级缓存：</p><ul><li>singletonObjects 一级缓存，用于保存实例化、注入、初始化完成的bean实例</li><li>earlySingletonObjects 二级缓存，用于保存实例化完成的bean实例</li><li>singletonFactories 三级缓存，用于保存bean创建工厂，以便于后面扩展有机会创建代理对象。</li></ul><p>下面用一张图告诉你，spring是如何解决循环依赖的：</p><img src="/2022/05/10/cycle/b75c8ke07m.png" class="" title="img"><p>​</p><p>细心的朋友可能会发现在这种场景中第二级缓存作用不大。</p><p>那么问题来了，为什么要用第二级缓存呢？</p><p>试想一下，如果出现以下这种情况，我们要如何处理？</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">@<span class="title class_">Service</span></span><br><span class="line">public <span class="keyword">class</span> <span class="title class_">TestService1</span> &#123;</span><br><span class="line"></span><br><span class="line">    @<span class="title class_">Autowired</span></span><br><span class="line">    private <span class="title class_">TestService2</span> testService2;</span><br><span class="line">    @<span class="title class_">Autowired</span></span><br><span class="line">    private <span class="title class_">TestService3</span> testService3;</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">void</span> <span class="title function_">test1</span>(<span class="params"></span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@<span class="title class_">Service</span></span><br><span class="line">public <span class="keyword">class</span> <span class="title class_">TestService2</span> &#123;</span><br><span class="line"></span><br><span class="line">    @<span class="title class_">Autowired</span></span><br><span class="line">    private <span class="title class_">TestService1</span> testService1;</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">void</span> <span class="title function_">test2</span>(<span class="params"></span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@<span class="title class_">Service</span></span><br><span class="line">public <span class="keyword">class</span> <span class="title class_">TestService3</span> &#123;</span><br><span class="line"></span><br><span class="line">    @<span class="title class_">Autowired</span></span><br><span class="line">    private <span class="title class_">TestService1</span> testService1;</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">void</span> <span class="title function_">test3</span>(<span class="params"></span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TestService1依赖于TestService2和TestService3，而TestService2依赖于TestService1，同时TestService3也依赖于TestService1。</p><p>按照上图的流程可以把TestService1注入到TestService2，并且TestService1的实例是从第三级缓存中获取的。</p><p>假设不用第二级缓存，TestService1注入到TestService3的流程如图：</p><img src="/2022/05/10/cycle/go2lczef41.png" class="" title="img"><p>​</p><p>TestService1注入到TestService3又需要从第三级缓存中获取实例，而第三级缓存里保存的并非真正的实例对象，而是<code>ObjectFactory</code>对象。说白了，两次从三级缓存中获取都是<code>ObjectFactory</code>对象，而通过它创建的实例对象每次可能都不一样的。</p><p>这样不是有问题？</p><p>为了解决这个问题，spring引入的第二级缓存。上面图1其实TestService1对象的实例已经被添加到第二级缓存中了，而在TestService1注入到TestService3时，只用从第二级缓存中获取该对象即可。</p><img src="/2022/05/10/cycle/hbh8dedexy.png" class="" title="img"><p>​</p><p>还有个问题，第三级缓存中为什么要添加<code>ObjectFactory</code>对象，直接保存实例对象不行吗？</p><p>答：不行，因为假如你想对添加到三级缓存中的实例对象进行增强，直接用实例对象是行不通的。</p><p>针对这种场景spring是怎么做的呢？</p><p>答案就在<code>AbstractAutowireCapableBeanFactory</code>类<code>doCreateBean</code>方法的这段代码中：</p><img src="/2022/05/10/cycle/z2b4fq1vxv.png" class="" title="img"><p>它定义了一个匿名内部类，通过<code>getEarlyBeanReference</code>方法获取代理对象，其实底层是通过<code>AbstractAutoProxyCreator</code>类的<code>getEarlyBeanReference</code>生成代理对象。</p><h3 id="多例的setter注入"><strong>多例的setter注入</strong></h3><p>这种注入方法偶然会有，特别是在多线程的场景下，具体代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@<span class="title class_">Scope</span>(<span class="title class_">ConfigurableBeanFactory</span>.<span class="property">SCOPE_PROTOTYPE</span>)</span><br><span class="line">@<span class="title class_">Service</span></span><br><span class="line">public <span class="keyword">class</span> <span class="title class_">TestService1</span> &#123;</span><br><span class="line"></span><br><span class="line">    @<span class="title class_">Autowired</span></span><br><span class="line">    private <span class="title class_">TestService2</span> testService2;</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">void</span> <span class="title function_">test1</span>(<span class="params"></span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@<span class="title class_">Scope</span>(<span class="title class_">ConfigurableBeanFactory</span>.<span class="property">SCOPE_PROTOTYPE</span>)</span><br><span class="line">@<span class="title class_">Service</span></span><br><span class="line">public <span class="keyword">class</span> <span class="title class_">TestService2</span> &#123;</span><br><span class="line"></span><br><span class="line">    @<span class="title class_">Autowired</span></span><br><span class="line">    private <span class="title class_">TestService1</span> testService1;</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">void</span> <span class="title function_">test2</span>(<span class="params"></span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>很多人说这种情况spring<a href="https://cloud.tencent.com/product/tke?from=10680">容器</a>启动会报错，其实是不对的，我非常负责任的告诉你程序能够正常启动。</p><p>为什么呢？</p><p>其实在<code>AbstractApplicationContext</code>类的<code>refresh</code>方法中告诉了我们答案，它会调用<code>finishBeanFactoryInitialization</code>方法，该方法的作用是为了spring容器启动的时候提前初始化一些bean。该方法的内部又调用了<code>preInstantiateSingletons</code>方法</p><img src="/2022/05/10/cycle/gwy8q27xzz.png" class="" title="img"><p>标红的地方明显能够看出：非抽象、单例 并且非懒加载的类才能被提前初始bean。</p><p>而多例即<code>SCOPE_PROTOTYPE</code>类型的类，非单例，不会被提前初始化bean，所以程序能够正常启动。</p><p>如何让他提前初始化bean呢？</p><p>只需要再定义一个单例的类，在它里面注入TestService1</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@<span class="title class_">Service</span></span><br><span class="line">public <span class="keyword">class</span> <span class="title class_">TestService3</span> &#123;</span><br><span class="line"></span><br><span class="line">    @<span class="title class_">Autowired</span></span><br><span class="line">    private <span class="title class_">TestService1</span> testService1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重新启动程序，执行结果：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Requested</span> bean is currently <span class="keyword">in</span> <span class="attr">creation</span>: <span class="title class_">Is</span> there an unresolvable circular reference?</span><br></pre></td></tr></table></figure><p>果然出现了循环依赖。</p><p>注意：这种循环依赖问题是无法解决的，因为它没有用缓存，每次都会生成一个新对象。</p><h3 id="构造器注入"><strong>构造器注入</strong></h3><p>这种注入方式现在其实用的已经非常少了，但是我们还是有必要了解一下，看看如下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@<span class="title class_">Service</span></span><br><span class="line">public <span class="keyword">class</span> <span class="title class_">TestService1</span> &#123;</span><br><span class="line"></span><br><span class="line">    public <span class="title class_">TestService1</span>(<span class="title class_">TestService2</span> testService2) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@<span class="title class_">Service</span></span><br><span class="line">public <span class="keyword">class</span> <span class="title class_">TestService2</span> &#123;</span><br><span class="line"></span><br><span class="line">    public <span class="title class_">TestService2</span>(<span class="title class_">TestService1</span> testService1) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Requested</span> bean is currently <span class="keyword">in</span> <span class="attr">creation</span>: <span class="title class_">Is</span> there an unresolvable circular reference?</span><br></pre></td></tr></table></figure><p>出现了循环依赖，为什么呢？</p><img src="/2022/05/10/cycle/r65953ixw5.png" class="" title="img"><p>从图中的流程看出构造器注入没能添加到三级缓存，也没有使用缓存，所以也无法解决循环依赖问题。</p><h3 id="单例的代理对象setter注入"><strong>单例的代理对象setter注入</strong></h3><p>这种注入方式其实也比较常用，比如平时使用：<code>@Async</code>注解的场景，会通过<code>AOP</code>自动生成代理对象。</p><p>我那位同事的问题也是这种情况。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@<span class="title class_">Service</span></span><br><span class="line">public <span class="keyword">class</span> <span class="title class_">TestService1</span> &#123;</span><br><span class="line"></span><br><span class="line">    @<span class="title class_">Autowired</span></span><br><span class="line">    private <span class="title class_">TestService2</span> testService2;</span><br><span class="line"></span><br><span class="line">    @<span class="title class_">Async</span></span><br><span class="line">    public <span class="keyword">void</span> <span class="title function_">test1</span>(<span class="params"></span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@<span class="title class_">Service</span></span><br><span class="line">public <span class="keyword">class</span> <span class="title class_">TestService2</span> &#123;</span><br><span class="line"></span><br><span class="line">    @<span class="title class_">Autowired</span></span><br><span class="line">    private <span class="title class_">TestService1</span> testService1;</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">void</span> <span class="title function_">test2</span>(<span class="params"></span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从前面得知程序启动会报错，出现了循环依赖：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">org.<span class="property">springframework</span>.<span class="property">beans</span>.<span class="property">factory</span>.<span class="property">BeanCurrentlyInCreationException</span>: <span class="title class_">Error</span> creating bean <span class="keyword">with</span> name <span class="string">&#x27;testService1&#x27;</span>: <span class="title class_">Bean</span> <span class="keyword">with</span> name <span class="string">&#x27;testService1&#x27;</span> has been injected into other beans [testService2] <span class="keyword">in</span> its raw version <span class="keyword">as</span> part <span class="keyword">of</span> a circular reference, but has eventually been wrapped. <span class="title class_">This</span> means that said other beans <span class="keyword">do</span> not use the final version <span class="keyword">of</span> the bean. <span class="title class_">This</span> is often the result <span class="keyword">of</span> over-eager type matching - consider using <span class="string">&#x27;getBeanNamesOfType&#x27;</span> <span class="keyword">with</span> the <span class="string">&#x27;allowEagerInit&#x27;</span> flag turned off, <span class="keyword">for</span> example.</span><br></pre></td></tr></table></figure><p>为什么会循环依赖呢？</p><p>答案就在下面这张图中：</p><img src="/2022/05/10/cycle/4zelcl7he7.png" class="" title="img"><p>说白了，bean初始化完成之后，后面还有一步去检查：第二级缓存 和 原始对象 是否相等。由于它对前面流程来说无关紧要，所以前面的流程图中省略了，但是在这里是关键点，我们重点说说：</p><img src="/2022/05/10/cycle/8ggjnemdem.png" class="" title="img"><p>那位同事的问题正好是走到这段代码，发现第二级缓存 和 原始对象不相等，所以抛出了循环依赖的异常。</p><p>如果这时候把TestService1改个名字，改成：TestService6，其他的都不变。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@<span class="title class_">Service</span></span><br><span class="line">public<span class="keyword">class</span> <span class="title class_">TestService6</span> &#123;</span><br><span class="line"></span><br><span class="line">    @<span class="title class_">Autowired</span></span><br><span class="line">    private <span class="title class_">TestService2</span> testService2;</span><br><span class="line"></span><br><span class="line">    @<span class="title class_">Async</span></span><br><span class="line">    public <span class="keyword">void</span> <span class="title function_">test1</span>(<span class="params"></span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再重新启动一下程序，神奇般的好了。</p><p>what？ 这又是为什么？</p><p>这就要从spring的bean加载顺序说起了，默认情况下，spring是按照文件完整路径递归查找的，按路径+文件名排序，排在前面的先加载。所以TestService1比TestService2先加载，而改了文件名称之后，TestService2比TestService6先加载。</p><p>为什么TestService2比TestService6先加载就没问题呢？</p><p>答案在下面这张图中：</p><img src="/2022/05/10/cycle/t59kw1986o.png" class="" title="img"><p>这种情况testService6中其实第二级缓存是空的，不需要跟原始对象判断，所以不会抛出循环依赖。</p><h3 id="DependsOn循环依赖"><strong>DependsOn循环依赖</strong></h3><p>还有一种有些特殊的场景，比如我们需要在实例化Bean A之前，先实例化Bean B，这个时候就可以使用<code>@DependsOn</code>注解。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@<span class="title class_">DependsOn</span>(value = <span class="string">&quot;testService2&quot;</span>)</span><br><span class="line">@<span class="title class_">Service</span></span><br><span class="line">public <span class="keyword">class</span> <span class="title class_">TestService1</span> &#123;</span><br><span class="line"></span><br><span class="line">    @<span class="title class_">Autowired</span></span><br><span class="line">    private <span class="title class_">TestService2</span> testService2;</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">void</span> <span class="title function_">test1</span>(<span class="params"></span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@<span class="title class_">DependsOn</span>(value = <span class="string">&quot;testService1&quot;</span>)</span><br><span class="line">@<span class="title class_">Service</span></span><br><span class="line">public <span class="keyword">class</span> <span class="title class_">TestService2</span> &#123;</span><br><span class="line"></span><br><span class="line">    @<span class="title class_">Autowired</span></span><br><span class="line">    private <span class="title class_">TestService1</span> testService1;</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">void</span> <span class="title function_">test2</span>(<span class="params"></span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序启动之后，执行结果：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Circular</span> depends-on relationship between <span class="string">&#x27;testService2&#x27;</span> and <span class="string">&#x27;testService1&#x27;</span></span><br></pre></td></tr></table></figure><p>这个例子中本来如果TestService1和TestService2都没有加<code>@DependsOn</code>注解是没问题的，反而加了这个注解会出现循环依赖问题。</p><p>这又是为什么？</p><p>答案在<code>AbstractBeanFactory</code>类的<code>doGetBean</code>方法的这段代码中：</p><img src="/2022/05/10/cycle/rfg1knia6u.png" class="" title="img"><p>它会检查dependsOn的实例有没有循环依赖，如果有循环依赖则抛异常。</p><h2 id="4-出现循环依赖如何解决？"><strong>4.出现循环依赖如何解决？</strong></h2><p>项目中如果出现循环依赖问题，说明是spring默认无法解决的循环依赖，要看项目的打印日志，属于哪种循环依赖。目前包含下面几种情况：</p><img src="/2022/05/10/cycle/qb10gm7zzk.png" class="" title="img"><h3 id="生成代理对象产生的循环依赖"><strong>生成代理对象产生的循环依赖</strong></h3><p>这类循环依赖问题解决方法很多，主要有：</p><ol><li>使用<code>@Lazy</code>注解，延迟加载</li><li>使用<code>@DependsOn</code>注解，指定加载先后关系</li><li>修改文件名称，改变循环依赖类的加载顺序</li></ol><h3 id="使用-DependsOn产生的循环依赖"><strong>使用@DependsOn产生的循环依赖</strong></h3><p>这类循环依赖问题要找到<code>@DependsOn</code>注解循环依赖的地方，迫使它不循环依赖就可以解决问题。</p><h3 id="多例循环依赖"><strong>多例循环依赖</strong></h3><p>这类循环依赖问题可以通过把bean改成单例的解决。</p><h3 id="构造器循环依赖"><strong>构造器循环依赖</strong></h3><p>这类循环依赖问题可以通过使用<code>@Lazy</code>注解解决。</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring Boot </tag>
            
            <tag> 循环依赖 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>逻辑学笔记</title>
      <link href="/2022/04/23/logic/"/>
      <url>/2022/04/23/logic/</url>
      
        <content type="html"><![CDATA[<blockquote><p>看书看到涉及逻辑学的，略微整理回顾下相关公式</p></blockquote><h3 id="命题联结词">命题联结词</h3><h4 id="否定词-neg">否定词 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord">¬</span></span></span></span></h4><p>否定词（negative）作用于1个命题，类似于生活中的“非”。</p><p>读法： <img src="https://www.zhihu.com/equation?tex=%5Cneg+P" alt="[公式]"> 读作“ <img src="https://www.zhihu.com/equation?tex=%E9%9D%9EP" alt="[公式]"> ”。</p><p>定义： <img src="https://www.zhihu.com/equation?tex=%5Cneg+P" alt="[公式]"> 为真，当且仅当 <img src="https://www.zhihu.com/equation?tex=P" alt="[公式]"> 为假。真值表：</p><table><thead><tr><th>P</th><th><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord">¬</span></span></span></span> P</th></tr></thead><tbody><tr><td>1</td><td>0</td></tr><tr><td>0</td><td>1</td></tr></tbody></table><h4 id="合取词-wedge">合取词 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\wedge</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5556em;"></span><span class="mord">∧</span></span></span></span></h4><p>合取词（conjunction）作用于2个命题，类似于生活中的“且”。</p><p>读法： <img src="https://www.zhihu.com/equation?tex=P%5Cwedge+Q" alt="[公式]"> 读作“ <img src="https://www.zhihu.com/equation?tex=P%E4%B8%94Q" alt="[公式]"> ”或“ <img src="https://www.zhihu.com/equation?tex=P%E5%90%88%E5%8F%96Q" alt="[公式]"> ”。</p><p>定义： <img src="https://www.zhihu.com/equation?tex=P%5Cwedge+Q" alt="[公式]"> 为真，当且仅当 <img src="https://www.zhihu.com/equation?tex=P" alt="[公式]"> 和 <img src="https://www.zhihu.com/equation?tex=Q" alt="[公式]"> 都为真。真值表：</p><table><thead><tr><th>P</th><th>Q</th><th>P <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\wedge</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5556em;"></span><span class="mord">∧</span></span></span></span> Q</th></tr></thead><tbody><tr><td>0</td><td>0</td><td>0</td></tr><tr><td>0</td><td>1</td><td>0</td></tr><tr><td>1</td><td>0</td><td>0</td></tr><tr><td>1</td><td>1</td><td>1</td></tr></tbody></table><h4 id="析取词-vee">析取词 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\vee</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5556em;"></span><span class="mord">∨</span></span></span></span></h4><p>析取词（disjunction）作用于2个命题，类似于生活中的“或”。【析：分析，分开。析取：即分开取。】</p><p>读法： <img src="https://www.zhihu.com/equation?tex=P%5Cvee+Q" alt="[公式]"> 读作“ <img src="https://www.zhihu.com/equation?tex=P%E6%88%96Q" alt="[公式]"> ”或“ <img src="https://www.zhihu.com/equation?tex=P%E6%9E%90%E5%8F%96Q" alt="[公式]"> ”。</p><p>定义： <img src="https://www.zhihu.com/equation?tex=P%5Cvee+Q" alt="[公式]"> 为假，当且仅当 <img src="https://www.zhihu.com/equation?tex=P" alt="[公式]"> 和 <img src="https://www.zhihu.com/equation?tex=Q" alt="[公式]"> 都为假。真值表：</p><table><thead><tr><th>P</th><th>Q</th><th>P <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\vee</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5556em;"></span><span class="mord">∨</span></span></span></span> Q</th></tr></thead><tbody><tr><td>0</td><td>0</td><td>0</td></tr><tr><td>0</td><td>1</td><td>1</td></tr><tr><td>1</td><td>0</td><td>1</td></tr><tr><td>1</td><td>1</td><td>1</td></tr></tbody></table><h4 id="蕴含词-rightarrow">蕴含词 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span></h4><p>蕴含词（implication）作用于2个命题，类似于生活中的“推出；如果…，那么…”。</p><p>读法： <img src="https://www.zhihu.com/equation?tex=P%5Cto+Q" alt="[公式]"> 读作“ <img src="https://www.zhihu.com/equation?tex=P%E6%8E%A8Q" alt="[公式]"> ”或者“ <img src="https://www.zhihu.com/equation?tex=P%E8%95%B4%E5%90%ABQ" alt="[公式]"> ”。</p><p>定义：蕴含词有多种定义方式，我们这里介绍最常见的一种定义， <img src="https://www.zhihu.com/equation?tex=P%5Cto+Q" alt="[公式]"> 为假，当且仅当 <img src="https://www.zhihu.com/equation?tex=P" alt="[公式]"> 真而 <img src="https://www.zhihu.com/equation?tex=Q" alt="[公式]"> 假。真值表：</p><table><thead><tr><th>P</th><th>Q</th><th>P <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> Q</th></tr></thead><tbody><tr><td>0</td><td>0</td><td>1</td></tr><tr><td>0</td><td>1</td><td>1</td></tr><tr><td>1</td><td>0</td><td>0</td></tr><tr><td>1</td><td>1</td><td>1</td></tr></tbody></table><h4 id="双条件词-等价词-leftrightarrow">双条件词/等价词 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↔</mo></mrow><annotation encoding="application/x-tex">\leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">↔</span></span></span></span></h4><p>等价词（equivalence）作用于2个命题，类似于生活中的“当且仅当”。</p><p>读法： <img src="https://www.zhihu.com/equation?tex=P%5Cleftrightarrow+Q" alt="[公式]"> 读作“ <img src="https://www.zhihu.com/equation?tex=P%E7%AD%89%E4%BB%B7Q" alt="[公式]"> ”或者“ <img src="https://www.zhihu.com/equation?tex=P%E5%BD%93%E4%B8%94%E4%BB%85%E5%BD%93Q" alt="[公式]"> ”。</p><p>定义： <img src="https://www.zhihu.com/equation?tex=P%5Cleftrightarrow+Q" alt="[公式]"> 为真，当且仅当 <img src="https://www.zhihu.com/equation?tex=P" alt="[公式]"> 与 <img src="https://www.zhihu.com/equation?tex=Q" alt="[公式]"> 真值相同。真值表：</p><table><thead><tr><th>P</th><th>Q</th><th>P <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↔</mo></mrow><annotation encoding="application/x-tex">\leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">↔</span></span></span></span> Q</th></tr></thead><tbody><tr><td>0</td><td>0</td><td>1</td></tr><tr><td>0</td><td>1</td><td>0</td></tr><tr><td>1</td><td>0</td><td>0</td></tr><tr><td>1</td><td>1</td><td>1</td></tr></tbody></table><h3 id="基本的等值公式">基本的等值公式</h3><h4 id="双重否定律">双重否定律</h4><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">¬</mi><mi mathvariant="normal">¬</mi><mi>P</mi><mo>=</mo><mi>P</mi></mrow><annotation encoding="application/x-tex">\neg \neg P = P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">¬¬</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span></span></p><h4 id="结合律">结合律</h4><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><mi>P</mi><mo>∨</mo><mi>Q</mi><mo stretchy="false">)</mo><mo>∨</mo><mi>R</mi><mo>=</mo><mi>P</mi><mo>∨</mo><mo stretchy="false">(</mo><mi>Q</mi><mo>∨</mo><mi>R</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo stretchy="false">(</mo><mi>P</mi><mo>∧</mo><mi>Q</mi><mo stretchy="false">)</mo><mo>∧</mo><mi>R</mi><mo>=</mo><mi>P</mi><mo>∧</mo><mo stretchy="false">(</mo><mi>Q</mi><mo>∧</mo><mi>R</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo stretchy="false">(</mo><mi>P</mi><mo>↔</mo><mi>Q</mi><mo stretchy="false">)</mo><mo>↔</mo><mi>R</mi><mo>=</mo><mi>P</mi><mo>↔</mo><mo stretchy="false">(</mo><mi>Q</mi><mo>↔</mo><mi>R</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">(P \vee Q) \vee R = P \vee (Q \vee R) \\(P \wedge Q) \wedge R = P \wedge (Q \wedge R) \\(P \leftrightarrow Q) \leftrightarrow R = P \leftrightarrow (Q \leftrightarrow R) \\</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">Q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">Q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">Q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span></span><span class="mspace newline"></span></span></span></span></p><h4 id="交换律">交换律</h4><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo>∨</mo><mi>Q</mi><mo>=</mo><mi>Q</mi><mo>∨</mo><mi>P</mi><mspace linebreak="newline"></mspace><mi>P</mi><mo>∧</mo><mi>Q</mi><mo>=</mo><mi>Q</mi><mo>∧</mo><mi>P</mi><mspace linebreak="newline"></mspace><mi>P</mi><mo>↔</mo><mi>Q</mi><mo>=</mo><mi>Q</mi><mo>↔</mo><mi>P</mi><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">P \vee Q = Q \vee P \\P \wedge Q = Q \wedge P \\P \leftrightarrow Q = Q \leftrightarrow P \\</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span class="mspace newline"></span></span></span></span></p><h4 id="分配律">分配律</h4><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo>∨</mo><mo stretchy="false">(</mo><mi>Q</mi><mo>∧</mo><mi>R</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>P</mi><mo>∨</mo><mi>Q</mi><mo stretchy="false">)</mo><mo>∧</mo><mo stretchy="false">(</mo><mi>P</mi><mo>∨</mo><mi>R</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>P</mi><mo>∧</mo><mo stretchy="false">(</mo><mi>Q</mi><mo>∨</mo><mi>R</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>P</mi><mo>∧</mo><mi>Q</mi><mo stretchy="false">)</mo><mo>∨</mo><mo stretchy="false">(</mo><mi>P</mi><mo>∧</mo><mi>R</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>P</mi><mo>→</mo><mo stretchy="false">(</mo><mi>Q</mi><mo>→</mo><mi>R</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>P</mi><mo>→</mo><mi>Q</mi><mo stretchy="false">)</mo><mo>→</mo><mo stretchy="false">(</mo><mi>P</mi><mo>→</mo><mi>R</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">P \vee (Q \wedge R) = (P \vee Q) \wedge (P \vee R) \\P \wedge (Q \vee R) = (P \wedge Q) \vee (P \wedge R) \\P \rightarrow (Q \rightarrow R) = (P \rightarrow Q) \rightarrow (P \rightarrow R) \\</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">Q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">Q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">Q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span></span><span class="mspace newline"></span></span></span></span></p><h4 id="等幂律-恒等律">等幂律/恒等律</h4><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo>∨</mo><mi>P</mi><mo>=</mo><mi>P</mi><mspace linebreak="newline"></mspace><mi>P</mi><mo>∧</mo><mi>P</mi><mo>=</mo><mi>P</mi><mspace linebreak="newline"></mspace><mi>P</mi><mo>→</mo><mi>P</mi><mo>=</mo><mi>T</mi><mspace linebreak="newline"></mspace><mi>P</mi><mo>↔</mo><mi>P</mi><mo>=</mo><mi>T</mi><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">P \vee P = P \\P \wedge P = P \\P \rightarrow P = T \\P \leftrightarrow P = T \\</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span><span class="mspace newline"></span></span></span></span></p><h4 id="吸收率">吸收率</h4><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo>∨</mo><mo stretchy="false">(</mo><mi>P</mi><mo>∧</mo><mi>Q</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mspace linebreak="newline"></mspace><mi>P</mi><mo>∧</mo><mo stretchy="false">(</mo><mi>P</mi><mo>∨</mo><mi>Q</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">P \vee (P \wedge Q) = P \\P \wedge (P \vee Q) = P \\</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">Q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">Q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span class="mspace newline"></span></span></span></span></p><h4 id="摩根率">摩根率</h4><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">¬</mi><mo stretchy="false">(</mo><mi>P</mi><mo>∨</mo><mi>Q</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">¬</mi><mi>P</mi><mo>∧</mo><mi mathvariant="normal">¬</mi><mi>Q</mi><mspace linebreak="newline"></mspace><mi mathvariant="normal">¬</mi><mo stretchy="false">(</mo><mi>P</mi><mo>∧</mo><mi>Q</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">¬</mi><mi>P</mi><mo>∨</mo><mi mathvariant="normal">¬</mi><mi>Q</mi><mspace linebreak="newline"></mspace><mtext>对蕴涵词、双条件词作否定有</mtext><mo>:</mo><mspace linebreak="newline"></mspace><mi mathvariant="normal">¬</mi><mo stretchy="false">(</mo><mi>P</mi><mo>→</mo><mi>Q</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo>∧</mo><mi mathvariant="normal">¬</mi><mi>Q</mi><mspace linebreak="newline"></mspace><mi mathvariant="normal">¬</mi><mo stretchy="false">(</mo><mi>P</mi><mo>↔</mo><mi>Q</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">¬</mi><mi>P</mi><mo>↔</mo><mi>Q</mi><mo>=</mo><mi>P</mi><mo>↔</mo><mi mathvariant="normal">¬</mi><mi>Q</mi><mo>=</mo><mo stretchy="false">(</mo><mi mathvariant="normal">¬</mi><mi>P</mi><mo>∧</mo><mi>Q</mi><mo stretchy="false">)</mo><mo>∨</mo><mo stretchy="false">(</mo><mi>P</mi><mo>∧</mo><mi mathvariant="normal">¬</mi><mi>Q</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\neg (P \vee Q) = \neg P \wedge \neg Q \\\neg (P \wedge Q) = \neg P \vee \neg Q \\对蕴涵词、双条件词作否定有:\\\neg (P \rightarrow Q) = P \wedge \neg Q \\\neg (P \leftrightarrow Q) = \neg P \leftrightarrow Q = P \leftrightarrow \neg Q= (\neg P \wedge Q) \vee (P \wedge \neg Q)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">¬</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">Q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">¬</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">¬</span><span class="mord mathnormal">Q</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">¬</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">Q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">¬</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">¬</span><span class="mord mathnormal">Q</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">对蕴涵词、双条件词作否定有</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">¬</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">Q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">¬</span><span class="mord mathnormal">Q</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">¬</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">Q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">¬</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">¬</span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">¬</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">Q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">¬</span><span class="mord mathnormal">Q</span><span class="mclose">)</span></span></span></span></span></p><h4 id="同一律">同一律</h4><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo>∨</mo><mi>F</mi><mo>=</mo><mi>P</mi><mspace linebreak="newline"></mspace><mi>P</mi><mo>∧</mo><mi>T</mi><mo>=</mo><mi>P</mi><mspace linebreak="newline"></mspace><mi>T</mi><mo>→</mo><mi>P</mi><mo>=</mo><mi>P</mi><mspace linebreak="newline"></mspace><mi>T</mi><mo>↔</mo><mi>P</mi><mo>=</mo><mi>P</mi><mspace linebreak="newline"></mspace><mi mathvariant="normal">&amp;</mi><mspace linebreak="newline"></mspace><mi>P</mi><mo>→</mo><mi>F</mi><mo>=</mo><mi mathvariant="normal">¬</mi><mi>P</mi><mspace linebreak="newline"></mspace><mi>F</mi><mo>↔</mo><mi>P</mi><mo>=</mo><mi mathvariant="normal">¬</mi><mi>P</mi><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">P \vee F = P \\P \wedge T = P \\T \rightarrow P = P \\T \leftrightarrow P = P \\\&amp; \\P \rightarrow F = \neg P \\F \leftrightarrow P = \neg P \\</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">&amp;</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">¬</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">¬</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span class="mspace newline"></span></span></span></span></p><h4 id="零律">零律</h4><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo>∨</mo><mi>T</mi><mo>=</mo><mi>T</mi><mspace linebreak="newline"></mspace><mi>P</mi><mo>∧</mo><mi>F</mi><mo>=</mo><mi>F</mi><mspace linebreak="newline"></mspace><mi mathvariant="normal">&amp;</mi><mspace linebreak="newline"></mspace><mi>P</mi><mo>→</mo><mi>T</mi><mo>=</mo><mi>T</mi><mspace linebreak="newline"></mspace><mi>F</mi><mo>→</mo><mi>P</mi><mo>=</mo><mi>T</mi><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">P \vee T = T \\P \wedge F = F \\\&amp; \\P \rightarrow T = T \\F \rightarrow P = T \\</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">&amp;</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span><span class="mspace newline"></span></span></span></span></p><h4 id="补余律">补余律</h4><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo>∨</mo><mi mathvariant="normal">¬</mi><mi>P</mi><mo>=</mo><mi>T</mi><mspace linebreak="newline"></mspace><mi>P</mi><mo>∧</mo><mi mathvariant="normal">¬</mi><mi>P</mi><mo>=</mo><mi>F</mi><mspace linebreak="newline"></mspace><mi mathvariant="normal">&amp;</mi><mspace linebreak="newline"></mspace><mi>P</mi><mo>→</mo><mi mathvariant="normal">¬</mi><mi>P</mi><mo>=</mo><mi mathvariant="normal">¬</mi><mi>P</mi><mspace linebreak="newline"></mspace><mi mathvariant="normal">¬</mi><mi>P</mi><mo>→</mo><mi>P</mi><mo>=</mo><mi>P</mi><mspace linebreak="newline"></mspace><mi>P</mi><mo>↔</mo><mi mathvariant="normal">¬</mi><mi>P</mi><mo>=</mo><mi>F</mi><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">P \vee \neg P = T \\P \wedge \neg P = F \\\&amp; \\P \rightarrow \neg P = \neg P \\\neg P \rightarrow P = P \\P \leftrightarrow \neg P = F \\</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">¬</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">¬</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">&amp;</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">¬</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">¬</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">¬</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">¬</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span><span class="mspace newline"></span></span></span></span></p><h4 id="等价否定等值式">等价否定等值式</h4><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo>↔</mo><mi>Q</mi><mo>=</mo><mi mathvariant="normal">¬</mi><mi>P</mi><mo>↔</mo><mi mathvariant="normal">¬</mi><mi>Q</mi></mrow><annotation encoding="application/x-tex">P \leftrightarrow Q = \neg P \leftrightarrow \neg Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">¬</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">¬</span><span class="mord mathnormal">Q</span></span></span></span></span></p><h4 id="归谬论">归谬论</h4><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><mi>P</mi><mo>→</mo><mi>Q</mi><mo stretchy="false">)</mo><mo>∧</mo><mo stretchy="false">(</mo><mi>P</mi><mo>→</mo><mi mathvariant="normal">¬</mi><mi>Q</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">¬</mi><mi>P</mi></mrow><annotation encoding="application/x-tex">(P \rightarrow Q) \wedge (P \rightarrow \neg Q) = \neg P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">Q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">¬</span><span class="mord mathnormal">Q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">¬</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span></span></p><h4 id="其他常用等值公式">其他常用等值公式</h4><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo>→</mo><mi>Q</mi><mo>=</mo><mi mathvariant="normal">¬</mi><mi>P</mi><mo>∨</mo><mi>Q</mi><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">P \rightarrow Q = \neg P \vee Q \\</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">¬</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span></span><span class="mspace newline"></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo>→</mo><mi>Q</mi><mo>=</mo><mi mathvariant="normal">¬</mi><mi>Q</mi><mo>→</mo><mi mathvariant="normal">¬</mi><mi>P</mi><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">P \rightarrow Q = \neg Q \rightarrow \neg P \\</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">¬</span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">¬</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span class="mspace newline"></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo>→</mo><mo stretchy="false">(</mo><mi>Q</mi><mo>→</mo><mi>R</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>P</mi><mo>∧</mo><mi>Q</mi><mo stretchy="false">)</mo><mo>→</mo><mi>R</mi><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">P \rightarrow (Q \rightarrow R) = (P \wedge Q) \rightarrow R \\</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">Q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span><span class="mspace newline"></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo>↔</mo><mi>Q</mi><mo>=</mo><mo stretchy="false">(</mo><mi>P</mi><mo>∧</mo><mi>Q</mi><mo stretchy="false">)</mo><mo>∨</mo><mo stretchy="false">(</mo><mi mathvariant="normal">¬</mi><mi>P</mi><mo>∧</mo><mi mathvariant="normal">¬</mi><mi>Q</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P \leftrightarrow Q = (P \wedge Q) \vee (\neg P \wedge \neg Q)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">Q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">¬</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">¬</span><span class="mord mathnormal">Q</span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo>↔</mo><mi>Q</mi><mo>=</mo><mo stretchy="false">(</mo><mi>P</mi><mo>∨</mo><mi mathvariant="normal">¬</mi><mi>Q</mi><mo stretchy="false">)</mo><mo>∧</mo><mo stretchy="false">(</mo><mi mathvariant="normal">¬</mi><mi>P</mi><mo>∨</mo><mi>Q</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P \leftrightarrow Q = (P \vee \neg Q) \wedge (\neg P \vee Q)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">¬</span><span class="mord mathnormal">Q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">¬</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">Q</span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo>↔</mo><mi>Q</mi><mo>=</mo><mo stretchy="false">(</mo><mi>P</mi><mo>→</mo><mi>Q</mi><mo stretchy="false">)</mo><mo>∧</mo><mo stretchy="false">(</mo><mi>Q</mi><mo>→</mo><mi>P</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P \leftrightarrow Q = (P \rightarrow Q) \wedge (Q \rightarrow P)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">Q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo>→</mo><mo stretchy="false">(</mo><mi>Q</mi><mo>→</mo><mi>R</mi><mo stretchy="false">)</mo><mo>=</mo><mi>Q</mi><mo>→</mo><mo stretchy="false">(</mo><mi>P</mi><mo>→</mo><mi>R</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P \rightarrow (Q \rightarrow R) = Q \rightarrow (P \rightarrow R)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><mi>P</mi><mo>→</mo><mi>R</mi><mo stretchy="false">)</mo><mo>∧</mo><mo stretchy="false">(</mo><mi>Q</mi><mo>→</mo><mi>R</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>P</mi><mo>∨</mo><mi>Q</mi><mo stretchy="false">)</mo><mo>→</mo><mi>R</mi></mrow><annotation encoding="application/x-tex">(P \rightarrow R) \wedge (Q \rightarrow R) = (P \vee Q) \rightarrow R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">Q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></span></p><h3 id="推理规则">推理规则</h3><h4 id="肯定前件式">肯定前件式</h4><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>P</mi><mo>→</mo><mi>Q</mi></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>P</mi></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>∴</mo><mi>Q</mi></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align}&amp; P \rightarrow Q \\&amp; P \\&amp; \therefore Q\end{align}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.5em;vertical-align:-2em;"></span><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">Q</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">∴</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">Q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="eqn-num"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="eqn-num"></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="eqn-num"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span></span></span></span></p><h4 id="否定后件式">否定后件式</h4><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>P</mi><mo>→</mo><mi>Q</mi></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi mathvariant="normal">¬</mi><mi>Q</mi></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>∴</mo><mi mathvariant="normal">¬</mi><mi>P</mi></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align}&amp; P \rightarrow Q \\&amp; \neg Q \\&amp; \therefore \neg P\end{align}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.5em;vertical-align:-2em;"></span><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">Q</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord">¬</span><span class="mord mathnormal">Q</span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">∴</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">¬</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="eqn-num"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="eqn-num"></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="eqn-num"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span></span></span></span></p><h4 id="假言三段论">假言三段论</h4><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>P</mi><mo>→</mo><mi>Q</mi></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>Q</mi><mo>→</mo><mi>R</mi></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>∴</mo><mi>P</mi><mo>→</mo><mi>R</mi></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align}&amp; P \rightarrow Q \\&amp; Q \rightarrow R \\&amp; \therefore P \rightarrow R\end{align}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.5em;vertical-align:-2em;"></span><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">Q</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">∴</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="eqn-num"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="eqn-num"></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="eqn-num"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span></span></span></span></p><h4 id="析取三段论">析取三段论</h4><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>P</mi><mo>∨</mo><mi>Q</mi></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi mathvariant="normal">¬</mi><mi>P</mi></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>∴</mo><mi>Q</mi></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align}&amp; P \vee Q \\&amp; \neg P \\&amp; \therefore Q\end{align}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.5em;vertical-align:-2em;"></span><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">Q</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord">¬</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">∴</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">Q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="eqn-num"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="eqn-num"></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="eqn-num"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span></span></span></span></p><h4 id="构造式二难">构造式二难</h4><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">(</mo><mi>P</mi><mo>→</mo><mi>Q</mi><mo stretchy="false">)</mo><mo>∧</mo><mo stretchy="false">(</mo><mi>R</mi><mo>→</mo><mi>S</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>P</mi><mo>∨</mo><mi>R</mi></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>∴</mo><mi>Q</mi><mo>∨</mo><mi>S</mi></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align}&amp; (P \rightarrow Q) \wedge (R \rightarrow S) \\&amp; P \vee R \\&amp; \therefore Q \vee S\end{align}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.5em;vertical-align:-2em;"></span><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">Q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">∴</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="eqn-num"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="eqn-num"></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="eqn-num"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span></span></span></span></p><h4 id="吸收率-2">吸收率</h4><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>P</mi><mo>→</mo><mi>Q</mi></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>∴</mo><mi>P</mi><mo>→</mo><mo stretchy="false">(</mo><mi>P</mi><mo>∧</mo><mi>Q</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align}&amp; P \rightarrow Q \\&amp; \therefore P\rightarrow (P \wedge Q)\end{align}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75em;"><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">Q</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">∴</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">Q</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75em;"><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="eqn-num"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="eqn-num"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span></span></span></span></p><h4 id="简化率">简化率</h4><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>P</mi><mo>∧</mo><mi>Q</mi></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>∴</mo><mi>P</mi></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align}&amp; P \wedge Q \\&amp; \therefore P\end{align}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75em;"><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">Q</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">∴</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75em;"><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="eqn-num"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="eqn-num"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span></span></span></span></p><h4 id="合取律">合取律</h4><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>P</mi></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>Q</mi></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>∴</mo><mi>P</mi><mo>∧</mo><mi>Q</mi></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align}&amp; P\\&amp; Q \\&amp; \therefore P \wedge Q\end{align}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.5em;vertical-align:-2em;"></span><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal">Q</span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">∴</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">Q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="eqn-num"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="eqn-num"></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="eqn-num"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span></span></span></span></p><h4 id="附加率">附加率</h4><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>P</mi></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>∴</mo><mi>P</mi><mo>∨</mo><mi>Q</mi></mrow></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align}&amp; P \\&amp; \therefore P \vee Q\end{align}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75em;"><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">∴</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">Q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75em;"><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="eqn-num"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="eqn-num"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span></span></span></span></p><h3 id="参考资料-6">参考资料</h3><p><a href="https://zhuanlan.zhihu.com/p/82986019">大佬的数理逻辑整理</a></p><p><a href="https://zh.wikipedia.org/wiki/%E5%91%BD%E9%A2%98%E9%80%BB%E8%BE%91">wiki</a></p><p>逻辑学书籍</p>]]></content>
      
      
      <categories>
          
          <category> 基础知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 逻辑学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HDFS文件纠删码技术</title>
      <link href="/2022/04/19/ErasuredCode/"/>
      <url>/2022/04/19/ErasuredCode/</url>
      
        <content type="html"><![CDATA[<blockquote><p>HDFS文件纠删码技术学习笔记</p></blockquote><h2 id="HDFS的三副本技术">HDFS的三副本技术</h2><p>HDFS（Hadoop Distributed File System）是基于 流数据 访问模式的 分布式文件系统 ，其设计建立在 “一次写入、多次读取” 的基础上，提供高吞吐量、高容错性、高可靠性的数据访问，能很好地解决海量数据的存储问题。</p><p>高可靠性。数据自动保存多个副本，通过多副本提高可靠性。</p><p>HDFS 默认保存 3 份副本。</p><p>第一个副本：放置在 上传文件 的数据节点（第一个副本如果是在 集群外 提交，则随机挑选一个 CPU 比较空闲 、 磁盘不太满 的节点）；<br>第二个副本：放置在与 第一个副本 不同 的机架的节点上；<br>第三个副本：放在与 第二个副本 相同 的机架的其他节点上。</p><p>缺点：冗余度高：3</p><p>(HDFS过去使用暴力的三副本技术，随着数据量越来越大，现代数据中心越来越多的使用纠删码技术来减少冗余度，同时保证了数据的容错性。)</p><p>Hadoop3.x 使用纠删码，将冗余度从3倍降低到1.4倍左右</p><h2 id="纠删码（ErasuredCode-EC）">纠删码（ErasuredCode/EC）</h2><p>Erasure Code是一种编码技术，它可以将n份原始数据，增加m份数据，并能通过n+m份中的任意n份数据，还原为原始数据。即如果有任意小于等于m份的数据失效，仍然能通过剩下的数据还原出来。 纠删码技术在分布式存储 系统中的应用主要有三类，阵列纠删码（Array Code: RAID5、RAID6等）、RS(Reed-Solomon)里德-所罗门类纠删码和LDPC(LowDensity Parity Check Code)低密度奇偶校验纠删码。 LDPC码目前主要用于通信、视频和音频编码等领域。</p><p>多副本策略即将数据存储多个副本（一般是三副本，比如HDFS），当某个副本丢失时，可以通过其他副本复制回来。三副本的磁盘利用率为1/3。</p><p>纠删码技术主要是通过纠删码算法将原始的数据进行编码得到冗余，并将数据和冗余一并存储起来，以达到容错的目的。其基本思想是将n块原始的数据元素通过一定的计算，得到m块冗余元素（校验块）。对于这n+m块的元素，当其中任意的m块元素出错（包括原始数据和冗余数据）时，均可以通过对应的重构算法恢复出原来的n块数据。生成校验的过程被成为编码（encoding），恢复丢失数据块的过程被称为解码（decoding）。磁盘利用率为n/(n+m)。基于纠删码的方法与多副本方法相比具有冗余度低、磁盘利用率高等优点。</p><table><thead><tr><th>两种技术</th><th>冗余度</th><th>计算开销</th><th>网络消耗</th><th>恢复效率</th></tr></thead><tbody><tr><td>多副本(3副本)</td><td>3</td><td>几乎没有</td><td>较低</td><td>较高</td></tr><tr><td>纠删码(n+m)</td><td>(n+m)/n</td><td>高</td><td>较高</td><td>较低</td></tr></tbody></table><h3 id="RS码原理">RS码原理</h3><p>以n=5，m=3为例。即5个原始数据块，乘上一个(n+m)*n的矩阵，然后得出一个(n+m)*1的矩阵。根据矩阵特点可以得知结果矩阵中前面5个值与原来的5个数据块的值相等，而最后3个则是计算出来的校验块。</p><img src="/2022/04/19/ErasuredCode/image-20220419195102015.png" class="" title="image-20220419195102015"><p>以上过程为编码过程。D是原始数据块，得到的C为校验块。</p><p>假设丢失了m块数据。如下：</p><img src="/2022/04/19/ErasuredCode/image-20220419195128558.png" class="" title="image-20220419195128558"><p>那我们如何从剩余的n个数据块（注意，这里剩余的n块可能包含几个原始数据块+几个校验块）恢复出来原始的n个数据块呢，就需要通过下面的decoding（解码）过程来实现。</p><p>第一步：从编码矩阵中删去丢失数据块和丢失编码块对应行。 将删掉m个块的(n+m)<em>1个矩阵变形为n</em>1矩阵，同时B矩阵也需要删掉对应的m个行得出一个B’的变形矩阵，这个B’就是n*n矩阵。如下：假设D1、D4、C2丢失，我们得到如下B’矩阵及等式。</p><img src="/2022/04/19/ErasuredCode/image-20220419195202776.png" class="" title="image-20220419195202776"><p>第二步：求出B’的逆矩阵。</p><img src="/2022/04/19/ErasuredCode/image-20220419195253655.png" class="" title="image-20220419195253655"><p>第三步：等式两边分别乘上B’的逆矩阵。</p><img src="/2022/04/19/ErasuredCode/image-20220419195308356.png" class="" title="image-20220419195308356"><p>B’和它的逆矩阵相乘得到单位矩阵I，如下：</p><img src="/2022/04/19/ErasuredCode/image-20220419195322435.png" class="" title="image-20220419195322435"><p>左边只剩下原始数据矩阵D：</p><img src="/2022/04/19/ErasuredCode/image-20220419195336625.png" class="" title="image-20220419195336625"><p>至此完成解码过程。</p><blockquote><p>注1：图中黄色部分为范德蒙矩阵。至于如何生成B矩阵，以及如何求B’的逆矩阵，请查看其他相关文献，这里不再赘述。</p><p>注2：m的值决定了最多可同时容忍的坏块数量。m越大，容错越强，但冗余度也越大。</p></blockquote><h3 id="优缺点">优缺点</h3><p>低冗余度，高磁盘利用率。</p><p>数据更新代价高。 数据更新相当于重新编码， 代价很高， 因此常常针对只读数据，或者冷数据。</p><p>数据恢复代价高。 丢失数据块或者编码块时， RS需要读取n个数据块和校验块才能恢复数据， 数据恢复效率也在一定程度上制约了RS的可靠性。</p><p><strong>优化方案</strong></p><p>最佳的解决方案是<strong>分组</strong>，把单个磁盘故障的影响范围缩小到各个组内部，当磁盘出现故障时，在该组内部解决，在恢复过程中读组内更少的盘，跑更少的网络流量，从而减小对全局的影响。</p><h2 id="LRC">LRC</h2><p>LRC(Locally Repairable Codes)意为局部校验编码，其核心思想为:</p><p>将校验块分为全局校验块和局部校验块，在故障恢复时分组计算。</p><p>微软 Azure 和 Facebook 通过这项技术将数据冗余度降低到 1.33x 和 1.4x。</p><p>以微软 Azure 的云存储(Windows Azure Storage)实现为例：</p><p>它采用LRC(12，2，2)编码，12个数据块为一组编码，并进一步将这12个数据块平均分为两个本地组，每个本地组包括6个数据块，并分别计算出一个局部校验块，之后把所有12个数据块计算出两个全局校验块。<br>当发生任何一个数据块错误时，只需将本地组内的数据和校验块用于计算，即可恢复出原始数据。<br>恢复代价(通过网络传输的数据块数量)就由传统RS(12，4)编码的12变为6，恢复过程的网络IO开销减半，同时空间冗余率保持不变，仍为(12+2+2)/12=1.33</p><blockquote><p>当前LRC的主流优化方向之一就是选取合适的分组方式和校验块数量，保证容错的同时尽可能降低冗余度。</p></blockquote><h2 id="基于修复分层的纠删码技术-DRC">基于修复分层的纠删码技术-DRC</h2><blockquote><p>在节点内部做一定的计算，从而减少修复时的传输流量</p></blockquote><p>DoubleR 提出修复分层这一概念，该概念将修复操作分成内部机架和交叉机架 层。具体而言，DoubleR 选择分层块放置，每个机架放置一个条带的多个块，从而以减少机架级别容 错为代价，最小化交叉机架恢复流量。为了修复一个坏块，每个机架一个选定节点能使用相同机架中 其他可用块来执行部分修复操作，然后发送该机架的部分修复结果到目的节点，目的节点结合多个部 分修复结果来重建坏块。通过修复分层，理论上证明了通过名为 double regenerating codes(DRC) 的一类新的再生码，能最小化交叉机架修复流量。</p><h3 id="DRC基础架构">DRC基础架构</h3><img src="/2022/04/19/ErasuredCode/image-20220412102540275.png" class="" title="image-20220412102540275"><p>修复过程：考虑一个由多个机架组成的分层数据中心，每个机架包含多个存储节点。同一个机架 内的多个节点通过机架顶部的交换结构连接，不同机架通过名为网络核心的抽象交换结构连接。修复 坏块是通过位于同一机架（本地机架）和不同机架（非本地机架）的其他节点检索可用块来完成的。 DoubleR 选择一个本地机架节点负责重构坏块，同时在每个非本地机架选择一个 relayer 节点来聚 合转发该机架的修复结果。通常来说，一个中继节点应该是本地存储用于修复的可用块之一，以便节 省内部机架网络传输流量。每个非本地机架中，每个节点发送编码子块到中继节点，中继节点重新编 码这些子块。这些中继节点将重新编码的子块发送到目标处，该目标重构这个坏块。在 DoubleR 部 署中，我们可以指定不同中继节点和目标节点来修复坏块，从而实现并行。</p><h3 id="两大系列-DRC-结构">两大系列 DRC 结构</h3><img src="/2022/04/19/ErasuredCode/image-20220419101306501.png" class="" title="image-20220419101306501"><p>两大系列 DRC 分别是 DRC(n, k, n/n-k) 和 DRC(3z, 2z−1, 3)，两大系列 DRC 的修复过程有 差别，但核心思路是一样的。编码后的 n 个数据块存在线性相关，当出现坏块需要修复时，现在本 地机架将一个条带的多个块进行组合，然后将组合结果传输到目标节点即可。组合这一关键步骤大 幅度减少了修复坏块时的交叉流量。图 1展示了两大系列中各一个案例的结构图。</p><h3 id="实验验证">实验验证</h3><p>实验设备：在 11 台机器的集群上进行的。每台机器都有一个四核 3.4 GHz Intel Core I5-3470,16 GIB RAM，以及希捷 ST1000DM003 7200 RPM 1 TIB SATA 硬盘。所有机器都通过 10 GB / S 以太网交换机互连。我们在 10 台机器上部署 Facebook 的 HDFS。一台机器运行 NameNode 和 RaidNode，其他 N 个机器中的每一个都运行（n，k，r）代码的 DataNode，其中 N 在我们的评估 中最多 9 个</p><p>在数据恢复性能的实验评估：只有当交叉机架传输是数据中心的性能瓶颈时，我们才能声称 DRC 与其它纠删码相比具有显著优势。</p><p>在错误读取性能的实验评估：DRC 显示了性能提升通过最小化跨机架修复流量来降低读取性能。</p><p>条带大小和块大小影响评估：条带大小过大或者过小都会引起性能下降，大小适中时块修复吞吐 量均处于较高水准。块大小较小时，块修复吞吐量随着块大小增加而增加，块大小达到一定时（该文 献实验为 64MiB），修复吞吐量达到最大值。</p>]]></content>
      
      
      <categories>
          
          <category> 分布式系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 纠删码 </tag>
            
            <tag> 分布式系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shiro安全框架</title>
      <link href="/2022/04/13/Shiro/"/>
      <url>/2022/04/13/Shiro/</url>
      
        <content type="html"><![CDATA[<h2 id="简介">简介</h2><p>Apache Shiro 是一个功能强大、灵活的，开源的安全框架。它可以干净利落地处理身份验证、授权、企业会话管理和加密。</p><h3 id="Apache-Shiro-Features-特性">Apache Shiro Features 特性</h3><p>下图为描述 Shiro 功能的框架图：</p><img src="/2022/04/13/Shiro/image-20220413223154179.png" class="" title="image-20220413223154179"><p>Authentication（认证）, Authorization（授权）, Session Management（会话管理）, Cryptography（加密）被 Shiro 框架的开发团队称之为应用安全的四大基石。那么就让我们来看看它们吧：</p><ul><li>**Authentication（认证）：**用户身份识别，通常被称为用户“登录”</li><li>**Authorization（授权）：**访问控制。比如某个用户是否具有某个操作的使用权限。</li><li>**Session Management（会话管理）：**特定于用户的会话管理,甚至在非web 或 EJB 应用程序。</li><li>**Cryptography（加密）：**在对数据源使用加密算法加密的同时，保证易于使用。</li></ul><h3 id="High-Level-Overview-高级概述">High-Level Overview 高级概述</h3><p>在概念层，Shiro 架构包含三个主要的理念：Subject，SecurityManager和 Realm。下面的图展示了这些组件如何相互作用，我们将在下面依次对其进行描述。</p><img src="/2022/04/13/Shiro/image-20220413223405999.png" class="" title="image-20220413223405999"><ul><li>Subject：当前用户，Subject 可以是一个人，但也可以是第三方服务、守护进程帐户、时钟守护任务或者其它–当前和软件交互的任何事件。</li><li>SecurityManager：管理所有Subject，SecurityManager 是 Shiro 架构的核心，配合内部安全组件共同组成安全伞。</li><li>Realms：用于进行权限信息的验证，我们自己实现。Realm 本质上是一个特定的安全 DAO：它封装与数据源连接的细节，得到Shiro 所需的相关的数据。在配置 Shiro 的时候，你必须指定至少一个Realm 来实现认证（authentication）和/或授权（authorization）。</li></ul><p>我们需要实现Realms的Authentication 和 Authorization。其中 Authentication 是用来验证用户身份，Authorization 是授权访问控制，用于对用户进行的操作授权，证明该用户是否允许进行当前操作，如访问某个链接，某个资源文件等。</p><h2 id="引入Maven依赖">引入Maven依赖</h2><p>使用Shiro的关键依赖如下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--shiro配置权限管理--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;shiro.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;shiro.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Shiro-配置">Shiro 配置</h2><p>首先要配置的是 ShiroConfig 类，Apache Shiro 核心通过 Filter 来实现，通过 URL 规则来进行过滤和权限校验，所以我们需要定义一系列关于 URL 的规则和访问权限。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Shiro的配置文件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ShiroConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(&quot;sessionManager&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> SessionManager <span class="title function_">sessionManager</span><span class="params">(RedisShiroSessionDAO redisShiroSessionDAO,</span></span><br><span class="line"><span class="params">                                         <span class="meta">@Value(&quot;$&#123;db.redis.open&#125;&quot;)</span> <span class="type">boolean</span> redisOpen,</span></span><br><span class="line"><span class="params">                                         <span class="meta">@Value(&quot;$&#123;db.shiro.redis&#125;&quot;)</span> <span class="type">boolean</span> shiroRedis)</span>&#123;</span><br><span class="line">        <span class="type">DefaultWebSessionManager</span> <span class="variable">sessionManager</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DefaultWebSessionManager</span>();</span><br><span class="line">        <span class="comment">//设置session过期时间为1小时(单位：毫秒)，默认为30分钟</span></span><br><span class="line">        sessionManager.setGlobalSessionTimeout(<span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>);</span><br><span class="line">        sessionManager.setSessionValidationSchedulerEnabled(<span class="literal">true</span>);</span><br><span class="line">        sessionManager.setSessionIdUrlRewritingEnabled(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//如果开启redis缓存且renren.shiro.redis=true，则shiro session存到redis里</span></span><br><span class="line">        <span class="keyword">if</span>(redisOpen &amp;&amp; shiroRedis)&#123;</span><br><span class="line">            sessionManager.setSessionDAO(redisShiroSessionDAO);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sessionManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(&quot;securityManager&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> SecurityManager <span class="title function_">securityManager</span><span class="params">(UserRealm userRealm, SessionManager sessionManager)</span> &#123;</span><br><span class="line">        <span class="type">DefaultWebSecurityManager</span> <span class="variable">securityManager</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DefaultWebSecurityManager</span>();</span><br><span class="line">        securityManager.setRealm(userRealm);</span><br><span class="line">        securityManager.setSessionManager(sessionManager);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> securityManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(&quot;shiroFilter&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ShiroFilterFactoryBean <span class="title function_">shiroFilter</span><span class="params">(SecurityManager securityManager)</span> &#123;</span><br><span class="line">        <span class="type">ShiroFilterFactoryBean</span> <span class="variable">shiroFilter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ShiroFilterFactoryBean</span>();</span><br><span class="line">        shiroFilter.setSecurityManager(securityManager);</span><br><span class="line">        shiroFilter.setLoginUrl(<span class="string">&quot;/login.html&quot;</span>);</span><br><span class="line">        shiroFilter.setUnauthorizedUrl(<span class="string">&quot;/&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Map&lt;String, String&gt; filterMap = <span class="keyword">new</span> <span class="title class_">LinkedHashMap</span>&lt;&gt;();</span><br><span class="line">        filterMap.put(<span class="string">&quot;/swagger/**&quot;</span>, <span class="string">&quot;anon&quot;</span>);</span><br><span class="line">        filterMap.put(<span class="string">&quot;/v2/api-docs&quot;</span>, <span class="string">&quot;anon&quot;</span>);</span><br><span class="line">        filterMap.put(<span class="string">&quot;/swagger-ui.html&quot;</span>, <span class="string">&quot;anon&quot;</span>);</span><br><span class="line">        filterMap.put(<span class="string">&quot;/webjars/**&quot;</span>, <span class="string">&quot;anon&quot;</span>);</span><br><span class="line">        filterMap.put(<span class="string">&quot;/swagger-resources/**&quot;</span>, <span class="string">&quot;anon&quot;</span>);</span><br><span class="line"></span><br><span class="line">        filterMap.put(<span class="string">&quot;/statics/**&quot;</span>, <span class="string">&quot;anon&quot;</span>);</span><br><span class="line">        filterMap.put(<span class="string">&quot;/login.html&quot;</span>, <span class="string">&quot;anon&quot;</span>);</span><br><span class="line">        filterMap.put(<span class="string">&quot;/sys/login&quot;</span>, <span class="string">&quot;anon&quot;</span>);</span><br><span class="line">        filterMap.put(<span class="string">&quot;/favicon.ico&quot;</span>, <span class="string">&quot;anon&quot;</span>);</span><br><span class="line">        filterMap.put(<span class="string">&quot;/captcha.jpg&quot;</span>, <span class="string">&quot;anon&quot;</span>);</span><br><span class="line">        filterMap.put(<span class="string">&quot;/**&quot;</span>, <span class="string">&quot;authc&quot;</span>);</span><br><span class="line">        shiroFilter.setFilterChainDefinitionMap(filterMap);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> shiroFilter;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/* ... */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>sessionManager</code> 方法管理会话，配置相关参数</p><p><code>securityManager</code> 是管理所有Shiro相关对象的核心方法</p><p><code>shiroFilter</code> 拦截器用来过滤和校验</p><p><strong>Filter Chain 定义说明：</strong></p><ul><li>1、一个URL可以配置多个 Filter，使用逗号分隔</li><li>2、当设置多个过滤器时，全部验证通过，才视为通过</li><li>3、部分过滤器可指定参数，如 perms，roles</li></ul><p><strong>Shiro 内置的 FilterChain</strong></p><table><thead><tr><th style="text-align:left">Filter Name</th><th style="text-align:left">Class</th></tr></thead><tbody><tr><td style="text-align:left">anon</td><td style="text-align:left">org.apache.shiro.web.filter.authc.AnonymousFilter</td></tr><tr><td style="text-align:left">authc</td><td style="text-align:left">org.apache.shiro.web.filter.authc.FormAuthenticationFilter</td></tr><tr><td style="text-align:left">authcBasic</td><td style="text-align:left">org.apache.shiro.web.filter.authc.BasicHttpAuthenticationFilter</td></tr><tr><td style="text-align:left">perms</td><td style="text-align:left">org.apache.shiro.web.filter.authz.PermissionsAuthorizationFilter</td></tr><tr><td style="text-align:left">port</td><td style="text-align:left">org.apache.shiro.web.filter.authz.PortFilter</td></tr><tr><td style="text-align:left">rest</td><td style="text-align:left">org.apache.shiro.web.filter.authz.HttpMethodPermissionFilter</td></tr><tr><td style="text-align:left">roles</td><td style="text-align:left">org.apache.shiro.web.filter.authz.RolesAuthorizationFilter</td></tr><tr><td style="text-align:left">ssl</td><td style="text-align:left">org.apache.shiro.web.filter.authz.SslFilter</td></tr><tr><td style="text-align:left">user</td><td style="text-align:left">org.apache.shiro.web.filter.authc.UserFilter</td></tr></tbody></table><ul><li>anon:所有 url 都都可以匿名访问</li><li>authc: 需要认证才能进行访问</li><li>user:配置记住我或认证通过可以访问</li></ul><h2 id="Authentication（认证）">Authentication（认证）</h2><p>在认证、授权内部实现机制中都有提到，最终处理都将交给Real进行处理。因为在 Shiro 中，最终是通过 Realm 来获取应用程序中的用户、角色及权限信息的。通常情况下，在 Realm 中会直接从我们的数据源中获取 Shiro 需要的验证信息。可以说，Realm 是专用于安全框架的 DAO. Shiro 的认证过程最终会交由 Realm 执行，这时会调用 Realm 的<code>getAuthenticationInfo(token)</code>方法。</p><p>该方法主要执行以下操作:</p><ul><li>1、检查提交的进行认证的令牌信息</li><li>2、根据令牌信息从数据源(通常为数据库)中获取用户信息</li><li>3、对用户信息进行匹配验证。</li><li>4、验证通过将返回一个封装了用户信息的<code>AuthenticationInfo</code>实例。</li><li>5、验证失败则抛出<code>AuthenticationException</code>异常信息。</li></ul><p>而在我们的应用程序中要做的就是自定义一个 Realm 类，继承AuthorizingRealm 抽象类，重载 doGetAuthenticationInfo()，重写获取用户信息的方法。</p><h3 id="doGetAuthenticationInfo-的重写">doGetAuthenticationInfo 的重写</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserRealm</span> <span class="keyword">extends</span> <span class="title class_">AuthorizingRealm</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 认证(登录时调用)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> AuthenticationInfo <span class="title function_">doGetAuthenticationInfo</span><span class="params">(</span></span><br><span class="line"><span class="params">AuthenticationToken authcToken)</span> <span class="keyword">throws</span> AuthenticationException &#123;</span><br><span class="line"><span class="type">UsernamePasswordToken</span> <span class="variable">token</span> <span class="operator">=</span> (UsernamePasswordToken)authcToken;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查询用户信息</span></span><br><span class="line"><span class="type">SysUserEntity</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SysUserEntity</span>();</span><br><span class="line">user.setUsername(token.getUsername());</span><br><span class="line">user = sysUserDao.selectOne(user);</span><br><span class="line"></span><br><span class="line"><span class="comment">//账号不存在</span></span><br><span class="line"><span class="keyword">if</span>(user == <span class="literal">null</span>) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UnknownAccountException</span>(<span class="string">&quot;账号或密码不正确&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//账号锁定</span></span><br><span class="line"><span class="keyword">if</span>(user.getStatus() == <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">LockedAccountException</span>(<span class="string">&quot;账号已被锁定,请联系管理员&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">SimpleAuthenticationInfo</span> <span class="variable">info</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleAuthenticationInfo</span>(user, user.getPassword(), ByteSource.Util.bytes(user.getSalt()), getName());</span><br><span class="line"><span class="keyword">return</span> info;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="前端">前端</h3><p>页面代码如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-4&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary btn-block btn-flat&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;login&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>js逻辑如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line"><span class="keyword">var</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line"><span class="attr">el</span>:<span class="string">&#x27;#rrapp&#x27;</span>,</span><br><span class="line"><span class="attr">data</span>:&#123;</span><br><span class="line"><span class="attr">username</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line"><span class="attr">password</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line"><span class="attr">captcha</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line"><span class="attr">error</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="attr">errorMsg</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line"><span class="attr">src</span>: <span class="string">&#x27;captcha.jpg&#x27;</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">beforeCreate</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(self != top)&#123;</span><br><span class="line">top.<span class="property">location</span>.<span class="property">href</span> = self.<span class="property">location</span>.<span class="property">href</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">methods</span>: &#123;</span><br><span class="line"><span class="attr">refreshCode</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">src</span> = <span class="string">&quot;captcha.jpg?t=&quot;</span> + $.<span class="title function_">now</span>();</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">login</span>: <span class="keyword">function</span> (<span class="params">event</span>) &#123;</span><br><span class="line"><span class="keyword">var</span> data = <span class="string">&quot;username=&quot;</span>+vm.<span class="property">username</span>+<span class="string">&quot;&amp;password=&quot;</span>+vm.<span class="property">password</span>+<span class="string">&quot;&amp;captcha=&quot;</span>+vm.<span class="property">captcha</span>;</span><br><span class="line">$.<span class="title function_">ajax</span>(&#123;</span><br><span class="line"><span class="attr">type</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&quot;sys/login&quot;</span>,</span><br><span class="line">    <span class="attr">data</span>: data,</span><br><span class="line">    <span class="attr">dataType</span>: <span class="string">&quot;json&quot;</span>,</span><br><span class="line">    <span class="attr">success</span>: <span class="keyword">function</span>(<span class="params">result</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(result.<span class="property">code</span> == <span class="number">0</span>)&#123;<span class="comment">//登录成功</span></span><br><span class="line">parent.<span class="property">location</span>.<span class="property">href</span> =<span class="string">&#x27;index.html&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">vm.<span class="property">error</span> = <span class="literal">true</span>;</span><br><span class="line">vm.<span class="property">errorMsg</span> = result.<span class="property">msg</span>;</span><br><span class="line"></span><br><span class="line">vm.<span class="title function_">refreshCode</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="后端">后端</h3><p>Controller层配置登录验证的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 登录</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping(value = &quot;/sys/login&quot;, method = RequestMethod.POST)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">login</span><span class="params">(String username, String password, String captcha)</span> &#123;</span><br><span class="line">   <span class="type">String</span> <span class="variable">kaptcha</span> <span class="operator">=</span> ShiroUtils.getKaptcha(Constants.KAPTCHA_SESSION_KEY);</span><br><span class="line">   <span class="keyword">if</span>(!captcha.equalsIgnoreCase(kaptcha))&#123;</span><br><span class="line">      <span class="keyword">return</span> R.error(<span class="string">&quot;验证码不正确&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">try</span>&#123;</span><br><span class="line">      <span class="type">Subject</span> <span class="variable">subject</span> <span class="operator">=</span> ShiroUtils.getSubject();</span><br><span class="line">      <span class="type">UsernamePasswordToken</span> <span class="variable">token</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UsernamePasswordToken</span>(username, password);</span><br><span class="line">      subject.login(token);</span><br><span class="line">   &#125;<span class="keyword">catch</span> (UnknownAccountException e) &#123;</span><br><span class="line">      <span class="keyword">return</span> R.error(e.getMessage());</span><br><span class="line">   &#125;<span class="keyword">catch</span> (IncorrectCredentialsException e) &#123;</span><br><span class="line">      <span class="keyword">return</span> R.error(<span class="string">&quot;账号或密码不正确&quot;</span>);</span><br><span class="line">   &#125;<span class="keyword">catch</span> (LockedAccountException e) &#123;</span><br><span class="line">      <span class="keyword">return</span> R.error(<span class="string">&quot;账号已被锁定,请联系管理员&quot;</span>);</span><br><span class="line">   &#125;<span class="keyword">catch</span> (AuthenticationException e) &#123;</span><br><span class="line">      <span class="keyword">return</span> R.error(<span class="string">&quot;账户验证失败&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">   <span class="keyword">return</span> R.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="小结">小结</h3><p>登陆验证流程：</p><ul><li>若用户未登录，Shiro配置的拦截器会生效，跳转到登录界面</li><li>页面中点击登录按钮，按照js逻辑进行登录验证请求，此处即 <code>/sys/login</code></li><li>后端Controller层调用相应方法处理登录验证请求</li><li>Controller层方法最终会调用<code>Realm</code> 中的doGetAuthenticationInfo方法</li></ul><img src="/2022/04/13/Shiro/image-20220413233342234.png" class="" title="image-20220413233342234"><h2 id="Authorization（授权）">Authorization（授权）</h2><p>Shiro 的权限授权是通过继承<code>AuthorizingRealm</code>抽象类，重载<code>doGetAuthorizationInfo();</code>当访问到页面的时候，链接配置了相应的权限或者 Shiro 标签才会执行此方法否则不会执行，所以如果只是简单的身份认证没有权限的控制的话，那么这个方法可以不进行实现，直接返回 null 即可。在这个方法中主要是使用类：<code>SimpleAuthorizationInfo</code>进行角色的添加和权限的添加。</p><h3 id="doGetAuthorizationInfo-的重写">doGetAuthorizationInfo 的重写</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserRealm</span> <span class="keyword">extends</span> <span class="title class_">AuthorizingRealm</span> &#123;</span><br><span class="line">        </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 授权(验证权限时调用)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> AuthorizationInfo <span class="title function_">doGetAuthorizationInfo</span><span class="params">(PrincipalCollection principals)</span> &#123;</span><br><span class="line"><span class="type">SysUserEntity</span> <span class="variable">user</span> <span class="operator">=</span> (SysUserEntity)principals.getPrimaryPrincipal();</span><br><span class="line"><span class="type">Long</span> <span class="variable">userId</span> <span class="operator">=</span> user.getUserId();</span><br><span class="line"></span><br><span class="line">List&lt;String&gt; permsList;</span><br><span class="line"></span><br><span class="line"><span class="comment">//系统管理员，拥有最高权限</span></span><br><span class="line"><span class="keyword">if</span>(userId == Constant.SUPER_ADMIN)&#123;</span><br><span class="line">List&lt;SysMenuEntity&gt; menuList = sysMenuDao.selectList(<span class="literal">null</span>);</span><br><span class="line">permsList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(menuList.size());</span><br><span class="line"><span class="keyword">for</span>(SysMenuEntity menu : menuList)&#123;</span><br><span class="line">permsList.add(menu.getPerms());</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">permsList = sysUserDao.queryAllPerms(userId);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//用户权限列表</span></span><br><span class="line">Set&lt;String&gt; permsSet = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line"><span class="keyword">for</span>(String perms : permsList)&#123;</span><br><span class="line"><span class="keyword">if</span>(StringUtils.isBlank(perms))&#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">permsSet.addAll(Arrays.asList(perms.trim().split(<span class="string">&quot;,&quot;</span>)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">SimpleAuthorizationInfo</span> <span class="variable">info</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleAuthorizationInfo</span>();</span><br><span class="line">info.setStringPermissions(permsSet);</span><br><span class="line"><span class="keyword">return</span> info;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="RequiresPermissions-注释的使用">@RequiresPermissions() 注释的使用</h3><p>在Controller层对应方法上添加注释，例如</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 所有用户列表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/list&quot;)</span></span><br><span class="line"><span class="meta">@RequiresPermissions(&quot;sys:user:list&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">list</span><span class="params">(<span class="meta">@RequestParam</span> Map&lt;String, Object&gt; params)</span>&#123;</span><br><span class="line">   <span class="type">PageUtils</span> <span class="variable">page</span> <span class="operator">=</span> sysUserService.queryPage(params);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> R.ok().put(<span class="string">&quot;page&quot;</span>, page);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数据库样例">数据库样例</h3><p>部分权限数据如下</p><img src="/2022/04/13/Shiro/image-20220413234806844.png" class="" title="image-20220413234806844"><p>访问接口的时候，会验证其拥有的权限是否包含接口上的权限</p><h2 id="Session-Management（会话管理）">Session Management（会话管理）</h2><p>会话管理的配置在ShiroConfig类中。</p><h2 id="Cryptography（加密）">Cryptography（加密）</h2><p>加密配置 可以通过设置Shiro的bean，传入自定义密码加密器，参见<a href="https://zhuanlan.zhihu.com/p/116002847">SpringBoot Shiro 配置自定义密码加密器</a>；也可以重写Realm的setCredentialsMatcher方法</p><h3 id="setCredentialsMatcher-的重写">setCredentialsMatcher 的重写</h3><p>传入的参数包括加密方式和迭代次数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserRealm</span> <span class="keyword">extends</span> <span class="title class_">AuthorizingRealm</span> &#123;</span><br><span class="line">    </span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCredentialsMatcher</span><span class="params">(CredentialsMatcher credentialsMatcher)</span> &#123;</span><br><span class="line"><span class="type">HashedCredentialsMatcher</span> <span class="variable">shaCredentialsMatcher</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashedCredentialsMatcher</span>();</span><br><span class="line">shaCredentialsMatcher.setHashAlgorithmName(ShiroUtils.hashAlgorithmName);</span><br><span class="line">shaCredentialsMatcher.setHashIterations(ShiroUtils.hashIterations);</span><br><span class="line"><span class="built_in">super</span>.setCredentialsMatcher(shaCredentialsMatcher);</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考资料-2">参考资料</h2><p><a href="https://shiro.apache.org/">Apache Shiro 官方网站</a></p><p><a href="http://www.ityouknow.com/springboot/2017/06/26/spring-boot-shiro.html">Spring Boot 整合 Shiro-登录认证和权限管理</a></p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring Boot </tag>
            
            <tag> Shiro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kaptcha验证码组件</title>
      <link href="/2022/04/13/kaptcha/"/>
      <url>/2022/04/13/kaptcha/</url>
      
        <content type="html"><![CDATA[<h2 id="简介-2">简介</h2><p>kaptcha是谷歌开源的简单实用的验证码生成工具。通过设置参数，可以自定义验证码大小、颜色、显示的字符等等。</p><h2 id="Maven引入">Maven引入</h2><p>增加了<code>com.google.code.kaptcha:kaptcha</code> 依赖，<code>pom.xml</code> 配置文件如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.axet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>kaptcha<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;kaptcha.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="配置-2">配置</h2><p>配置类如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.google.code.kaptcha.impl.DefaultKaptcha;</span><br><span class="line"><span class="keyword">import</span> com.google.code.kaptcha.util.Config;</span><br><span class="line"><span class="comment">/* ...  */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 生成验证码配置</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">KaptchaConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> DefaultKaptcha <span class="title function_">producer</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Properties</span> <span class="variable">properties</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        properties.put(<span class="string">&quot;kaptcha.border&quot;</span>, <span class="string">&quot;no&quot;</span>);</span><br><span class="line">        properties.put(<span class="string">&quot;kaptcha.textproducer.font.color&quot;</span>, <span class="string">&quot;black&quot;</span>);</span><br><span class="line">        properties.put(<span class="string">&quot;kaptcha.textproducer.char.space&quot;</span>, <span class="string">&quot;5&quot;</span>);</span><br><span class="line">        <span class="type">Config</span> <span class="variable">config</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Config</span>(properties);</span><br><span class="line">        <span class="type">DefaultKaptcha</span> <span class="variable">defaultKaptcha</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DefaultKaptcha</span>();</span><br><span class="line">        defaultKaptcha.setConfig(config);</span><br><span class="line">        <span class="keyword">return</span> defaultKaptcha;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Controller层">Controller层</h2><p><code>Controller</code> 层的相关代码如下，通过<code>captcha.jpg</code>请求验证码，设置验证码文本，返回对应图片；验证登录时会使用该文本信息。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 登录相关</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SysLoginController</span> &#123;</span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> Producer producer;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(&quot;captcha.jpg&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">captcha</span><span class="params">(HttpServletResponse response)</span><span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        response.setHeader(<span class="string">&quot;Cache-Control&quot;</span>, <span class="string">&quot;no-store, no-cache&quot;</span>);</span><br><span class="line">        response.setContentType(<span class="string">&quot;image/jpeg&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//生成文字验证码</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">text</span> <span class="operator">=</span> producer.createText();</span><br><span class="line">        <span class="comment">//生成图片验证码</span></span><br><span class="line">        <span class="type">BufferedImage</span> <span class="variable">image</span> <span class="operator">=</span> producer.createImage(text);</span><br><span class="line">        <span class="comment">//保存到shiro session</span></span><br><span class="line">        ShiroUtils.setSessionAttribute(Constants.KAPTCHA_SESSION_KEY, text);</span><br><span class="line">        </span><br><span class="line">        <span class="type">ServletOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> response.getOutputStream();</span><br><span class="line">        ImageIO.write(image, <span class="string">&quot;jpg&quot;</span>, out);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 登录</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping(value = &quot;/sys/login&quot;, method = RequestMethod.POST)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">login</span><span class="params">(String username, String password, String captcha)</span> &#123;</span><br><span class="line"><span class="type">String</span> <span class="variable">kaptcha</span> <span class="operator">=</span> ShiroUtils.getKaptcha(Constants.KAPTCHA_SESSION_KEY);</span><br><span class="line"><span class="keyword">if</span>(!captcha.equalsIgnoreCase(kaptcha))&#123;</span><br><span class="line"><span class="keyword">return</span> R.error(<span class="string">&quot;验证码不正确&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line"><span class="type">Subject</span> <span class="variable">subject</span> <span class="operator">=</span> ShiroUtils.getSubject();</span><br><span class="line"><span class="type">UsernamePasswordToken</span> <span class="variable">token</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UsernamePasswordToken</span>(username, password);</span><br><span class="line">subject.login(token);</span><br><span class="line">&#125;<span class="keyword">catch</span> (UnknownAccountException e) &#123;</span><br><span class="line"><span class="keyword">return</span> R.error(e.getMessage());</span><br><span class="line">&#125;<span class="keyword">catch</span> (IncorrectCredentialsException e) &#123;</span><br><span class="line"><span class="keyword">return</span> R.error(<span class="string">&quot;账号或密码不正确&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">catch</span> (LockedAccountException e) &#123;</span><br><span class="line"><span class="keyword">return</span> R.error(<span class="string">&quot;账号已被锁定,请联系管理员&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">catch</span> (AuthenticationException e) &#123;</span><br><span class="line"><span class="keyword">return</span> R.error(<span class="string">&quot;账户验证失败&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">return</span> R.ok();</span><br><span class="line">&#125;</span><br><span class="line">  <span class="comment">/* ... */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="前端-2">前端</h2><p>页面代码如下。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group has-feedback&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;captcha&quot;</span> @<span class="attr">keyup.enter</span>=<span class="string">&quot;login&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;验证码&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-warning-sign form-control-feedback&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group has-feedback&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">&quot;如果看不清楚，请单击图片刷新！&quot;</span> <span class="attr">class</span>=<span class="string">&quot;pointer&quot;</span> <span class="attr">:src</span>=<span class="string">&quot;src&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;refreshCode&quot;</span>&gt;</span></span><br><span class="line">  <span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;refreshCode&quot;</span>&gt;</span>点击刷新<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果图如下</p><img src="/2022/04/13/kaptcha/image-20220413212426791.png" class="" title="image-20220413212426791"><p>js代码如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="attr">el</span>:<span class="string">&#x27;#rrapp&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="attr">username</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">password</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">captcha</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">error</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">errorMsg</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">src</span>: <span class="string">&#x27;captcha.jpg&#x27;</span></span></span><br><span class="line"><span class="language-javascript">&#125;,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">beforeCreate</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">if</span>(self != top)&#123;</span></span><br><span class="line"><span class="language-javascript">top.<span class="property">location</span>.<span class="property">href</span> = self.<span class="property">location</span>.<span class="property">href</span>;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">&#125;,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="attr">refreshCode</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">this</span>.<span class="property">src</span> = <span class="string">&quot;captcha.jpg?t=&quot;</span> + $.<span class="title function_">now</span>();</span></span><br><span class="line"><span class="language-javascript">&#125;,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">login</span>: <span class="keyword">function</span> (<span class="params">event</span>) &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> data = <span class="string">&quot;username=&quot;</span>+vm.<span class="property">username</span>+<span class="string">&quot;&amp;password=&quot;</span>+vm.<span class="property">password</span>+<span class="string">&quot;&amp;captcha=&quot;</span>+vm.<span class="property">captcha</span>;</span></span><br><span class="line"><span class="language-javascript">$.<span class="title function_">ajax</span>(&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="attr">type</span>: <span class="string">&quot;POST&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">url</span>: <span class="string">&quot;sys/login&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">data</span>: data,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">dataType</span>: <span class="string">&quot;json&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">success</span>: <span class="keyword">function</span>(<span class="params">result</span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">if</span>(result.<span class="property">code</span> == <span class="number">0</span>)&#123;<span class="comment">//登录成功</span></span></span><br><span class="line"><span class="language-javascript">parent.<span class="property">location</span>.<span class="property">href</span> =<span class="string">&#x27;index.html&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">&#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="language-javascript">vm.<span class="property">error</span> = <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">vm.<span class="property">errorMsg</span> = result.<span class="property">msg</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">vm.<span class="title function_">refreshCode</span>();</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="kaptcha配置表">kaptcha配置表</h2><p>可通过如下参数来自定义验证码</p><table><thead><tr><th>配置</th><th>描述</th></tr></thead><tbody><tr><td>kaptcha.border</td><td>是否有边框 默认为true 我们可以自己设置yes，no</td></tr><tr><td>kaptcha.border.color</td><td>边框颜色 默认为Color.BLACK</td></tr><tr><td>kaptcha.border.thickness</td><td>边框粗细度 默认为1</td></tr><tr><td>kaptcha.producer.impl</td><td>验证码生成器 默认为DefaultKaptcha</td></tr><tr><td>kaptcha.textproducer.impl</td><td>验证码文本生成器 默认为DefaultTextCreator</td></tr><tr><td>kaptcha.textproducer.char.string</td><td>验证码文本字符内容范围 默认为abcde2345678gfynmnpwx</td></tr><tr><td>kaptcha.textproducer.char.length</td><td>验证码文本字符长度 默认为5</td></tr><tr><td>kaptcha.textproducer.font.names</td><td>验证码文本字体样式 默认为new Font(“Arial”, 1, fontSize), new Font(“Courier”, 1, fontSize)</td></tr><tr><td>kaptcha.textproducer.font.size</td><td>验证码文本字符大小 默认为40</td></tr><tr><td>kaptcha.textproducer.font.color</td><td>验证码文本字符颜色 默认为Color.BLACK</td></tr><tr><td>kaptcha.textproducer.char.space</td><td>验证码文本字符间距 默认为2</td></tr><tr><td>kaptcha.noise.impl</td><td>验证码噪点生成对象 默认为DefaultNoise</td></tr><tr><td>kaptcha.noise.color</td><td>验证码噪点颜色 默认为Color.BLACK</td></tr><tr><td>kaptcha.obscurificator.impl</td><td>验证码样式引擎 默认为WaterRipple</td></tr><tr><td>kaptcha.word.impl</td><td>验证码文本字符渲染 默认为DefaultWordRenderer</td></tr><tr><td>kaptcha.background.impl</td><td>验证码背景生成器 默认为DefaultBackground</td></tr><tr><td>kaptcha.background.clear.from</td><td>验证码背景颜色渐进 默认为Color.LIGHT_GRAY</td></tr><tr><td><a href="http://kaptcha.background.clear.to">kaptcha.background.clear.to</a></td><td>验证码背景颜色渐进 默认为Color.WHITE</td></tr><tr><td>kaptcha.image.width</td><td>验证码图片宽度 默认为200</td></tr><tr><td>kaptcha.image.height</td><td>验证码图片高度 默认为50</td></tr><tr><td>kaptcha.session.key</td><td>session中存放验证码的key键</td></tr></tbody></table><h2 id="参考资料-5">参考资料</h2><p><a href="https://cloud.tencent.com/developer/article/1406265">官方网站</a></p><p><a href="https://ainyi.com/70">java 实现登录验证码 （kaptcha 验证码组件）</a></p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring Boot </tag>
            
            <tag> kaptcha </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用 Github Actions 自动部署 Hexo博客</title>
      <link href="/2022/04/09/github-action-hexo/"/>
      <url>/2022/04/09/github-action-hexo/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍">介绍</h2><p>使用Hexo框架写博客时，每次都要经历清除、生成、部署，使用Github Actions可以实现自动化工作流。</p><p>假设用一个 <code>blog</code> 仓库存储markdown等文件，使用 Github Actions后，每次push时即可自动生成部署到 <code>.github.io</code> 仓库中去。如果有gitee或其他域名要同步部署博客，Github Actions提供 的便利会更明显。</p><h3 id="确定目标">确定目标</h3><ol><li>用一个仓库存储markdown等原始文件。</li><li>原始文件仓库push操作后自动部署到GitHub Pages仓库</li><li>（可选）原始文件仓库push操作后自动部署到Gitee Pages仓库</li><li>（可选）原始文件仓库push操作后自动部署到所购买域名的对应文件系统</li></ol><p>目前只使用GitHub Pages部署博客，故本文只介绍这部分对应流程。</p><h2 id="准备">准备</h2><h3 id="创建所需仓库">创建所需仓库</h3><ol><li>创建 <code>blog</code> 仓库存放Hexo项目，仓库可以私密。</li><li>创建 <code>yourname.github.io</code> 仓库存放静态博客页面，仓库需要公开。</li></ol><h3 id="为仓库配置密钥">为仓库配置密钥</h3><h4 id="生成密钥">生成密钥</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -f github-deploy-key</span><br></pre></td></tr></table></figure><p>当前目录下会有 <code>github-deploy-key</code> 和 <code>github-deploy-key.pub</code> 即私钥和公钥两个文件。</p><h4 id="配置私钥">配置私钥</h4><p>复制 <code>github-deploy-key</code> 文件内容，在Hexo项目仓库，此处即 <code>blog</code> 仓库 <code>Settings -&gt; Secrets -&gt; Secrets -&gt; Actions</code> 页面上点击 <code>New repository secret</code> 添加。</p><ol><li>在 <code>Name</code> 输入框填写 <code>HEXO_DEPLOY_PRI</code>。</li><li>在 <code>Value</code> 输入框填写 <code>github-deploy-key</code> 文件内容。</li></ol><img src="/2022/04/09/github-action-hexo/image-20220410142950455.png" class="" title="image-20220410142950455"><h4 id="配置公钥">配置公钥</h4><p>复制 <code>github-deploy-key.pub</code> 文件内容，在静态博客页面仓库，此处即 <code>yourname.github.io</code> 仓库 <code>Settings -&gt; Deploy keys</code> 页面上点击 <code>Add deploy key</code>添加密钥。</p><ol><li>在 <code>Title</code> 输入框填写 <code>HEXO_DEPLOY_PUB</code>。</li><li>在 <code>Key</code> 输入框填写 <code>github-deploy-key.pub</code> 文件内容。</li><li>勾选 <code>Allow write access</code> 选项。</li></ol><h2 id="编写Github-Actions">编写Github Actions</h2><p>在 <code>blog</code> 仓库创建文件 <code>.github/workflows/hexoCI.yml</code></p><blockquote><ol><li>Github项目会自动识别 .github/workflows/ 文件夹下的 yml 类型文件</li><li>若在本地仓库创建该 yml 文件，需要手动 git add 将其加入版本流中</li></ol></blockquote><p>文件内容如下，记得修改env中参数</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">HEXO</span> <span class="string">CI</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"><span class="attr">env:</span></span><br><span class="line">  <span class="attr">GIT_USER:</span> <span class="string">yourname</span></span><br><span class="line">  <span class="attr">GIT_EMAIL:</span> <span class="string">example@example.com</span></span><br><span class="line">  <span class="attr">THEME_REPO:</span> <span class="string">jerryc127/hexo-theme-butterfly</span></span><br><span class="line">  <span class="attr">THEME_BRANCH:</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">strategy:</span></span><br><span class="line">      <span class="attr">matrix:</span></span><br><span class="line">        <span class="attr">node-version:</span> [<span class="number">16.</span><span class="string">x</span>]</span><br><span class="line"></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="string">theme</span> <span class="string">repo</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">repository:</span> <span class="string">$&#123;&#123;</span> <span class="string">env.THEME_REPO</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">ref:</span> <span class="string">$&#123;&#123;</span> <span class="string">env.THEME_BRANCH</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">themes/butterfly</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Use</span> <span class="string">Node.js</span> <span class="string">$&#123;&#123;</span> <span class="string">matrix.node-version</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">$&#123;&#123;</span> <span class="string">matrix.node-version</span> <span class="string">&#125;&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Configuration</span> <span class="string">environment</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="attr">HEXO_DEPLOY_PRI:</span> <span class="string">$&#123;&#123;secrets.HEXO_DEPLOY_PRI&#125;&#125;</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          mkdir -p ~/.ssh/</span></span><br><span class="line"><span class="string">          echo &quot;$HEXO_DEPLOY_PRI&quot; &gt; ~/.ssh/id_rsa</span></span><br><span class="line"><span class="string">          chmod 600 ~/.ssh/id_rsa</span></span><br><span class="line"><span class="string">          ssh-keyscan github.com &gt;&gt; ~/.ssh/known_hosts</span></span><br><span class="line"><span class="string">          git config --global user.name $GIT_USER</span></span><br><span class="line"><span class="string">          git config --global user.email $GIT_EMAIL</span></span><br><span class="line"><span class="string"></span>      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">dependencies</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          npm i -g hexo-cli</span></span><br><span class="line"><span class="string">          npm i</span></span><br><span class="line"><span class="string"></span>      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">hexo</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">          <span class="string">hexo</span> <span class="string">clean</span> <span class="string">&amp;&amp;</span> <span class="string">hexo</span> <span class="string">generate</span> <span class="string">&amp;&amp;</span> <span class="string">hexo</span> <span class="string">deploy</span></span><br></pre></td></tr></table></figure><h3 id="关键参数说明">关键参数说明</h3><ul><li><p>env为环境变量对象</p><ul><li>GIT_USER 和 GIT_EMAIL 是博客仓库对应的Github账户的用户名和登录邮箱</li><li>THEME_REPO 和 THEME_BRANCH 是 Hexo 所使用的主题的仓库及其分支，本人此处使用了 butterfly 主题。</li></ul></li><li><p>其他版本参数</p><ul><li>Github Actions具体过程会在一个容器中实现，ubuntu-latest指定了容器使用最新版ubuntu。此处也可使用其他版本或其他系统，如Windows、Mac等。</li><li>Node.js使用目前最新稳定版 16.x，部分后续操作（如checkout）可能有具体要求。</li><li>关于actions/checkout@v2 和 actions/setup-node@v2，目前最新版为 v3，此处选择稳定的v2版本。</li></ul></li></ul><h3 id="Actions流程说明">Actions流程说明</h3><p>name指定此Action的名字，会在GitHub仓库的<code>Actions</code>页面看到。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>on部分指定触发条件，此处push操作触发后续action，branches指定具体分支。当master分支收到push时执行任务。</p><p>env配置后续参数供后面使用。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">strategy:</span></span><br><span class="line">      <span class="attr">matrix:</span></span><br><span class="line">        <span class="attr">node-version:</span> [<span class="number">16.</span><span class="string">x</span>]</span><br></pre></td></tr></table></figure><p>触发条件达成后自动执行 <code>jobs</code> 后的多个任务，此处只配置了build一个任务。runs-on指定容器版本，node-version指定Node.js版本。</p><p>steps后面编写具体的多个步骤。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span></span><br><span class="line">  <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="string">theme</span> <span class="string">repo</span></span><br><span class="line">  <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">  <span class="attr">with:</span></span><br><span class="line">    <span class="attr">repository:</span> <span class="string">$&#123;&#123;</span> <span class="string">env.THEME_REPO</span> <span class="string">&#125;&#125;</span></span><br><span class="line">    <span class="attr">ref:</span> <span class="string">$&#123;&#123;</span> <span class="string">env.THEME_BRANCH</span> <span class="string">&#125;&#125;</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">themes/butterfly</span></span><br></pre></td></tr></table></figure><p>name 指定步骤名，uses指定步骤调用的Action，详情参见<a href="https://github.com/marketplace?type=actions&amp;query=checkout">官方Action市场</a></p><p>此处先checkout当前hexo仓库到本地，再checkout主题仓库到对应目录。</p><blockquote><p>主题仓库由于存在git版本控制文件，push整个hexo仓库时默认跳过这部分，所以需要单独checkout到action容器中。也可以考虑简单粗暴的删除主题对应的git版本控制文件夹 <code>.git</code> ，这样就只需一次checkout即可。</p><p>此外，若和我一样留下主题的<code>.git</code>  文件夹，对主题的魔改文件要放置于主题文件夹之外。</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Use</span> <span class="string">Node.js</span> <span class="string">$&#123;&#123;</span> <span class="string">matrix.node-version</span> <span class="string">&#125;&#125;</span></span><br><span class="line">  <span class="attr">uses:</span> <span class="string">actions/setup-node@v2</span></span><br><span class="line">  <span class="attr">with:</span></span><br><span class="line">    <span class="attr">node-version:</span> <span class="string">$&#123;&#123;</span> <span class="string">matrix.node-version</span> <span class="string">&#125;&#125;</span></span><br></pre></td></tr></table></figure><p><code>actions/setup-node</code> 配置容器 Node.js 环境</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Configuration</span> <span class="string">environment</span></span><br><span class="line">  <span class="attr">env:</span></span><br><span class="line">    <span class="attr">HEXO_DEPLOY_PRI:</span> <span class="string">$&#123;&#123;secrets.HEXO_DEPLOY_PRI&#125;&#125;</span></span><br><span class="line">  <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    mkdir -p ~/.ssh/</span></span><br><span class="line"><span class="string">    echo &quot;$HEXO_DEPLOY_PRI&quot; &gt; ~/.ssh/id_rsa</span></span><br><span class="line"><span class="string">    chmod 600 ~/.ssh/id_rsa</span></span><br><span class="line"><span class="string">    ssh-keyscan github.com &gt;&gt; ~/.ssh/known_hosts</span></span><br><span class="line"><span class="string">    git config --global user.name $GIT_USER</span></span><br><span class="line"><span class="string">    git config --global user.email $GIT_EMAIL</span></span><br></pre></td></tr></table></figure><p>配置环境，使用git的标准开局。</p><p>后续操作包括安装依赖，清除、生成、部署 Hexo 博客。大家应该很熟悉，不再赘述。</p><h2 id="参考资料-4">参考资料</h2><p><a href="https://sanonz.github.io/2020/deploy-a-hexo-blog-from-github-actions/">利用 Github Actions 自动部署 Hexo 博客</a></p><p><a href="https://segmentfault.com/a/1190000040767893">hexo配合github action 自动构建（多种形式）</a></p><p>与本人最终action配置文件对比，参考资料有多余或者缺少的部分，可能是项目具体配置有不同之处，如主题文件是否保留git版本控制文件。</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> github action </tag>
            
            <tag> blog </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给butterfly主题添加看板娘live2d</title>
      <link href="/2022/04/08/live2d/"/>
      <url>/2022/04/08/live2d/</url>
      
        <content type="html"><![CDATA[<h2 id="效果图">效果图</h2><img src="/2022/04/08/live2d/spot.png" class="" title="img"><h2 id="简单版">简单版</h2><p>使用 <strong>hexo-helper-live2d</strong> ，善用搜索。</p><h2 id="威力加强版">威力加强版</h2><p>如果使用了<strong>hexo-helper-live2d</strong>，需要先卸载。</p><h3 id="下载">下载</h3><p>大神魔改后的<a href="https://github.com/stevenjoezhang/live2d-widget">项目地址</a></p><p>下载解压到 <code>themes\butterfly\source\</code> （或者 <code>source\</code>）文件夹下</p><h3 id="必要配置">必要配置</h3><p>修改 <strong>autoload.js</strong> 文件中的 <code>live2d_path</code> 路径。直接使用第三行被注释掉的路径即可，记得注释掉第二行。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 注意：live2d_path 参数应使用绝对路径</span></span><br><span class="line"><span class="comment">// const live2d_path = &quot;https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget@latest/&quot;;</span></span><br><span class="line"><span class="keyword">const</span> live2d_path = <span class="string">&quot;/live2d-widget/&quot;</span>;</span><br></pre></td></tr></table></figure><p>默认的 <code>cdnPath</code> 需要开启CDN服务，否则会失效，可选择使用 <code>apiPath</code> 。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载 waifu.css live2d.min.js waifu-tips.js</span></span><br><span class="line"><span class="keyword">if</span> (screen.<span class="property">width</span> &gt;= <span class="number">768</span>) &#123;</span><br><span class="line"><span class="title class_">Promise</span>.<span class="title function_">all</span>([</span><br><span class="line"><span class="title function_">loadExternalResource</span>(live2d_path + <span class="string">&quot;waifu.css&quot;</span>, <span class="string">&quot;css&quot;</span>),</span><br><span class="line"><span class="title function_">loadExternalResource</span>(live2d_path + <span class="string">&quot;live2d.min.js&quot;</span>, <span class="string">&quot;js&quot;</span>),</span><br><span class="line"><span class="title function_">loadExternalResource</span>(live2d_path + <span class="string">&quot;waifu-tips.js&quot;</span>, <span class="string">&quot;js&quot;</span>)</span><br><span class="line">]).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line"><span class="title function_">initWidget</span>(&#123;</span><br><span class="line"><span class="attr">waifuPath</span>: live2d_path + <span class="string">&quot;waifu-tips.json&quot;</span>,</span><br><span class="line"><span class="attr">apiPath</span>: <span class="string">&quot;https://live2d.fghrsh.net/api/&quot;</span>,</span><br><span class="line"><span class="comment">// cdnPath: &quot;https://cdn.jsdelivr.net/gh/fghrsh/live2d_api/&quot;</span></span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// initWidget 第一个参数为 waifu-tips.json 的路径，第二个参数为 API 地址</span></span><br><span class="line"><span class="comment">// API 后端可自行搭建，参考 https://github.com/fghrsh/live2d_api</span></span><br><span class="line"><span class="comment">// 初始化看板娘会自动加载指定目录下的 waifu-tips.json</span></span><br></pre></td></tr></table></figure><p>在 <strong>_config.butterfly.yml</strong> 中找到 <code>inject</code> 部分引入代码</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Inject</span></span><br><span class="line"><span class="comment"># Insert the code to head (before &#x27;&lt;/head&gt;&#x27; tag) and the bottom (before &#x27;&lt;/body&gt;&#x27; tag)</span></span><br><span class="line"><span class="comment"># 插入代码到头部 &lt;/head&gt; 之前 和 底部 &lt;/body&gt; 之前</span></span><br><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;/live2d-widget/autoload.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br></pre></td></tr></table></figure><h3 id="自定义配置">自定义配置</h3><ul><li><code>waifu-tips.js</code> 包含了按钮和对话框的逻辑；</li><li><code>waifu-tips.json</code> 中定义了触发条件（<code>selector</code>，CSS 选择器）和触发时显示的文字（<code>text</code>）；</li><li><code>waifu.css</code> 是看板娘的样式表。</li></ul><p><strong>修改首次加载的模型</strong></p><p>如果你不喜欢默认的第一个模型，可以指定首次加载的模型，具体配置在live2d-widget文件夹下的waifu-tips.js中的大约160行，原作者也在这里注释了模型的ID，默认为1，后面的模型依次递增</p><blockquote><p>如果不知道模型的ID，谷歌浏览器使用<code>F12</code>打开开发者工具，切换到 <code>Console</code> ，切换模型或者材质，即可知道其对应ID。</p><p>或者去API对应的页面查看代码和配置。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> live2d </tag>
            
            <tag> live2d-widget </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FreeMaker配置与使用</title>
      <link href="/2022/04/08/FreeMaker/"/>
      <url>/2022/04/08/FreeMaker/</url>
      
        <content type="html"><![CDATA[<h2 id="FreeMaker">FreeMaker</h2><h3 id="参考资料">参考资料</h3><p><a href="https://freemarker.apache.org/">英文官网</a></p><p><a href="http://freemarker.foofun.cn/">中文翻译版文档</a></p><p><a href="https://www.jianshu.com/p/2473b8384147">Spring-boot集成freemarker入门|实践</a></p><h3 id="配置">配置</h3><ol><li>maven引入依赖</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring‐boot‐starter‐freemarker<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>配置文件</li></ol>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">    <span class="attr">freemarker:</span></span><br><span class="line">        <span class="attr">suffix:</span> <span class="string">.html</span></span><br><span class="line">        <span class="attr">request-context-attribute:</span> <span class="string">request</span></span><br></pre></td></tr></table></figure><ol start="3"><li>(可选)配置类</li></ol>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FreemarkerConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> FreeMarkerConfigurer <span class="title function_">freeMarkerConfigurer</span><span class="params">(ShiroTag shiroTag)</span>&#123;</span><br><span class="line">        <span class="type">FreeMarkerConfigurer</span> <span class="variable">configurer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FreeMarkerConfigurer</span>();</span><br><span class="line">        configurer.setTemplateLoaderPath(<span class="string">&quot;classpath:/templates&quot;</span>);</span><br><span class="line">        Map&lt;String, Object&gt; variables = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;(<span class="number">1</span>);</span><br><span class="line">        variables.put(<span class="string">&quot;shiro&quot;</span>, shiroTag);</span><br><span class="line">        configurer.setFreemarkerVariables(variables);</span><br><span class="line"></span><br><span class="line">        <span class="type">Properties</span> <span class="variable">settings</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        settings.setProperty(<span class="string">&quot;default_encoding&quot;</span>, <span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        settings.setProperty(<span class="string">&quot;number_format&quot;</span>, <span class="string">&quot;0.##&quot;</span>);</span><br><span class="line">        configurer.setFreemarkerSettings(settings);</span><br><span class="line">        <span class="keyword">return</span> configurer;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用">使用</h3><blockquote><p>java后台使用freeMarker，将值传给前端</p><p>前端页面获取后台传输的值</p><p>以下是个人使用经验</p></blockquote><ol><li>后端Controller层使用 <em>@ResponseBody</em> 注解将需要的参数放入响应体中</li><li>前端使用vue配合Ajax和jqGrid生成完整页面</li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> else </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FreeMaker </tag>
            
            <tag> Spring Boot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Anaconda介绍、安装及使用教程</title>
      <link href="/2022/03/22/Anaconda-tips/"/>
      <url>/2022/03/22/Anaconda-tips/</url>
      
        <content type="html"><![CDATA[<blockquote><p>转载自<a href="https://www.jianshu.com/p/62f155eb6ac5">Anaconda介绍、安装及使用教程</a></p></blockquote><img src="/2022/03/22/Anaconda-tips/v2-580c7052f0d723fcd8b4d6a2500a6058_r.jpg" class="" title="img"><h2 id="〇、序"><strong>〇、序</strong></h2><p>Python是一种面向对象的解释型计算机程序设计语言，其使用，具有跨平台的特点，可以在Linux、macOS以及Windows系统中搭建环境并使用，其编写的代码在不同平台上运行时，几乎不需要做较大的改动，使用者无不受益于它的便捷性。</p><p>此外，Python的强大之处在于它的应用领域范围之广，遍及人工智能、科学计算、Web开发、系统运维、大数据及云计算、金融、游戏开发等。实现其强大功能的前提，就是Python具有数量庞大且功能相对完善的标准库和第三方库。通过对库的引用，能够实现对不同领域业务的开发。然而，正是由于库的数量庞大，对于管理这些库以及对库作及时的维护成为既重要但复杂度又高的事情。</p><h2 id="一、什么是Anaconda？"><strong>一、什么是Anaconda？</strong></h2><h5 id="1-简介"><strong>1. 简介</strong></h5><p>Anaconda（<a href="https://www.anaconda.com/distribution/#macos">官方网站</a>）就是可以便捷获取包且对包能够进行管理，同时对环境可以统一管理的发行版本。Anaconda包含了conda、Python在内的超过180个科学包及其依赖项。</p><h5 id="2-特点"><strong>2. 特点</strong></h5><p>Anaconda具有如下特点：</p><p>▪ 开源</p><p>▪ 安装过程简单</p><p>▪ 高性能使用Python和R语言</p><p>▪ 免费的社区支持</p><p>其特点的实现主要基于Anaconda拥有的：</p><p>▪ conda包</p><p>▪ 环境管理器</p><p>▪ 1,000+开源库</p><p>如果日常工作或学习并不必要使用1,000多个库，那么可以考虑安装Miniconda（<a href="https://conda.io/miniconda.html">下载界面请戳</a>），这里不过多介绍Miniconda的安装及使用。</p><h5 id="3-Anaconda、conda、pip、virtualenv的区别"><strong>3. Anaconda、conda、pip、virtualenv的区别</strong></h5><p><strong>① Anaconda</strong></p><p>Anaconda是一个包含180+的科学包及其依赖项的发行版本。其包含的科学包包括：conda, numpy, scipy, ipython notebook等。</p><p><strong>② conda</strong></p><p>conda是包及其依赖项和环境的管理工具。</p><p>▪ 适用语言：Python, R, Ruby, Lua, Scala, Java, JavaScript, C/C++, FORTRAN。</p><p>▪ 适用平台：Windows, macOS, Linux</p><p>▪ 用途：</p><p>① 快速安装、运行和升级包及其依赖项。</p><p>② 在计算机中便捷地创建、保存、加载和切换环境。</p><blockquote><p>如果你需要的包要求不同版本的Python，你无需切换到不同的环境，因为conda同样是一个环境管理器。仅需要几条命令，你可以创建一个完全独立的环境来运行不同的Python版本，同时继续在你常规的环境中使用你常用的Python版本。——<a href="https://conda.io/docs/">Conda官方网站</a></p></blockquote><p>▪ conda为Python项目而创造，但可适用于上述的多种语言。</p><p>▪ conda包和环境管理器包含于Anaconda的所有版本当中。</p><p><strong>③ pip</strong></p><p>pip是用于安装和管理软件包的包管理器。</p><p>▪ pip编写语言：Python。</p><p>▪ Python中默认安装的版本：</p><p>① Python 2.7.9及后续版本：默认安装，命令为 <em><strong>pip</strong></em></p><p>② Python 3.4及后续版本：默认安装，命令为 <em><strong>pip3</strong></em></p><p>▪ pip名称的由来：pip采用的是<strong>递归缩写</strong>进行命名的。其名字被普遍认为来源于2处：</p><p>① “Pip installs Packages”（“pip安装包”）</p><p>② “Pip installs Python”（“pip安装Python”）</p><p><strong>④ virtualenv</strong></p><p>virtualenv是用于创建一个<strong>独立的</strong>Python环境的工具。</p><p>▪ 解决问题：</p><ol><li>当一个程序需要使用Python 2.7版本，而另一个程序需要使用Python 3.6版本，如何同时使用这两个程序？如果将所有程序都安装在系统下的默认路径，如：<em><strong>/usr/lib/python2.7/site-packages</strong></em>，当不小心升级了本不该升级的程序时，将会对其他的程序造成影响。</li><li>如果想要安装程序并在程序运行时对其库或库的版本进行修改，都会导致程序的中断。</li><li>在共享主机时，无法在全局 <em><strong>site-packages</strong></em> 目录中安装包。</li></ol><p>▪ virtualenv将会为它自己的安装目录创建一个环境，这并<strong>不与</strong>其他virtualenv环境共享库；同时也可以<strong>选择性</strong>地不连接已安装的全局库。</p><p><strong>⑤ pip 与 conda 比较</strong></p><p><strong>→ 依赖项检查</strong></p><p>▪ pip：</p><p>① <strong>不一定</strong>会展示所需其他依赖包。</p><p>② 安装包时<strong>或许</strong>会直接忽略依赖项而安装，仅在结果中提示错误。</p><p>▪ conda：</p><p>① 列出所需其他依赖包。</p><p>② 安装包时自动安装其依赖项。</p><p>③ 可以便捷地在包的不同版本中自由切换。</p><p><strong>→ 环境管理</strong></p><p>▪ pip：维护多个环境难度较大。</p><p>▪ conda：比较方便地在不同环境之间进行切换，环境管理较为简单。</p><p><strong>→ 对系统自带Python的影响</strong></p><p>▪ pip：在系统自带Python中包的更新/回退版本/卸载将影响其他程序。</p><p>▪ conda：不会影响系统自带Python。</p><p><strong>→ 适用语言</strong></p><p>▪ pip：仅适用于Python。</p><p>▪ conda：适用于Python, R, Ruby, Lua, Scala, Java, JavaScript, C/C++, FORTRAN。</p><p><strong>⑥ conda与pip、virtualenv的关系</strong></p><p>▪ conda<strong>结合</strong>了pip和virtualenv的功能。</p><h2 id="二、Anaconda的适用平台及安装条件"><strong>二、Anaconda的适用平台及安装条件</strong></h2><h5 id="1-适用平台"><strong>1. 适用平台</strong></h5><p>Anaconda可以在以下系统平台中安装和使用：</p><p>▪ Windows</p><p>▪ macOS</p><p>▪ Linux（x86 / Power8）</p><h5 id="2-安装条件"><strong>2. 安装条件</strong></h5><p>▪ 系统要求：32位或64位系统均可</p><p>▪ 下载文件大小：约500MB</p><p>▪ 所需空间大小：3GB空间大小（Miniconda仅需400MB空间即可）</p><h2 id="三、Anaconda的安装步骤"><strong>三、Anaconda的安装步骤</strong></h2><h5 id="1-macOS系统安装Anaconda"><strong>1. macOS系统安装Anaconda</strong></h5><p><strong>① 图形界面安装</strong></p><ol><li><p>前往<a href="https://www.anaconda.com/distribution/#macos">官方下载页面</a>下载。有两个版本可供选择：Python 3.6 和 Python 2.7，我下载的是前者。选择版之后点击“64-Bit Graphical Installer”进行下载。</p></li><li><p>完成下载之后，双击下载文件，在对话框中“Introduction”、“Read Me”、“License”部分可直接点击下一步</p></li><li><p>“Destination Select”部分选择“Install for me only”并点击下一步。</p></li></ol><ul><li>注意：若有错误提示信息“You cannot install Anaconda in this location”则重新选择“Install for me only”并点击下一步。</li></ul><img src="/2022/03/22/Anaconda-tips/v2-3b0409ba08ef4b5674e52dddcb397a1a_720w.jpg" class="" title="img"><ol start="4"><li>“Installation Type”部分，可以点击“Change Install Location”来改变安装位置。标准的安装路径是在用户的家目录下。在这一步我没有改变安装位置。若选择默认安装路径，则直接点击“Install”进行安装。</li></ol><img src="/2022/03/22/Anaconda-tips/v2-9ce3fa7e1ff49fe64585f1dabe4d3bd1_720w.jpg" class="" title="img"><ol start="5"><li>等待“Installation”部分结束，在“Summary”部分若看到“The installation was completed successfully.”则安装成功，直接点击“Close”关闭对话框。</li></ol><img src="/2022/03/22/Anaconda-tips/v2-350eb6c43436428caf84671592024c93_720w.jpg" class="" title="img"><ol start="6"><li>在mac的Launchpad中可以找到名为“Anaconda-Navigator”的图标，点击打开。</li></ol><img src="/2022/03/22/Anaconda-tips/v2-99e119c78e9e548683a69db8a80b11b1_720w.jpg" class="" title="img"><ol start="7"><li>若“Anaconda-Navigator”成功启动，则说明真正成功地安装了Anaconda；如果未成功，请务必仔细检查以上安装步骤。</li></ol><ul><li><p>提示：“Anaconda-Navigator”中已经包含“Jupyter Notebook”、“Jupyterlab”、“Qtconsole”和“Spyder”。（图中的“Rstudio”是我后来安装的，但它默认出现在“Anaconda-Navigator”的启动界面，只需要点击“Install”便可安装。）</p></li><li><p>Jupyter Notebook有助于我们编写代码、运行代码以及获取代码的运行结果，特点是可以令我们便捷地为代码及其运行结果添加文档的描述、解释和说明。无论是学习还是工作，Jupyter Notebook都是提高效率和学习、工作质量的利器。具体的使用，可以参见另一篇文章：</p></li></ul><p><a href="https://zhuanlan.zhihu.com/p/33105153">豆豆：Jupyter Notebook介绍、安装及使用教程</a></p><img src="/2022/03/22/Anaconda-tips/v2-314871dae7ba50c4706cc6e8ef805f30_720w.jpg" class="" title="img"><ol start="8"><li>完成安装。</li></ol><p><strong>② 命令行安装</strong></p><ol><li><p>前往<a href="https://www.anaconda.com/distribution/#macos">官方下载页面</a>下载。有两个版本可供选择：Python 3.6 和 Python 2.7，我下载的是前者。选择版之后点击“64-Bit Command-Line Installer”进行下载。</p></li><li><p>完成下载之后，在mac的Launchpad中找到“其他”并打开“终端”。</p></li></ol><p>▫ 安装Python 3.6： <em><strong>bash ~/Downloads/Anaconda3-5.0.1-MacOSX-x86_64.sh</strong></em></p><p>▫ 安装Python 2.7： <em><strong>bash ~/Downloads/Anaconda2-5.0.1-MacOSX-x86_64.sh</strong></em></p><ul><li>注意：</li></ul><ol><li>首词bash也需要输入，无论是否用的Bash shell。</li><li>如果你的下载路径是自定义的，那么把该步骤路径中的 <em><strong>~/Downloads</strong></em> 替换成你自己的下载路径。</li><li>如果你将第1步下载的 <em><strong>.sh</strong></em> 文件重命名了，那么把该步骤路径中的 <em><strong>Anaconda3-5.0.1-MacOSX-x86_64.sh</strong></em> 或 <em><strong>Anaconda2-5.0.1-MacOSX-x86_64.sh</strong></em> 替换成你重命名后的文件名。</li></ol><p>▫ 强烈建议：<strong>不要</strong>修改文件名。如果重命名，使用<strong>英文</strong>进行命名。</p><ol start="3"><li><p>安装过程中，看到提示“In order to continue the installation process, please review the license agreement.”（“请浏览许可证协议以便继续安装。”），点击“Enter”查看“许可证协议”。</p></li><li><p>在“许可证协议”界面将屏幕滚动至底，输入“yes”表示同意许可证协议内容。然后进行下一步。</p></li><li><p>安装过程中，提示“Press Enter to confirm the location, Press CTRL-C to cancel the installation or specify an alternate installation directory.”（“按回车键确认安装路径，按’CTRL-C’取消安装或者指定安装目录。”）如果接受默认安装路径，则会显示 <em><strong>PREFIX=/home//anaconda&lt;2 or 3&gt;</strong></em> 并且继续安装。安装过程大约需要几分钟的时间。</p></li></ol><ul><li>建议：直接接受默认安装路径。</li></ul><ol start="6"><li>安装器若提示“Do you wish the installer to prepend the Anaconda install location to PATH in your /home/<user>/.bash_profile ?”（“你希望安装器添加Anaconda安装路径在 <em><strong>/home/&lt;user&gt;/.bash_profile</strong></em> 文件中吗？”），建议输入“yes”。</li></ol><ul><li>注意：</li></ul><p>① 路径 <em><strong>/home/&lt;user&gt;/.bash_profile</strong></em> 中 <em><strong>&lt;user&gt;</strong></em> 即进入到家目录后你的目录名。</p><p>② 如果输入“no”，则需要手动添加路径。添加 <em><strong>export PATH=“/&lt;path to anaconda&gt;/bin:$PATH”</strong></em> 在 <em><strong>.bashrc</strong></em> 或者 <em><strong>.bash_profile</strong></em> 中。其中， <em><strong>&lt;path to anaconda&gt;</strong></em> 替换为你真实的Anaconda安装路径。</p><ol start="7"><li><p>当看到“Thank you for installing Anaconda!”则说明已经成功完成安装。</p></li><li><p>关闭终端，然后再打开终端以使安装后的Anaconda启动。</p></li><li><p>验证安装结果。可选用以下任意一种方法：</p></li></ol><p>① 在终端中输入命令 <em><strong>condal list</strong></em> ，如果Anaconda被成功安装，则会显示已经安装的包名和版本号。</p><img src="/2022/03/22/Anaconda-tips/v2-a2fe77424f85efb783dd57c8ae7ded70_720w.jpg" class="" title="img"><p>② 在终端中输入 <em><strong>python</strong></em> 。这条命令将会启动Python交互界面，如果Anaconda被成功安装并且可以运行，则将会在Python版本号的右边显示“Anaconda custom (64-bit)”。退出Python交互界面则输入 <em><strong>exit()</strong></em> 或 <em><strong>quit()</strong></em> 即可。</p><img src="/2022/03/22/Anaconda-tips/v2-cf03b0152984900a52b7e967cbdcef59_720w.jpg" class="" title="img"><p>③ 在终端中输入 <em><strong>anaconda-navigator</strong></em> 。如果Anaconda被成功安装，则Anaconda Navigator的图形界面将会被启动。</p><h5 id="2-Windows系统安装Anaconda"><strong>2. Windows系统安装Anaconda</strong></h5><ol><li><p>前往<a href="https://docs.anaconda.com/anaconda/install/windows/">官方下载页面</a>下载。有两个版本可供选择：Python 3.6 和 Python 2.7，选择版之后根据自己操作系统的情况点击“64-Bit Graphical Installer”或“32-Bit Graphical Installer”进行下载。</p></li><li><p>完成下载之后，双击下载文件，启动安装程序。</p></li></ol><ul><li>注意：</li></ul><p>① 如果在安装过程中遇到任何问题，那么暂时地关闭杀毒软件，并在安装程序完成之后再打开。</p><p>② 如果在安装时选择了“为所有用户安装”，则卸载Anaconda然后重新安装，只为“我这个用户”安装。</p><ol start="3"><li><p>选择“Next”。</p></li><li><p>阅读许可证协议条款，然后勾选“I Agree”并进行下一步。</p></li><li><p>除非是以管理员身份为所有用户安装，否则仅勾选“Just Me”并点击“Next”。</p></li><li><p>在“Choose Install Location”界面中选择安装Anaconda的目标路径，然后点击“Next”。</p></li></ol><ul><li>注意：</li></ul><p>① 目标路径中<strong>不能</strong>含有<strong>空格</strong>，同时不能是**“unicode”**编码。</p><p>② 除非被要求以管理员权限安装，否则不要以管理员身份安装。</p><img src="/2022/03/22/Anaconda-tips/v2-c2599c8fd177949a7926ffbadb415887_720w.jpg" class="" title="img"><ol start="7"><li>在“Advanced Installation Options”中<strong>不要</strong>勾选“Add Anaconda to my PATH environment variable.”（“添加Anaconda至我的环境变量。”）。因为如果勾选，则将会影响其他程序的使用。如果使用Anaconda，则通过打开Anaconda Navigator或者在开始菜单中的“Anaconda Prompt”（类似macOS中的“终端”）中进行使用。</li></ol><p>除非你打算使用多个版本的Anaconda或者多个版本的Python，否则便勾选“Register Anaconda as my default Python 3.6”。</p><p>然后点击“Install”开始安装。如果想要查看安装细节，则可以点击“Show Details”。</p><img src="/2022/03/22/Anaconda-tips/v2-9c5b812be9fce180687f4b61a0dc5e9f_720w.jpg" class="" title="img"><ol start="8"><li><p>点击“Next”。</p></li><li><p>进入“Thanks for installing Anaconda!”界面则意味着安装成功，点击“Finish”完成安装。</p></li></ol><ul><li>注意：如果你不想了解“Anaconda云”和“Anaconda支持”，则可以<strong>不勾选</strong>“Learn more about Anaconda Cloud”和“Learn more about Anaconda Support”。</li></ul><img src="/2022/03/22/Anaconda-tips/v2-cc3f1a3a0b9e91dfafcc8e6663aedbcf_720w.jpg" class="" title="img"><ol start="10"><li>验证安装结果。可选以下任意方法：</li></ol><p>① “开始 → Anaconda3（64-bit）→ Anaconda Navigator”，若可以成功启动Anaconda Navigator则说明安装成功。</p><p>② “开始 → Anaconda3（64-bit）→ 右键点击Anaconda Prompt → 以管理员身份运行”，在Anaconda Prompt中输入 <em><strong>conda list</strong></em> ，可以查看已经安装的包名和版本号。若结果可以正常显示，则说明安装成功。</p><h5 id="3-Linux系统安装Anaconda"><strong>3. Linux系统安装Anaconda</strong></h5><ol><li><p>前往<a href="https://www.anaconda.com/distribution/#linux">官方下载页面</a>下载。有两个版本可供选择：Python 3.6 和 Python 2.7。</p></li><li><p>启动终端，在终端中输入命令 <em><strong>md5sum /path/filename</strong></em> 或 <em><strong>sha256sum /path/filename</strong></em></p></li></ol><ul><li>注意：将该步骤命令中的 <em><strong>/path/filename</strong></em> 替换为文件的实际下载路径和文件名。其中，path是路径，filename为文件名。</li><li>强烈建议：</li></ul><p>① 路径和文件名中不要出现空格或其他特殊字符。</p><p>② 路径和文件名最好以英文命名，不要以中文或其他特殊字符命名。</p><ol start="3"><li>根据Python版本的不同有选择性地在终端输入命令：</li></ol><p>▫ Python 3.6： <em><strong>bash ~/Downloads/Anaconda3-5.0.1-Linux-x86_64.sh</strong></em></p><p>▫ Python 2.7： <em><strong>bash ~/Downloads/Anaconda2-5.0.1-Linux-x86_64.sh</strong></em></p><ul><li>注意：</li></ul><p>① 首词bash也需要输入，无论是否用的Bash shell。</p><p>② 如果你的下载路径是自定义的，那么把该步骤路径中的 <em><strong>~/Downloads</strong></em> 替换成你自己的下载路径。</p><p>③ 除非被要求使用root权限，否则均选择“Install Anaconda as a user”。</p><ol start="4"><li><p>安装过程中，看到提示“In order to continue the installation process, please review the license agreement.”（“请浏览许可证协议以便继续安装。”），点击“Enter”查看“许可证协议”。</p></li><li><p>在“许可证协议”界面将屏幕滚动至底，输入“yes”表示同意许可证协议内容。然后进行下一步。</p></li><li><p>安装过程中，提示“Press Enter to accept the default install location, CTRL-C to cancel the installation or specify an alternate installation directory.”（“按回车键确认安装路径，按’CTRL-C’取消安装或者指定安装目录。”）如果接受默认安装路径，则会显示 <em><strong>PREFIX=/home//anaconda&lt;2 or 3&gt;</strong></em> 并且继续安装。安装过程大约需要几分钟的时间。</p></li></ol><ul><li>建议：直接接受默认安装路径。</li></ul><ol start="7"><li>安装器若提示“Do you wish the installer to prepend the Anaconda&lt;2 or 3&gt; install location to PATH in your /home/&lt;user&gt;/.bashrc ?”（“你希望安装器添加Anaconda安装路径在 <em><strong>/home/&lt;user&gt;/.bashrc</strong></em> 文件中吗？”），建议输入“yes”。</li></ol><ul><li>注意：</li></ul><p>① 路径 <em><strong>/home/&lt;user&gt;/.bash_rc</strong></em> 中 <em><strong>“&lt;user&gt;”</strong></em> 即进入到家目录后你的目录名。</p><p>② 如果输入“no”，则需要手动添加路径，否则conda将无法正常运行。</p><ol start="8"><li><p>当看到“Thank you for installing Anaconda&lt;2 or 3&gt;!”则说明已经成功完成安装。</p></li><li><p>关闭终端，然后再打开终端以使安装后的Anaconda启动。或者直接在终端中输入 <em><strong>source ~/.bashrc</strong></em> 也可完成启动。</p></li><li><p>验证安装结果。可选用以下任意一种方法：</p></li></ol><p>① 在终端中输入命令 <em><strong>condal list</strong></em> ，如果Anaconda被成功安装，则会显示已经安装的包名和版本号。</p><p>② 在终端中输入 <em><strong>python</strong></em> 。这条命令将会启动Python交互界面，如果Anaconda被成功安装并且可以运行，则将会在Python版本号的右边显示“Anaconda custom (64-bit)”。退出Python交互界面则输入 <em><strong>exit()</strong></em> 或 <em><strong>quit()</strong></em> 即可。</p><p>③ 在终端中输入 <em><strong>anaconda-navigator</strong></em> 。如果Anaconda被成功安装，则Anaconda Navigator将会被启动。</p><h2 id="四、管理conda"><strong>四、管理conda</strong></h2><h5 id="0-写在前面"><strong>0. 写在前面</strong></h5><p>接下来均是以命令行模式进行介绍，Windows用户请打开“Anaconda Prompt”；macOS和Linux用户请打开“Terminal”（“终端”）进行操作。</p><h5 id="1-验证conda已被安装"><strong>1. 验证conda已被安装</strong></h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda --version</span><br></pre></td></tr></table></figure><p>终端上将会以 <em><strong>conda 版本号</strong></em> 的形式显示当前安装conda的版本号。如： <em><strong>conda 3.11.0</strong></em></p><ul><li>注意：如果出现错误信息，则需核实是否出现以下情况：</li></ul><p>① 使用的用户是否是安装Anaconda时的账户。</p><p>② 是否在安装Anaconda之后重启了终端。</p><h5 id="2-更新conda至最新版本"><strong>2. 更新conda至最新版本</strong></h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda update conda</span><br></pre></td></tr></table></figure><p>执行命令后，conda将会对版本进行比较并列出可以升级的版本。同时，也会告知用户其他相关包也会升级到相应版本。</p><p>当较新的版本可以用于升级时，终端会显示 <em><strong>Proceed ([y]/n)?</strong></em> ，此时输入 <em><strong>y</strong></em> 即可进行升级。</p><h5 id="3-查看conda帮助信息"><strong>3. 查看conda帮助信息</strong></h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda --help</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda -h</span><br></pre></td></tr></table></figure><h5 id="4-卸载conda"><strong>4. 卸载conda</strong></h5><p><strong>① Linux 或 macOS</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf ~/anaconda2</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf ~/anaconda3</span><br></pre></td></tr></table></figure><p>即删除Anaconda的安装目录。根据安装的Anaconda版本选择相应的卸载命令。</p><p><strong>② Windows</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">控制面板 → 添加或删除程序 → 选择“Python X.X (Anaconda)” → 点击“删除程序”</span><br></pre></td></tr></table></figure><ul><li>注意：</li></ul><p>① Python X.X：即Python的版本，如：Python 3.6。</p><p>② Windows 10的删除有所不同。</p><h2 id="五、管理环境"><strong>五、管理环境</strong></h2><h5 id="0-写在前面-2"><strong>0. 写在前面</strong></h5><p>接下来均是以命令行模式进行介绍，Windows用户请打开“Anaconda Prompt”；macOS和Linux用户请打开“Terminal”（“终端”）进行操作。</p><h5 id="1-创建新环境"><strong>1. 创建新环境</strong></h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create --name &lt;env_name&gt; &lt;package_names&gt;</span><br></pre></td></tr></table></figure><ul><li>注意：</li></ul><p>▫ <em><strong>&lt;env_name&gt;</strong></em> 即创建的环境名。建议以英文命名，且不加空格，名称两边不加尖括号“&lt;&gt;”。</p><p>▫ <em><strong>&lt;package_name&gt;</strong></em> 即安装在环境中的包名。名称两边不加尖括号“&lt;&gt;”。</p><p>① 如果要安装指定的版本号，则只需要在包名后面以 <em><strong>=</strong></em> 和版本号的形式执行。如： <em><strong>conda create --name python2 python=2.7</strong></em> ，即创建一个名为“python2”的环境，环境中安装版本为2.7的python。</p><p>② 如果要在新创建的环境中创建多个包，则直接在 ****** 后以<strong>空格</strong>隔开，添加多个包名即可。如： <em><strong>conda create -n python3 python=3.5 numpy pandas</strong></em> ，即创建一个名为“python3”的环境，环境中安装版本为3.5的python，同时也安装了numpy和pandas。</p><p>▫ <em><strong>–name</strong></em> 同样可以替换为 <em><strong>-n</strong></em> 。</p><ul><li>提示：默认情况下，新创建的环境将会被保存在 <em><strong>/Users/&lt;user_name&gt;/anaconda3/env</strong></em> 目录下，其中， <em><strong>&lt;user_name&gt;</strong></em> 为当前用户的用户名。</li></ul><h5 id="2-切换环境"><strong>2. 切换环境</strong></h5><p><strong>① Linux 或 macOS</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source activate &lt;env_name&gt;</span><br></pre></td></tr></table></figure><p><strong>② Windows</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">activate &lt;env_name&gt;</span><br></pre></td></tr></table></figure><p><strong>③ 提示</strong></p><ol><li>如果创建环境后安装Python时没有指定Python的版本，那么将会安装与Anaconda版本相同的Python版本，即如果安装Anaconda第2版，则会自动安装Python 2.x；如果安装Anaconda第3版，则会自动安装Python 3.x。</li><li>当成功切换环境之后，在该行行首将以“(env_name)”或“[env_name]”开头。其中，“env_name”为切换到的环境名。如：在macOS系统中执行 <em><strong>source active python2</strong></em> ，即切换至名为“python2”的环境，则行首将会以(python2)开头。</li></ol><h5 id="3-退出环境至root"><strong>3. 退出环境至root</strong></h5><p><strong>① Linux 或 macOS</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source deactivate</span><br></pre></td></tr></table></figure><p><strong>② Windows</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deactivate</span><br></pre></td></tr></table></figure><p><strong>③ 提示</strong></p><p>当执行退出当前环境，回到root环境命令后，原本行首以“(env_name)”或“[env_name]”开头的字符将不再显示。</p><h5 id="4-显示已创建环境"><strong>4. 显示已创建环境</strong></h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda info --envs</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda info -e</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda env list</span><br></pre></td></tr></table></figure><ul><li>例如：</li></ul><img src="/2022/03/22/Anaconda-tips/v2-7382ab785e9905d106663f54d9115c38_720w.jpg" class="" title="img"><p>结果中星号“*”所在行即为当前所在环境。macOS系统中默认创建的环境名为“base”。</p><h5 id="5-复制环境"><strong>5. 复制环境</strong></h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create --name &lt;new_env_name&gt; --clone &lt;copied_env_name&gt;</span><br></pre></td></tr></table></figure><ul><li>注意：</li></ul><p>① <em><strong>&lt;copied_env_name&gt;</strong></em> 即为被复制/克隆环境名。环境名两边不加尖括号“&lt;&gt;”。</p><p>② <em><strong>&lt;new_env_name&gt;</strong></em> 即为复制之后新环境的名称。环境名两边不加尖括号“&lt;&gt;”。</p><p>③ <em><strong>conda create --name py2 --clone python2</strong></em> ，即为克隆名为“python2”的环境，克隆后的新环境名为“py2”。此时，环境中将同时存在“python2”和“py2”环境，且两个环境的配置相同。</p><h5 id="6-删除环境"><strong>6. 删除环境</strong></h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda remove --name &lt;env_name&gt; --all</span><br></pre></td></tr></table></figure><ul><li>注意： <em><strong>&lt;env_name&gt;</strong></em> 为被删除环境的名称。环境名两边不加尖括号“&lt;&gt;”。</li></ul><h2 id="六、管理包"><strong>六、管理包</strong></h2><h5 id="1-查找可供安装的包版本"><strong>1. 查找可供安装的包版本</strong></h5><p><strong>① 精确查找</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda search --full-name &lt;package_full_name&gt;</span><br></pre></td></tr></table></figure><ul><li>注意：</li></ul><p>① <em><strong>–full-name</strong></em> 为精确查找的参数。</p><p>② <em><strong>&lt;package_full_name&gt;</strong></em> 是被查找包的<strong>全名</strong>。包名两边不加尖括号“&lt;&gt;”。</p><ul><li>例如： <em><strong>conda search --full-name python</strong></em> 即查找全名为“python”的包有哪些版本可供安装。</li></ul><p><strong>② 模糊查找</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda search &lt;text&gt;</span><br></pre></td></tr></table></figure><ul><li>注意： <em><strong>&lt;text&gt;</strong></em> 是查找含有<strong>此字段</strong>的包名。此字段两边不加尖括号“&lt;&gt;”。</li><li>例如： <em><strong>conda search py</strong></em> 即查找含有“py”字段的包，有哪些版本可供安装。</li></ul><h5 id="2-获取当前环境中已安装的包信息"><strong>2. 获取当前环境中已安装的包信息</strong></h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda list</span><br></pre></td></tr></table></figure><p>执行上述命令后将在终端显示当前环境已安装包的包名及其版本号。</p><h5 id="3-安装包"><strong>3. 安装包</strong></h5><p><strong>① 在指定环境中安装包</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install --name &lt;env_name&gt; &lt;package_name&gt;</span><br></pre></td></tr></table></figure><ul><li>注意：</li></ul><p>①  即将包安装的指定环境名。环境名两边不加尖括号“&lt;&gt;”。</p><p>②  即要安装的包名。包名两边不加尖括号“&lt;&gt;”。</p><ul><li>例如： <em><strong>conda install --name python2 pandas</strong></em> 即在名为“python2”的环境中安装pandas包。</li></ul><p><strong>② 在当前环境中安装包</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install &lt;package_name&gt;</span><br></pre></td></tr></table></figure><ul><li>注意：</li></ul><p>① <em><strong>&lt;package_name&gt;</strong></em> 即要安装的包名。包名两边不加尖括号“&lt;&gt;”。</p><p>② 执行命令后在当前环境中安装包。</p><ul><li>例如： <em><strong>conda install pandas</strong></em> 即在当前环境中安装pandas包。</li></ul><p><strong>③ 使用pip安装包</strong></p><p><strong>→ 使用场景</strong></p><p>当使用 <em><strong>conda install</strong></em> 无法进行安装时，可以使用pip进行安装。例如：see包。</p><p><strong>→ 命令</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install &lt;package_name&gt;</span><br></pre></td></tr></table></figure><ul><li>注意： <em><strong>&lt;package_name&gt;</strong></em> 为指定安装包的名称。包名两边不加尖括号“&lt;&gt;”。</li><li>如： <em><strong>pip install see</strong></em> 即安装see包。</li></ul><p><strong>→ 注意</strong></p><ol><li>pip只是包管理器，无法对环境进行管理。因此如果想在指定环境中使用pip进行安装包，则需要先切换到指定环境中，再使用pip命令安装包。</li><li>pip无法更新python，因为pip并不将python视为包。</li><li>pip可以安装一些conda无法安装的包；conda也可以安装一些pip无法安装的包。因此当使用一种命令无法安装包时，可以尝试用另一种命令。</li></ol><p><strong>④ 从<a href="https://anaconda.org/">http://Anaconda.org</a>安装包</strong></p><p><strong>→ 使用场景</strong></p><p>当使用 <em><strong>conda install</strong></em> 无法进行安装时，可以考虑从<a href="https://anaconda.org/">http://Anaconda.org</a>中获取安装包的命令，并进行安装。</p><p><strong>→ 注意</strong></p><ol><li><p>从<a href="https://Anaconda.org">http://Anaconda.org</a>安装包时，无需注册。</p></li><li><p>在<strong>当前环境</strong>中安装来自于<a href="https://Anaconda.org">http://Anaconda.org</a>的包时，需要通过输入要安装的包在<a href="https://Anaconda.org">http://Anaconda.org</a>中的路径作为获取途径（channel）。查询路径的方式如下：</p></li></ol><p>① 在浏览器中输入：<a href="https://anaconda.org/">http://anaconda.org</a>，或直接点击<a href="https://anaconda.org/">Anaconda Cloud</a></p><p>② 在新页面“Anaconda Cloud”的上方搜索框中输入要安装的包名，然后点击右边“放大镜”标志。</p><img src="/2022/03/22/Anaconda-tips/v2-0fd2087b1bf3e23002ce8c1daed0a979_720w.jpg" class="" title="img"><ol start="3"><li>搜索结果中有数以千计的包可供选择，此时点击“Downloads”可根据下载量进行排序，最上面的为下载最多的包。（图中以搜索bottleneck包为例）</li></ol><img src="/2022/03/22/Anaconda-tips/v2-48379009860f0184700505807ea9b7f3_720w.jpg" class="" title="img"><ol start="4"><li><p>选择满足需求的包或下载量最多的包，点击包名。</p></li><li><p>复制“To install this package with conda run:”下方的命令，并粘贴在终端中执行。</p></li></ol><img src="/2022/03/22/Anaconda-tips/v2-8b9cbd08ac2785ab2089e075fa1fb57d_720w.jpg" class="" title="img"><ol start="6"><li>完成安装。</li></ol><h5 id="4-卸载包"><strong>4. 卸载包</strong></h5><p><strong>① 卸载指定环境中的包</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda remove --name &lt;env_name&gt; &lt;package_name&gt;</span><br></pre></td></tr></table></figure><ul><li>注意：</li></ul><p>① <em><strong>&lt;env_name&gt;</strong></em> 即卸载包所在指定环境的名称。环境名两边不加尖括号“&lt;&gt;”。</p><p>② <em><strong>&lt;package_name&gt;</strong></em> 即要卸载包的名称。包名两边不加尖括号“&lt;&gt;”。</p><ul><li>例如： <em><strong>conda remove --name python2 pandas</strong></em> 即卸载名为“python2”中的pandas包。</li></ul><p><strong>② 卸载当前环境中的包</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda remove &lt;package_name&gt;</span><br></pre></td></tr></table></figure><ul><li>注意：</li></ul><p>① <em><strong>&lt;package_name&gt;</strong></em> 即要卸载包的名称。包名两边不加尖括号“&lt;&gt;”。</p><p>② 执行命令后即在当前环境中卸载指定包。</p><ul><li>例如： <em><strong>conda remove pandas</strong></em> 即在当前环境中卸载pandas包。</li></ul><h5 id="5-更新包"><strong>5. 更新包</strong></h5><p><strong>① 更新所有包</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda update --all</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda upgrade --all</span><br></pre></td></tr></table></figure><ul><li>建议：在安装Anaconda之后执行上述命令更新Anaconda中的所有包至最新版本，便于使用。</li></ul><p><strong>② 更新指定包</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda update &lt;package_name&gt;</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda upgrade &lt;package_name&gt;</span><br></pre></td></tr></table></figure><ul><li>注意：</li></ul><p>① <em><strong>&lt;package_name&gt;</strong></em> 为指定更新的包名。包名两边不加尖括号“&lt;&gt;”。</p><p>② 更新多个指定包，则包名以<strong>空格</strong>隔开，向后排列。如： <em><strong>conda update pandas numpy matplotlib</strong></em> 即更新pandas、numpy、matplotlib包。</p><h2 id="七、参考资料"><strong>七、参考资料</strong></h2><ol><li>知乎“初学python者自学anaconda的正确姿势是什么？？”<a href="https://www.zhihu.com/question/58033789/answer/254673663?utm_source=wechat_session&amp;utm_medium=social">猴子的回答</a></li><li><a href="https://docs.anaconda.com/_downloads/Anaconda-Starter-Guide-Cheat-Sheet.pdf">Anaconda Cheat Sheet</a></li><li><a href="https://www.anaconda.com/distribution/#macos">Anaconda官方网站</a></li><li><a href="https://conda.io/docs/">conda官方网站</a></li><li><a href="https://en.wikipedia.org/wiki/Pip_(package_manager)#External_links">pip维基百科</a></li><li><a href="https://pip.pypa.io/en/stable/">pip官方网站</a></li><li>YouTube视频：<a href="https://www.youtube.com/watch?v=RXLRIHaabaI">Pip vs Conda: Differences and Comparisons</a></li><li><a href="https://virtualenv.pypa.io/en/stable/">virtualenv官方网站</a></li><li><a href="https://docs.anaconda.com/anaconda/install/mac-os#macos-graphical-install">macOS系统安装Anaconda的官方教程</a></li><li><a href="https://docs.anaconda.com/anaconda/install/windows">Windows系统安装Anaconda的官方教程</a></li><li><a href="https://docs.anaconda.com/anaconda/install/linux">Linux系统安装Anaconda的官方教程</a></li><li><a href="https://conda.io/projects/conda/en/latest/user-guide/getting-started.html#managing-conda">conda官方使用指南</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Anaconda </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/03/21/hello-world/"/>
      <url>/2022/03/21/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start">Quick Start</h2><h3 id="Create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
